{"version":3,"sources":["webpack:///./node_modules/recharts/es6/chart/LineChart.js","webpack:///./src/components/monteCarloChart.js","webpack:///./src/common/stockPriceSimulationDef.js","webpack:///./src/components/stock-price-simulation/StockPriceSimulation.js","webpack:///./src/pages/stock-price-simulation.js","webpack:///./node_modules/@mui/icons-material/Info.js","webpack:///./src/components/stock-price-simulation/StockPriceSimulation.module.scss"],"names":["LineChart","chartName","GraphicalChild","axisComponents","axisType","AxisComp","formatAxisMap","CustomizedLabel","_PureComponent","apply","arguments","_inheritsLoose","prototype","render","x","y","stroke","value","fontSize","this","props","React","createElement","dy","fill","textAnchor","PureComponent","MonteCarloChart","_ref","data","iteration","info","show_mean_label","modal_mode","dataLines","Array","map","index","Line","key","shortid","generate","type","dataKey","String","padStart","dot","strokeWidth","optionReferenceLines","Fragment","ReferenceLine","strike","label","position","strokeDasharray","cost","xAxisLabel","Label","symbol","offset","chartStyle","width","window","innerWidth","height","innerHeight","maxWidth","maxHeight","style","ResponsiveContainer","margin","top","right","left","bottom","CartesianGrid","XAxis","YAxis","domain","Tooltip","itemSorter","item","name","Query_Def","parameters","display_name","val","gridsm","min","max","ParameterNodesField","queryParameterRef","queryParameterCurrentRef","genParameterField","inputRef","Grid","md","xs","noValidate","autoComplete","TextField","id","className","StockPriceSimulationStyle","valueText","variant","defaultValue","size","current","FetchNornFinanceAPIServer","_ref2","FetchNornFinanceAPIServerRef","useFetchNornFinanceAPIServer","useFetch","NornFinanceAPIServerDomain","cachePolicy","server","MonteCarloChartComp","_ref3","MonteCarloChartCompRef","chart","setChart","useState","StockPriceSimulation","_ref4","loadingAnimeRef","modalWindowRef","useRef","popModalWindow","popPureModal","forEach","createRef","useEffect","setLoading","commonStyle","defaultFont","container","queryPannel","parameterTitle","Typography","gutterBottom","component","NoMaxWidthTooltip","arrow","title","whiteSpace","lineHeight","textAlign","QueryNote","IconButton","onClick","open","NornFinanceAPIServerGithub","InfoIcon","color","parameterBlock","spacing","Box","display","justifyContent","ThemeProvider","theme","createTheme","palette","primary","blue","Button","isMobile","queryBtnMobile","queryBtn","startIcon","SearchIcon","args","reduce","accumulator","currentValue","currentIndex","push","console","log","some","element","query_string","Object","keys","join","Promise","all","GetDataByFetchObj","then","allResponses","length","chartData","sim_count","mean_point","mean_index","d","parseInt","data_points","data_i","error","catch","ModalWindow","StockPriceSimulationPage","getLoading","StylesProvider","injectFirst","SEO","Layout","LoadingAnime","_interopRequireDefault","defineProperty","exports","default","_createSvgIcon","_jsxRuntime","jsx","module"],"mappings":"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","file":"component---src-pages-stock-price-simulation-js-a3d6dc2687f2a95fd026.js","sourcesContent":["/**\n * @fileOverview Line Chart\n */\nimport { generateCategoricalChart } from './generateCategoricalChart';\nimport { Line } from '../cartesian/Line';\nimport { XAxis } from '../cartesian/XAxis';\nimport { YAxis } from '../cartesian/YAxis';\nimport { formatAxisMap } from '../util/CartesianUtils';\nexport var LineChart = generateCategoricalChart({\n  chartName: 'LineChart',\n  GraphicalChild: Line,\n  axisComponents: [{\n    axisType: 'xAxis',\n    AxisComp: XAxis\n  }, {\n    axisType: 'yAxis',\n    AxisComp: YAxis\n  }],\n  formatAxisMap: formatAxisMap\n});","import React, { PureComponent } from 'react'\r\nimport shortid from 'shortid'\r\nimport {\r\n  LineChart,\r\n  Line,\r\n  Label,\r\n  XAxis,\r\n  YAxis,\r\n  CartesianGrid,\r\n  Tooltip,\r\n  ReferenceLine,\r\n  ResponsiveContainer\r\n} from 'recharts'\r\n\r\n\r\nclass CustomizedLabel extends PureComponent {\r\n  render() {\r\n    const { x, y, stroke, value, fontSize } = this.props;\r\n\r\n    return (\r\n      <text x={x} y={y} dy={-4} fill={stroke} fontSize={fontSize} textAnchor=\"middle\">\r\n        {value}\r\n      </text>\r\n    );\r\n  }\r\n}\r\n\r\nconst MonteCarloChart = ({ data, iteration, info, show_mean_label=true, modal_mode=true }) => {\r\n\r\n  const dataLines = Array(iteration).fill(0).map((value, index) => {\r\n    return <Line key={shortid.generate()}  type=\"monotone\" dataKey={'Path-'+String(index).padStart(2, '0')} stroke={'#d3d3d3'} dot={false} strokeWidth={2}/>\r\n  })\r\n  // console.log(dataLines)\r\n  const optionReferenceLines = \"strike\" in info && \"cost\" in info ? \r\n  <>          \r\n    <ReferenceLine y={info.strike} label={{ position: 'insideBottomLeft',  value: 'Strike: ' + info.strike, fill: 'red', fontSize: 14 }} stroke=\"red\" strokeDasharray=\"3 3\" />\r\n    <ReferenceLine y={info.cost} label={{ position: 'insideTopLeft',  value: 'Cost: ' + info.cost, fill: 'blue', fontSize: 14 }} stroke=\"blue\" strokeDasharray=\"3 3\" />\r\n  </> : <></>\r\n\r\n  const xAxisLabel = \"symbol\" in info ? \r\n  <Label value={\"Symbol: \" + info.symbol} offset={5} position=\"bottom\" fill='#8884d8' fontSize={16} /> : <></>\r\n\r\n  const chartStyle = modal_mode ? { width: (window.innerWidth - 100) + 'px', height: (window.innerHeight - 100) + 'px', maxWidth: '1200px', maxHeight: '600px' } : {width: '100%', height: '100%'}\r\n\r\n  return (\r\n    <div style={chartStyle}>\r\n      <ResponsiveContainer width=\"100%\" height=\"100%\">\r\n        <LineChart\r\n          data={data}\r\n          margin={{\r\n            top: 5,\r\n            right: 30,\r\n            left: 20,\r\n            bottom: 20,\r\n          }}\r\n        >\r\n          <CartesianGrid strokeDasharray=\"3 3\" />\r\n          <XAxis dataKey=\"Name\">\r\n            {xAxisLabel}\r\n          </XAxis>\r\n          <YAxis domain={['auto', 'auto']} />\r\n          <Tooltip itemSorter={item => item.name}/>\r\n          {dataLines}\r\n          <Line type=\"monotone\" dataKey=\"Mean\" stroke=\"#FF8042\" strokeWidth={3} label={show_mean_label ? <CustomizedLabel stroke={\"#FF8042\"} fontSize={14}/> : <></>} />\r\n          {optionReferenceLines}\r\n        </LineChart>\r\n      </ResponsiveContainer>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nexport default MonteCarloChart\r\n","\r\nexport const Query_Def = {\r\n    parameters: [\r\n      {\r\n        name: \"symbol\",\r\n        display_name: \"Symbol\",\r\n        val: \"THO\",\r\n        gridsm: 1,\r\n      },\r\n      {\r\n        name: \"days\",\r\n        display_name: \"Simulation Days\",\r\n        val: \"30\",\r\n        min: 1,\r\n        max: 252,\r\n        gridsm: 1,\r\n      },\r\n      {\r\n        name: \"iteration\",\r\n        display_name: \"Iteration\",\r\n        val: \"50\",\r\n        min: 1,\r\n        max: 100,\r\n        gridsm: 1,\r\n      },\r\n      {\r\n        name: \"ewma_his_vol_period\",\r\n        display_name: \"EWMA History Volatility Period\",\r\n        val: \"21\",\r\n        gridsm: 2,\r\n      },\r\n      {\r\n        name: \"ewma_his_vol_lambda\",\r\n        display_name: \"EWMA History Volatility Lambda\",\r\n        val: \"0.94\",\r\n        gridsm: 2,\r\n      },\r\n      {\r\n        name: \"mu\",\r\n        display_name: \"Expected Return (default: 1yr data)\",\r\n        val: \"\",\r\n        gridsm: 2,\r\n      },\r\n      {\r\n        name: \"vol\",\r\n        display_name: \"Volatility (default: EWMA Vol data)\",\r\n        val: \"\",\r\n        gridsm: 2,\r\n      },\r\n    ]\r\n  }\r\n  ","import React, { useState, useEffect, useRef, createRef } from 'react'\r\nimport SearchIcon from '@mui/icons-material/Search'\r\nimport IconButton from '@mui/material/IconButton'\r\nimport InfoIcon from '@mui/icons-material/Info'\r\nimport TextField from '@mui/material/TextField'\r\nimport Button from '@mui/material/Button'\r\nimport Box from '@mui/material/Box'\r\nimport Grid from '@mui/material/Grid'\r\nimport Typography from '@mui/material/Typography'\r\nimport { blue } from '@mui/material/colors'\r\nimport { createTheme } from '@mui/material/styles'\r\nimport { ThemeProvider } from '@mui/styles'\r\nimport shortid from 'shortid'\r\nimport useFetch from 'use-http'\r\nimport { isMobile } from 'react-device-detect'\r\n\r\nimport ModalWindow from '../modalWindow'\r\n\r\nimport { NoMaxWidthTooltip, GetDataByFetchObj } from '../../common/reactUtils'\r\nimport { Query_Def } from '../../common/stockPriceSimulationDef'\r\nimport { NornFinanceAPIServerDomain, QueryNote, NornFinanceAPIServerGithub } from '../../common/common'\r\nimport MonteCarloChart from '../monteCarloChart'\r\n\r\nimport commonStyle from '../common.module.scss'\r\nimport StockPriceSimulationStyle from './StockPriceSimulation.module.scss'\r\n\r\n// query parameter\r\nconst genParameterField = (inputRef, name, value, display_name, gridsm) => {\r\n  // add key to force re-render component\r\n  return (\r\n    <Grid item md={gridsm} xs={12} key={shortid.generate()}>\r\n      <form noValidate autoComplete=\"off\">\r\n        <TextField id={name} className={StockPriceSimulationStyle.valueText} label={display_name} variant=\"outlined\" defaultValue={value} size=\"small\" inputRef={inputRef} />\r\n      </form>\r\n    </Grid>\r\n  )\r\n}\r\n\r\nconst ParameterNodesField = ({ queryParameterRef, queryParameterCurrentRef }) => {\r\n  return Query_Def.parameters.map((value, index) => {\r\n    return (\r\n      genParameterField(queryParameterRef.current[index], value.name, queryParameterCurrentRef.current === null ? value.val : queryParameterCurrentRef.current[index], value.display_name, value.gridsm)\r\n    )\r\n  })\r\n}\r\n\r\nconst FetchNornFinanceAPIServer = ({FetchNornFinanceAPIServerRef}) => {\r\n  const useFetchNornFinanceAPIServer = useFetch(\"https://\" + NornFinanceAPIServerDomain, { cachePolicy: 'no-cache' })\r\n  FetchNornFinanceAPIServerRef.current.server = useFetchNornFinanceAPIServer\r\n  return <></>\r\n}\r\n\r\nconst MonteCarloChartComp = ({MonteCarloChartCompRef}) => {\r\n  const [chart, setChart] = useState(<></>)\r\n  MonteCarloChartCompRef.current.setChart = setChart\r\n  return chart\r\n}\r\n\r\nconst StockPriceSimulation = ({loadingAnimeRef}) => {\r\n\r\n  const modalWindowRef = useRef({\r\n    popModalWindow: null,\r\n    popPureModal: null,\r\n  })\r\n  \r\n  const FetchNornFinanceAPIServerRef = useRef({\r\n    server: null\r\n  })\r\n\r\n  const MonteCarloChartCompRef  = useRef({\r\n    setChart: null\r\n  })\r\n\r\n  const queryParameterRef = useRef([])\r\n  Query_Def.parameters.forEach((value, index) => {\r\n    queryParameterRef.current[index] = createRef()\r\n    queryParameterRef.current[index].current = { value: value.val }\r\n  })\r\n  const queryParameterCurrentRef = useRef(null)\r\n  \r\n  useEffect(() => {\r\n    // componentDidMount is here!\r\n    // componentDidUpdate is here!\r\n    loadingAnimeRef.current.setLoading(false)\r\n    return () => {\r\n      // componentWillUnmount is here!\r\n    }\r\n  }, [])\r\n\r\n  return (\r\n    <div className={commonStyle.defaultFont + ' ' + StockPriceSimulationStyle.container}>\r\n      <div className={StockPriceSimulationStyle.queryPannel}>\r\n        <div className={StockPriceSimulationStyle.parameterTitle}>\r\n          <Typography variant=\"h6\" gutterBottom component=\"div\">\r\n            {'Query Parameters'}\r\n            <NoMaxWidthTooltip arrow title={<span style={{ whiteSpace: 'pre-line', fontSize: '14px', lineHeight: '20px', textAlign: 'center'}}>{QueryNote}</span>} >\r\n              <IconButton onClick={() => window.open(NornFinanceAPIServerGithub, \"_blank\")}>\r\n                <InfoIcon color=\"action\"/>\r\n              </IconButton>\r\n            </NoMaxWidthTooltip>\r\n          </Typography>\r\n        </div>\r\n        <div className={StockPriceSimulationStyle.parameterBlock}>\r\n          <Grid container spacing={2}>\r\n            <ParameterNodesField queryParameterRef={queryParameterRef} queryParameterCurrentRef={queryParameterCurrentRef}/>\r\n            <Grid item md={1} xs={12} >\r\n              <Box display=\"flex\" justifyContent=\"flex-end\">\r\n                <ThemeProvider theme={createTheme({ palette: { primary: blue } })}>\r\n                  <Button className={isMobile ? StockPriceSimulationStyle.queryBtnMobile : StockPriceSimulationStyle.queryBtn} variant=\"contained\" color=\"primary\" startIcon={<SearchIcon />} onClick={() => {\r\n \r\n                    loadingAnimeRef.current.setLoading(true)\r\n                    queryParameterCurrentRef.current = []\r\n                    let args = Query_Def.parameters.reduce((accumulator, currentValue, currentIndex) => {\r\n                      accumulator[currentValue.name] = queryParameterRef.current[currentIndex].current.value\r\n                      queryParameterCurrentRef.current.push(accumulator[currentValue.name])\r\n                      return accumulator\r\n                    }, {})\r\n                    console.log(args)\r\n\r\n                    // check parameter\r\n                    function invalid_min_max(element) {  \r\n                      return ('min' in element && element['min'] > args[element['name']]) || ('max' in element && element['max'] < args[element['name']])\r\n                    } \r\n                    if (Query_Def.parameters.some(invalid_min_max)) {\r\n                      loadingAnimeRef.current.setLoading(false)\r\n                      modalWindowRef.current.popModalWindow(<div>The query parameter is not valid or overy limit.</div>)\r\n                      return\r\n                    }\r\n                   \r\n                    const query_string = '/stock/price-simulation-by-mc?' + Object.keys(args).map(function (key) { return args[key]!=\"\" ? key + \"=\" + args[key] : \"\" }).join(\"&\")\r\n                    Promise.all([\r\n                      GetDataByFetchObj(query_string, FetchNornFinanceAPIServerRef.current.server),\r\n                    ]).then((allResponses) => {\r\n                      console.log(allResponses)\r\n                      if (allResponses.length === 1 && allResponses[0] !== null) {\r\n                        let chartData = []\r\n                        let iteration = allResponses[0]['data'].length\r\n                        let sim_count = allResponses[0]['mean'].length\r\n                        allResponses[0]['mean'].forEach((mean_point, mean_index) => {\r\n                          let d = {'Mean': parseInt(mean_point * 100, 10) / 100.0, 'Name': 'Day' + mean_index}\r\n                          allResponses[0]['data'].forEach((data_points, data_i) => {\r\n                            d['Path-'+String(data_i).padStart(2, '0')] =  parseInt(data_points[mean_index] * 100, 10) / 100.0\r\n                          })\r\n                          chartData.push(d)\r\n                        })\r\n                        MonteCarloChartCompRef.current.setChart(<MonteCarloChart data={chartData} iteration={iteration} info={{}} show_mean_label={sim_count<=40} modal_mode={false}/>)\r\n                      } else {\r\n                        console.error(\"Call simulation api failed\")\r\n                        modalWindowRef.current.popModalWindow(<div>Call simulation api failed</div>)\r\n                      }\r\n                      loadingAnimeRef.current.setLoading(false)\r\n                    }).catch(() => {\r\n                      console.error(\"Call simulation api failed...\")\r\n                      modalWindowRef.current.popModalWindow(<div>Call simulation api failed...</div>)\r\n                      loadingAnimeRef.current.setLoading(false)\r\n                    })\r\n                  }}>{'Simulation'}</Button>\r\n                </ThemeProvider>\r\n              </Box>\r\n            </Grid>\r\n          </Grid>\r\n        </div>\r\n      </div>\r\n      <div className={StockPriceSimulationStyle.chart}>\r\n        <MonteCarloChartComp MonteCarloChartCompRef={MonteCarloChartCompRef}/>\r\n      </div>\r\n      <ModalWindow modalWindowRef={modalWindowRef} />\r\n      <FetchNornFinanceAPIServer FetchNornFinanceAPIServerRef={FetchNornFinanceAPIServerRef}/>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default StockPriceSimulation\r\n","import React, { useRef } from 'react'\r\nimport { StylesProvider } from '@mui/styles'\r\n\r\nimport Layout from '../components/layout'\r\nimport StockPriceSimulation from '../components/stock-price-simulation/StockPriceSimulation'\r\nimport LoadingAnime from '../components/loadingAnime'\r\nimport SEO from '../components/seo'\r\n\r\nconst StockPriceSimulationPage = () => {\r\n\r\n  const loadingAnimeRef = useRef({\r\n    getLoading: null,\r\n    setLoading: null\r\n  })\r\n\r\n  return (\r\n    <StylesProvider injectFirst>\r\n      <SEO />\r\n      <Layout >\r\n        <StockPriceSimulation loadingAnimeRef={loadingAnimeRef} />\r\n      </Layout>\r\n      <LoadingAnime loadingAnimeRef={loadingAnimeRef} />\r\n    </StylesProvider>\r\n  )\r\n}\r\n\r\nexport default StockPriceSimulationPage\r\n","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = exports.default = (0, _createSvgIcon.default)(/*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2m1 15h-2v-6h2zm0-8h-2V7h2z\"\n}), 'Info');","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"StockPriceSimulation-module--container--oAaYx\",\"queryPannel\":\"StockPriceSimulation-module--queryPannel--3DlMY\",\"parameterTitle\":\"StockPriceSimulation-module--parameterTitle--Yjfuv\",\"parameterBlock\":\"StockPriceSimulation-module--parameterBlock--31zQ1\",\"valueText\":\"StockPriceSimulation-module--valueText--1U149\",\"queryBtn\":\"StockPriceSimulation-module--queryBtn--8XrjZ\",\"queryBtnMobile\":\"StockPriceSimulation-module--queryBtnMobile--3Te8v\",\"chart\":\"StockPriceSimulation-module--chart--2D8cw\"};"],"sourceRoot":""}