{"version":3,"sources":["webpack:///./node_modules/shortid/lib/is-valid.js","webpack:///./node_modules/recharts/es6/chart/LineChart.js","webpack:///./src/components/market-correlation-matrix/marketCorrelationMatrix.module.scss","webpack:///./node_modules/nanoid/format.browser.js","webpack:///./node_modules/shortid/lib/index.js","webpack:///./node_modules/shortid/lib/random/random-byte-browser.js","webpack:///./src/components/market-correlation-matrix/rollingCorrelationChart.js","webpack:///./src/components/market-correlation-matrix/marketCorrelationMatrix.js","webpack:///./src/pages/market-correlation-matrix.js","webpack:///./node_modules/shortid/lib/build.js","webpack:///./node_modules/shortid/lib/alphabet.js","webpack:///./node_modules/shortid/lib/random/random-from-seed.js","webpack:///./node_modules/shortid/index.js","webpack:///./node_modules/shortid/lib/util/cluster-worker-id-browser.js","webpack:///./node_modules/shortid/lib/generate.js"],"names":["alphabet","module","exports","id","length","RegExp","get","replace","test","LineChart","chartName","GraphicalChild","axisComponents","axisType","AxisComp","formatAxisMap","random","size","mask","Math","log","LN2","step","bytes","i","build","isValid","clusterWorkerId","generate","seed","seedValue","worker","workerId","characters","newCharacters","undefined","shuffled","randomByte","crypto","window","msCrypto","getRandomValues","Uint8Array","push","floor","RollingCorrelationChart","_ref","data","description","React","createElement","style","width","innerWidth","height","innerHeight","maxWidth","maxHeight","ResponsiveContainer","margin","top","right","left","bottom","CartesianGrid","strokeDasharray","XAxis","dataKey","tickFormatter","tickItem","moment","format","YAxis","domain","Tooltip","Legend","Line","type","name","stroke","dot","pcorr","x","y","sumX","sumY","sumXY","sumX2","sumY2","minLength","min","forEach","reduce","xi","idx","yi","sqrt","getTableCategories","table","map","category","symbol","src","table2MatrixData","categories","acc","rowSymbolSrc","find","d","categoryCorrelations","acc2","colSymbolSrc","value","correlations","pValue","dataUrl","row","findIndex","p","column","color","correlation","alpha","abs","isNaN","negativeColor","positiveColor","concat","_toConsumableArray","MatrixNode","popperTipRef","modalWindowRef","nodeStyle","marketCorrelationMatrixStyle","matrixNode","matrixNodeFirstRow","matrixNodeFirstColumn","message","fetch1","useFetch","cachePolicy","fetch2","className","background","onMouseOver","event","current","setOpen","currentTarget","onMouseOut","onClick","getMarketData","async","fetchObj","fileName","match","join","resp_data","response","ok","Promise","all","then","allResponses","overDateInterval","d1","d2","days","Date","parse","convertDictData","arr","key_data_val","key_data_is_monthly_intervals","v","parseFloat","dt","date_offset","getMonth","toString","padStart","getFullYear","dataDict1","dataDict2","keys","getIntersectionKey","o1","o2","Object","filter","hasOwnProperty","bind","slidingWindowSize","startCalcTime","rollingCorrelationWindowDays","max","pcorrData","dataX","dataY","slice","e","score","popModalWindow","catch","toFixed","PopperTip","_ref2","a","msg","setAnchorEl","setMessage","setOpenPopper","getOpen","openPopper","useState","anchorEl","Popper","open","transition","_ref3","TransitionProps","Fade","assign","timeout","Paper","padding","whiteSpace","lineHeight","textAlign","MarketCorrelationMatrix","_ref4","loadingAnimeRef","useRef","popPureModal","setTable","useEffect","console","setLoading","getCorrelationTable","Fragment","container","display","justifyItems","alignItems","gridTemplateColumns","repeat","matrixColTitle","key","shortid","val","renderRowsTitleAndData","output","matrixRowTitle","Link","href","target","rel","ModalWindow","MarketCorrelationMatrixPage","getLoading","StylesProvider","injectFirst","SEO","Layout","LoadingAnime","counter","previousSeconds","str","seconds","now","previousSeed","randomFromSeed","ORIGINAL","reset","setCharacters","_alphabet_","Error","unique","split","item","ind","lastIndexOf","getShuffled","characterIndex","sourceArray","targetArray","r","nextValue","splice","shuffle","lookup","index","_seed_","number","done","loopCounter","pow"],"mappings":"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","file":"component---src-pages-market-correlation-matrix-js-e0536556941d231f3a67.js","sourcesContent":["'use strict';\n\nvar alphabet = require('./alphabet');\nfunction isShortId(id) {\n  if (!id || typeof id !== 'string' || id.length < 6) {\n    return false;\n  }\n  var nonAlphabetic = new RegExp('[^' + alphabet.get().replace(/[|\\\\{}()[\\]^$+*?.-]/g, '\\\\$&') + ']');\n  return !nonAlphabetic.test(id);\n}\nmodule.exports = isShortId;","/**\n * @fileOverview Line Chart\n */\nimport { generateCategoricalChart } from './generateCategoricalChart';\nimport { Line } from '../cartesian/Line';\nimport { XAxis } from '../cartesian/XAxis';\nimport { YAxis } from '../cartesian/YAxis';\nimport { formatAxisMap } from '../util/CartesianUtils';\nexport var LineChart = generateCategoricalChart({\n  chartName: 'LineChart',\n  GraphicalChild: Line,\n  axisComponents: [{\n    axisType: 'xAxis',\n    AxisComp: XAxis\n  }, {\n    axisType: 'yAxis',\n    AxisComp: YAxis\n  }],\n  formatAxisMap: formatAxisMap\n});","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"marketCorrelationMatrix-module--container--Xm37f\",\"matrixColTitle\":\"marketCorrelationMatrix-module--matrixColTitle--2Xiij\",\"matrixRowTitle\":\"marketCorrelationMatrix-module--matrixRowTitle--2Yamv\",\"matrixNodeFirstRow\":\"marketCorrelationMatrix-module--matrixNodeFirstRow--3-Qv7\",\"matrixNodeFirstColumn\":\"marketCorrelationMatrix-module--matrixNodeFirstColumn--1iHHg\",\"matrixNode\":\"marketCorrelationMatrix-module--matrixNode--2o4fm\"};","// This file replaces `format.js` in bundlers like webpack or Rollup,\n// according to `browser` config in `package.json`.\n\nmodule.exports = function (random, alphabet, size) {\n  // We can’t use bytes bigger than the alphabet. To make bytes values closer\n  // to the alphabet, we apply bitmask on them. We look for the closest\n  // `2 ** x - 1` number, which will be bigger than alphabet size. If we have\n  // 30 symbols in the alphabet, we will take 31 (00011111).\n  // We do not use faster Math.clz32, because it is not available in browsers.\n  var mask = (2 << Math.log(alphabet.length - 1) / Math.LN2) - 1;\n  // Bitmask is not a perfect solution (in our example it will pass 31 bytes,\n  // which is bigger than the alphabet). As a result, we will need more bytes,\n  // than ID size, because we will refuse bytes bigger than the alphabet.\n\n  // Every hardware random generator call is costly,\n  // because we need to wait for entropy collection. This is why often it will\n  // be faster to ask for few extra bytes in advance, to avoid additional calls.\n\n  // Here we calculate how many random bytes should we call in advance.\n  // It depends on ID length, mask / alphabet size and magic number 1.6\n  // (which was selected according benchmarks).\n\n  // -~f => Math.ceil(f) if n is float number\n  // -~i => i + 1 if n is integer number\n  var step = -~(1.6 * mask * size / alphabet.length);\n  var id = '';\n  while (true) {\n    var bytes = random(step);\n    // Compact alternative for `for (var i = 0; i < step; i++)`\n    var i = step;\n    while (i--) {\n      // If random byte is bigger than alphabet even after bitmask,\n      // we refuse it by `|| ''`.\n      id += alphabet[bytes[i] & mask] || '';\n      // More compact than `id.length + 1 === size`\n      if (id.length === +size) return id;\n    }\n  }\n};","'use strict';\n\nvar alphabet = require('./alphabet');\nvar build = require('./build');\nvar isValid = require('./is-valid');\n\n// if you are using cluster or multiple servers use this to make each instance\n// has a unique value for worker\n// Note: I don't know if this is automatically set when using third\n// party cluster solutions such as pm2.\nvar clusterWorkerId = require('./util/cluster-worker-id') || 0;\n\n/**\n * Set the seed.\n * Highly recommended if you don't want people to try to figure out your id schema.\n * exposed as shortid.seed(int)\n * @param seed Integer value to seed the random alphabet.  ALWAYS USE THE SAME SEED or you might get overlaps.\n */\nfunction seed(seedValue) {\n  alphabet.seed(seedValue);\n  return module.exports;\n}\n\n/**\n * Set the cluster worker or machine id\n * exposed as shortid.worker(int)\n * @param workerId worker must be positive integer.  Number less than 16 is recommended.\n * returns shortid module so it can be chained.\n */\nfunction worker(workerId) {\n  clusterWorkerId = workerId;\n  return module.exports;\n}\n\n/**\n *\n * sets new characters to use in the alphabet\n * returns the shuffled alphabet\n */\nfunction characters(newCharacters) {\n  if (newCharacters !== undefined) {\n    alphabet.characters(newCharacters);\n  }\n  return alphabet.shuffled();\n}\n\n/**\n * Generate unique id\n * Returns string id\n */\nfunction generate() {\n  return build(clusterWorkerId);\n}\n\n// Export all other functions as properties of the generate function\nmodule.exports = generate;\nmodule.exports.generate = generate;\nmodule.exports.seed = seed;\nmodule.exports.worker = worker;\nmodule.exports.characters = characters;\nmodule.exports.isValid = isValid;","'use strict';\n\nvar crypto = typeof window === 'object' && (window.crypto || window.msCrypto); // IE 11 uses window.msCrypto\n\nvar randomByte;\nif (!crypto || !crypto.getRandomValues) {\n  randomByte = function (size) {\n    var bytes = [];\n    for (var i = 0; i < size; i++) {\n      bytes.push(Math.floor(Math.random() * 256));\n    }\n    return bytes;\n  };\n} else {\n  randomByte = function (size) {\n    return crypto.getRandomValues(new Uint8Array(size));\n  };\n}\nmodule.exports = randomByte;","import React from 'react'\r\nimport {\r\n  LineChart,\r\n  Line,\r\n  XAxis,\r\n  YAxis,\r\n  CartesianGrid,\r\n  Tooltip,\r\n  Legend,\r\n  ResponsiveContainer\r\n} from 'recharts'\r\n\r\nimport moment from 'moment'\r\n\r\nconst RollingCorrelationChart = ({ data, description }) => {\r\n  return (\r\n    <div style={{ width: (window.innerWidth - 100) + 'px', height: (window.innerHeight - 100) + 'px', maxWidth: '1200px', maxHeight: '600px' }}>\r\n      <ResponsiveContainer width=\"100%\" height=\"100%\">\r\n        <LineChart\r\n          data={data}\r\n          margin={{\r\n            top: 5,\r\n            right: 30,\r\n            left: 20,\r\n            bottom: 5,\r\n          }}\r\n        >\r\n          <CartesianGrid strokeDasharray=\"3 3\" />\r\n          <XAxis dataKey=\"Date\" tickFormatter={(tickItem) => {\r\n            return moment(tickItem).format('MM/DD/YYYY')\r\n          }} />\r\n          <YAxis domain={[-1, 1]}/>\r\n          <Tooltip />\r\n          <Legend />\r\n          <Line type=\"monotone\" name={description} dataKey=\"Score\" stroke=\"#8884d8\" dot={false} />\r\n        </LineChart>\r\n      </ResponsiveContainer>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nexport default RollingCorrelationChart\r\n","import React, { useState, useRef, useEffect } from 'react'\r\nimport Link from '@mui/material/Link'\r\nimport Popper from '@mui/material/Popper'\r\nimport Fade from '@mui/material/Fade'\r\nimport Paper from '@mui/material/Paper'\r\nimport shortid from 'shortid'\r\nimport useFetch from 'use-http'\r\n\r\nimport ModalWindow from '../modalWindow'\r\nimport { rollingCorrelationWindowDays } from '../../common/common'\r\nimport RollingCorrelationChart from './rollingCorrelationChart'\r\n\r\nimport marketCorrelationMatrixStyle from './marketCorrelationMatrix.module.scss'\r\n\r\nconst pcorr = (x, y) => {\r\n  let sumX = 0,\r\n    sumY = 0,\r\n    sumXY = 0,\r\n    sumX2 = 0,\r\n    sumY2 = 0;\r\n  const minLength = x.length = y.length = Math.min(x.length, y.length),\r\n    reduce = (xi, idx) => {\r\n      const yi = y[idx];\r\n      sumX += xi;\r\n      sumY += yi;\r\n      sumXY += xi * yi;\r\n      sumX2 += xi * xi;\r\n      sumY2 += yi * yi;\r\n    }\r\n  x.forEach(reduce)\r\n  return (minLength * sumXY - sumX * sumY) / Math.sqrt((minLength * sumX2 - sumX * sumX) * (minLength * sumY2 - sumY * sumY))\r\n}\r\n\r\nconst getTableCategories = (table) => {\r\n  return table.map((category) => {\r\n    return {\r\n      symbol: category.symbol,\r\n      src: category.src\r\n    }\r\n  })\r\n}\r\n\r\nconst table2MatrixData = (table) => {\r\n\r\n  const categories = getTableCategories(table)\r\n\r\n  const negativeColor = (correlation) => {\r\n    const alpha = Math.abs(correlation)\r\n    return `rgba(243, 87, 86, ${isNaN(alpha) ? 0 : alpha})`\r\n  }\r\n\r\n  const positiveColor = (correlation) => {\r\n    const alpha = Math.abs(correlation);\r\n    return `rgba(46, 233, 255, ${isNaN(alpha) ? 0 : alpha})`\r\n  }\r\n\r\n  const parsedData = categories.reduce((acc, rowSymbolSrc) => {\r\n    const category = table.find((d) => d.symbol === rowSymbolSrc.symbol)\r\n    const categoryCorrelations = categories.reduce((acc2, colSymbolSrc) => {\r\n      const value = category.correlations[colSymbolSrc.symbol]['value']\r\n      const pValue = category.correlations[colSymbolSrc.symbol]['p_value']\r\n      const dataUrl = category['dataUrl']\r\n      const row = categories.findIndex(p => p.symbol == rowSymbolSrc.symbol)\r\n      const column = categories.findIndex(p => p.symbol == colSymbolSrc.symbol)\r\n      const color =\r\n        value < 0 ? negativeColor(value) : positiveColor(value)\r\n\r\n      return [\r\n        ...acc2,\r\n        {\r\n          colSymbolSrc,\r\n          rowSymbolSrc,\r\n          row,\r\n          column,\r\n          value,\r\n          pValue,\r\n          dataUrl,\r\n          color\r\n        }\r\n      ]\r\n    }, [])\r\n    return [...acc, ...categoryCorrelations];\r\n  }, [])\r\n\r\n  return parsedData\r\n}\r\n\r\nconst MatrixNode = ({ data, popperTipRef, modalWindowRef }) => {\r\n  let nodeStyle = marketCorrelationMatrixStyle.matrixNode\r\n  if (data.row === 0) {\r\n    nodeStyle += ' ' + marketCorrelationMatrixStyle.matrixNodeFirstRow\r\n  }\r\n\r\n  if (data.column === 0) {\r\n    nodeStyle += ' ' + marketCorrelationMatrixStyle.matrixNodeFirstColumn\r\n  }\r\n\r\n  const message = \r\n`${data.colSymbolSrc.symbol} has a ${data.value} correlation to ${data.rowSymbolSrc.symbol}\r\np-value: ${data.pValue}\r\n`\r\n  const fetch1 = useFetch({ cachePolicy: 'no-cache' })\r\n  const fetch2 = useFetch({ cachePolicy: 'no-cache' })\r\n\r\n  return (\r\n    <div className={nodeStyle}>\r\n      <div style={{ background: data.color }} onMouseOver={(event)=>{\r\n        popperTipRef.current.setOpen(true, event.currentTarget, message)\r\n      }} onMouseOut={() => {\r\n        popperTipRef.current.setOpen(false)\r\n      }} onClick={()=>{\r\n        const getMarketData = async (src, symbol, fetchObj) => {\r\n          let fileName = (src + '_' + symbol).match(/\\w+/gi).join('_') + '.json'\r\n          const resp_data = await fetchObj.get('/norn-data/markets/' + fileName)\r\n          if (fetchObj.response.ok && resp_data.data && resp_data.data.length > 0) {\r\n            return resp_data.data\r\n          }\r\n          else {\r\n            return null\r\n          }\r\n        }\r\n\r\n        Promise.all([\r\n          getMarketData(data.colSymbolSrc.src, data.colSymbolSrc.symbol, fetch1),\r\n          getMarketData(data.rowSymbolSrc.src, data.rowSymbolSrc.symbol, fetch2),\r\n        ]).then((allResponses) => {\r\n          // console.log(allResponses)\r\n          if (allResponses.length === 2 && allResponses[0] !== null && allResponses[1] !== null) {\r\n            \r\n            const overDateInterval = (d1, d2, days) => {\r\n              return Date.parse(d1) - Date.parse(d2) > days * 24 * 60 * 60 * 1000\r\n            }\r\n\r\n            const convertDictData = (arr) => {\r\n              let key_data_val = {}\r\n              const key_data_is_monthly_intervals = overDateInterval(arr[0][\"Date\"], arr[1][\"Date\"], 15)\r\n              arr.forEach((d, i) => {\r\n                let v = d[\"Close\"]\r\n                if (typeof v === 'string') {\r\n                  v = parseFloat(v.replace(\"%\", \"\"))\r\n                }\r\n\r\n                if (key_data_is_monthly_intervals) {\r\n                  let dt = Date.parse(d[\"Date\"])\r\n                  const date_offset = (dt.getMonth() + 1).toString().padStart(2, \"0\") + \"/01/\" + dt.getFullYear().toString()\r\n                  key_data_val[date_offset] = v\r\n                } else {\r\n                  key_data_val[d[\"Date\"]] = v\r\n                }\r\n              })\r\n              return key_data_val\r\n            }\r\n\r\n            let dataDict1 = convertDictData(allResponses[0])\r\n            let dataDict2 = convertDictData(allResponses[1])\r\n\r\n            const getIntersectionKey = (o1, o2) => {\r\n              return Object.keys(o1).filter({}.hasOwnProperty.bind(o2));\r\n            }\r\n\r\n            const keys = getIntersectionKey(dataDict1, dataDict2)            \r\n            let slidingWindowSize = 2\r\n            let startCalcTime = Date.parse(keys[keys.length - 1]) + rollingCorrelationWindowDays * 24 * 60 * 60 * 1000\r\n            for (let i = keys.length - 2; i>=0; i--) {\r\n              if (startCalcTime <= Date.parse(keys[i])) {\r\n                slidingWindowSize = Math.max(slidingWindowSize, keys.length - 1 - i + 1)\r\n                break\r\n              }\r\n            }\r\n\r\n            let pcorrData = []\r\n            for (let i = keys.length - 1 - slidingWindowSize + 1; i >= 0; i--) {\r\n              \r\n              let dataX = []\r\n              let dataY = []\r\n              let dataWindow = keys.slice(i, i + slidingWindowSize)\r\n              dataWindow.forEach((e)=>{\r\n                dataX.push(dataDict1[e])\r\n                dataY.push(dataDict2[e])\r\n              })\r\n              let score = pcorr(dataX, dataY)\r\n              pcorrData.push({ 'Date': keys[i], 'Score': score})\r\n            }\r\n\r\n            // console.log(pcorrData)\r\n            const description = `${data.rowSymbolSrc.symbol} - ${data.colSymbolSrc.symbol} Rolling ${rollingCorrelationWindowDays} days Correlation`\r\n            modalWindowRef.current.popModalWindow(<RollingCorrelationChart data={pcorrData} description={description} />)\r\n          } else {\r\n            modalWindowRef.current.popModalWindow(<div>Load some market data failed</div>)\r\n          }\r\n        }).catch(() => {\r\n          modalWindowRef.current.popModalWindow(<div>Can't draw rolling correlation chart for these market data</div>)\r\n        })\r\n      }}>\r\n        {data.value==='NaN' ? 'NaN' : data.value.toFixed(2).replace(/(\\.0*|(?<=(\\..*))0*)$/, '').replace(\"0.\",\".\")}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst PopperTip = ({ popperTipRef }) =>{\r\n\r\n  // PopperTip API\r\n  popperTipRef.current = {\r\n    setOpen: (v, a=null, msg='') => {\r\n      if (v) {\r\n        setAnchorEl(a)\r\n        setMessage(msg)\r\n      }\r\n      setOpenPopper(v)\r\n    },\r\n    getOpen: () => {\r\n      return openPopper\r\n    }\r\n  }\r\n\r\n  const [openPopper, setOpenPopper] = useState(false)\r\n  const [anchorEl, setAnchorEl] = useState(null)\r\n  const [message, setMessage] = useState('')\r\n\r\n  return (\r\n    <Popper open={openPopper} anchorEl={anchorEl} transition>\r\n      {({ TransitionProps }) => (\r\n        <Fade {...TransitionProps} timeout={350}>\r\n          <Paper style={{padding: '10px'}}>\r\n            <span style={{ whiteSpace: 'pre-line', lineHeight: '20px', textAlign: 'center'}}>{message}</span>\r\n          </Paper>\r\n        </Fade>\r\n      )}\r\n    </Popper>\r\n  )\r\n}\r\n\r\nconst MarketCorrelationMatrix = ({ loadingAnimeRef }) => {\r\n\r\n  const modalWindowRef = useRef({\r\n    popModalWindow: null,\r\n    popPureModal: null,\r\n  })\r\n\r\n  const popperTipRef = useRef({\r\n    setOpen: null,\r\n    getOpen: null,\r\n  })\r\n\r\n  const [table, setTable] = useState([])\r\n\r\n  const { get, response } = useFetch({ cachePolicy: 'no-cache' })\r\n  const getCorrelationTable = async () => {\r\n    const resp_data = await get('/norn-data/market-correlation-matrix.json')\r\n    if (response.ok) {\r\n      console.log(resp_data)\r\n      setTable(resp_data['table'])\r\n    }\r\n    else {\r\n      modalWindowRef.current.popModalWindow(<div>Load market-correlation-matrix.json failed</div>)\r\n      setTable([])\r\n    }\r\n    loadingAnimeRef.current.setLoading(false)\r\n  }\r\n\r\n  const renderColumnTitle = () => {\r\n    return (\r\n      <>\r\n        <div className={marketCorrelationMatrixStyle.matrixColTitle} key={shortid.generate()}></div>\r\n        {getTableCategories(table).map((val) => {\r\n          return <div className={marketCorrelationMatrixStyle.matrixColTitle} key={shortid.generate()}>{val.symbol}</div>\r\n        })}\r\n      </>\r\n    )\r\n  }\r\n\r\n  const renderRowsTitleAndData = () => {\r\n    let output = []\r\n    table2MatrixData(table).forEach((d, i)=>{\r\n      if (i % table.length === 0) {\r\n        output.push(\r\n          <div className={marketCorrelationMatrixStyle.matrixRowTitle} key={shortid.generate()}>\r\n            <Link href={d.dataUrl} target=\"_blank\" rel=\"noreferrer noopener\">\r\n              <span>{d.rowSymbolSrc.symbol}</span>\r\n            </Link>\r\n          </div>)\r\n      }\r\n      output.push(<MatrixNode data={d} popperTipRef={popperTipRef} modalWindowRef={modalWindowRef} key={shortid.generate()} />)\r\n    })\r\n\r\n    return output\r\n  }\r\n\r\n  useEffect(() => {\r\n    // componentDidMount is here!\r\n    // componentDidUpdate is here!\r\n    getCorrelationTable()\r\n    return () => {\r\n      // componentWillUnmount is here!\r\n    }\r\n  }, [])\r\n\r\n  return (\r\n    <>\r\n      <div className={marketCorrelationMatrixStyle.container}>\r\n        <div style={{ display: 'grid', justifyItems: 'center', alignItems: 'center', gridTemplateColumns: '200px ' + '40px '.repeat(getTableCategories(table).length)}}>\r\n          {renderColumnTitle()}\r\n          {renderRowsTitleAndData()}\r\n        </div>\r\n      </div>\r\n      <PopperTip popperTipRef={popperTipRef}/>\r\n      <ModalWindow modalWindowRef={modalWindowRef} />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default MarketCorrelationMatrix\r\n","import React, { useRef } from 'react'\r\nimport { StylesProvider } from '@mui/styles'\r\n\r\nimport Layout from '../components/layout'\r\nimport MarketCorrelationMatrix from '../components/market-correlation-matrix/marketCorrelationMatrix'\r\nimport LoadingAnime from '../components/loadingAnime'\r\nimport SEO from '../components/seo'\r\n\r\nconst MarketCorrelationMatrixPage = () => {\r\n\r\n  const loadingAnimeRef = useRef({\r\n    getLoading: null,\r\n    setLoading: null\r\n  })\r\n\r\n  return (\r\n    <StylesProvider injectFirst>\r\n      <SEO />\r\n      <Layout >\r\n        <MarketCorrelationMatrix loadingAnimeRef={loadingAnimeRef} />\r\n      </Layout>\r\n      <LoadingAnime loadingAnimeRef={loadingAnimeRef} />\r\n    </StylesProvider>\r\n  )\r\n}\r\n\r\nexport default MarketCorrelationMatrixPage\r\n","'use strict';\n\nvar generate = require('./generate');\nvar alphabet = require('./alphabet');\n\n// Ignore all milliseconds before a certain time to reduce the size of the date entropy without sacrificing uniqueness.\n// This number should be updated every year or so to keep the generated id short.\n// To regenerate `new Date() - 0` and bump the version. Always bump the version!\nvar REDUCE_TIME = 1567752802062;\n\n// don't change unless we change the algos or REDUCE_TIME\n// must be an integer and less than 16\nvar version = 7;\n\n// Counter is used when shortid is called multiple times in one second.\nvar counter;\n\n// Remember the last time shortid was called in case counter is needed.\nvar previousSeconds;\n\n/**\n * Generate unique id\n * Returns string id\n */\nfunction build(clusterWorkerId) {\n  var str = '';\n  var seconds = Math.floor((Date.now() - REDUCE_TIME) * 0.001);\n  if (seconds === previousSeconds) {\n    counter++;\n  } else {\n    counter = 0;\n    previousSeconds = seconds;\n  }\n  str = str + generate(version);\n  str = str + generate(clusterWorkerId);\n  if (counter > 0) {\n    str = str + generate(counter);\n  }\n  str = str + generate(seconds);\n  return str;\n}\nmodule.exports = build;","'use strict';\n\nvar randomFromSeed = require('./random/random-from-seed');\nvar ORIGINAL = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ_-';\nvar alphabet;\nvar previousSeed;\nvar shuffled;\nfunction reset() {\n  shuffled = false;\n}\nfunction setCharacters(_alphabet_) {\n  if (!_alphabet_) {\n    if (alphabet !== ORIGINAL) {\n      alphabet = ORIGINAL;\n      reset();\n    }\n    return;\n  }\n  if (_alphabet_ === alphabet) {\n    return;\n  }\n  if (_alphabet_.length !== ORIGINAL.length) {\n    throw new Error('Custom alphabet for shortid must be ' + ORIGINAL.length + ' unique characters. You submitted ' + _alphabet_.length + ' characters: ' + _alphabet_);\n  }\n  var unique = _alphabet_.split('').filter(function (item, ind, arr) {\n    return ind !== arr.lastIndexOf(item);\n  });\n  if (unique.length) {\n    throw new Error('Custom alphabet for shortid must be ' + ORIGINAL.length + ' unique characters. These characters were not unique: ' + unique.join(', '));\n  }\n  alphabet = _alphabet_;\n  reset();\n}\nfunction characters(_alphabet_) {\n  setCharacters(_alphabet_);\n  return alphabet;\n}\nfunction setSeed(seed) {\n  randomFromSeed.seed(seed);\n  if (previousSeed !== seed) {\n    reset();\n    previousSeed = seed;\n  }\n}\nfunction shuffle() {\n  if (!alphabet) {\n    setCharacters(ORIGINAL);\n  }\n  var sourceArray = alphabet.split('');\n  var targetArray = [];\n  var r = randomFromSeed.nextValue();\n  var characterIndex;\n  while (sourceArray.length > 0) {\n    r = randomFromSeed.nextValue();\n    characterIndex = Math.floor(r * sourceArray.length);\n    targetArray.push(sourceArray.splice(characterIndex, 1)[0]);\n  }\n  return targetArray.join('');\n}\nfunction getShuffled() {\n  if (shuffled) {\n    return shuffled;\n  }\n  shuffled = shuffle();\n  return shuffled;\n}\n\n/**\n * lookup shuffled letter\n * @param index\n * @returns {string}\n */\nfunction lookup(index) {\n  var alphabetShuffled = getShuffled();\n  return alphabetShuffled[index];\n}\nfunction get() {\n  return alphabet || ORIGINAL;\n}\nmodule.exports = {\n  get: get,\n  characters: characters,\n  seed: setSeed,\n  lookup: lookup,\n  shuffled: getShuffled\n};","'use strict';\n\n// Found this seed-based random generator somewhere\n// Based on The Central Randomizer 1.3 (C) 1997 by Paul Houle (houle@msc.cornell.edu)\nvar seed = 1;\n\n/**\n * return a random number based on a seed\n * @param seed\n * @returns {number}\n */\nfunction getNextValue() {\n  seed = (seed * 9301 + 49297) % 233280;\n  return seed / 233280.0;\n}\nfunction setSeed(_seed_) {\n  seed = _seed_;\n}\nmodule.exports = {\n  nextValue: getNextValue,\n  seed: setSeed\n};","'use strict';\n\nmodule.exports = require('./lib/index');","'use strict';\n\nmodule.exports = 0;","'use strict';\n\nvar alphabet = require('./alphabet');\nvar random = require('./random/random-byte');\nvar format = require('nanoid/format');\nfunction generate(number) {\n  var loopCounter = 0;\n  var done;\n  var str = '';\n  while (!done) {\n    str = str + format(random, alphabet.get(), 1);\n    done = number < Math.pow(16, loopCounter + 1);\n    loopCounter++;\n  }\n  return str;\n}\nmodule.exports = generate;"],"sourceRoot":""}