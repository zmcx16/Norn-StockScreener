{"version":3,"sources":["webpack:///./src/components/esg-stocks/stockAndESGDataChart.js","webpack:///./src/components/esg-stocks/esgStocksSummary.js","webpack:///./src/pages/esg-stocks-summary.js","webpack:///./src/components/esg-stocks/esgStocksSummary.module.scss"],"names":["StockAndESGDataChart","_ref","symbol","peerGroup","data","React","createElement","style","width","window","innerWidth","height","innerHeight","maxWidth","maxHeight","ResponsiveContainer","ComposedChart","syncId","margin","top","right","left","bottom","CartesianGrid","strokeDasharray","XAxis","dataKey","tickFormatter","tickItem","moment","format","YAxis","yAxisId","domain","Tooltip","Legend","wrapperStyle","Line","connectNulls","type","name","stroke","ESGStocksSummary","loadingAnimeRef","hideColState","setHideColState","useState","modalWindowRef","useRef","popModalWindow","popPureModal","tableColList","hide","text","getData","async","url","fetchObj","resp_data","get","response","ok","renderShowChart","Promise","all","fetchESGData","then","allResponses","length","startDate","Date","now","allDateByKey","convertESGData2DictByDate","timestamps","datas","key","Array","isArray","console","log","forEach","timestamp","index","date","parse","toLocaleDateString","parseFloat","toFixed","esgData","esgDict","Object","keys","allDataArray","targetKeys","sort","o","parseInt","val","push","current","catch","ESGRatioField","field","headerName","description","output","renderCell","params","value","Number","MAX_VALUE","undefined","fontWeight","color","fetchStockData","useFetch","cachePolicy","renderESGStocksTable","config","showChart","reduce","result","stockInfo","id","close","ESGLatest","ESGAvg1Yr","ESGAvg3Yr","ESGAvg5Yr","ESGPeerLatest","ESGPeerAvg1Yr","ESGPeerAvg3Yr","ESGPeerAvg5Yr","ratioLatest","ratioAvg1Yr","ratioAvg3Yr","ratioAvg5Yr","PE","PB","shortFloat","dividend","high52","low52","perfWeek","perfMonth","perfQuarter","perfHalfY","perfYear","perfYTD","filter_symbols","includes","setRowData","setLoading","rowData","searchVal","setSearchVal","useEffect","queryParameters","URLSearchParams","location","search","Fragment","className","esgStocksSummaryStyle","container","table","DataGrid","rows","columns","SymbolNameField","PriceField","Link","href","YahooFinanceUrl","row","target","rel","PureFieldWithValueCheck","ShortFloatLinkWithShowChartField","PercentField","ColorPercentField","IconButton","size","aria-haspopup","onClick","BarChartSharpIcon","fontSize","components","NoRowsOverlay","DefaultDataGridTable","Toolbar","SearchGridToolbar","clickCallback","info","placeholder","tooltip","ESGTooltip","link","ESGLink","disableSelectionOnClick","onColumnVisibilityChange","param","tempHideColState","ModalWindow","ESGStocksSummaryPage","getLoading","StylesProvider","injectFirst","SEO","Layout","LoadingAnime","module","exports"],"mappings":"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","file":"component---src-pages-esg-stocks-summary-js-8f6f051d606582218491.js","sourcesContent":["import React from 'react'\r\nimport {\r\n  LineChart,\r\n  ComposedChart,\r\n  Line,\r\n  Bar,\r\n  XAxis,\r\n  YAxis,\r\n  CartesianGrid,\r\n  Tooltip,\r\n  Legend,\r\n  ResponsiveContainer\r\n} from 'recharts'\r\n\r\nimport moment from 'moment'\r\n\r\nconst StockAndESGDataChart = ({ symbol, peerGroup, data }) => {\r\n  return (\r\n    <div style={{ width: (window.innerWidth - 80) + 'px', height: (window.innerHeight - 80) + 'px', maxWidth: '1200px', maxHeight: '800px' }}>\r\n      <h3>{`${symbol} ESG Chart`}</h3>\r\n      <ResponsiveContainer width=\"100%\" height=\"47%\">\r\n        <ComposedChart\r\n          data={data}\r\n          syncId=\"StockAndESGDataChart\"\r\n          margin={{\r\n            top: 5,\r\n            right: 30,\r\n            left: 20,\r\n            bottom: 5,\r\n          }}\r\n        >\r\n          <CartesianGrid strokeDasharray=\"3 3\" />\r\n          <XAxis dataKey=\"Date\" tickFormatter={(tickItem) => {\r\n            return moment(tickItem).format('MM/DD/YYYY')\r\n          }} />\r\n          <YAxis yAxisId=\"left\" domain={['auto', 'auto']}/>\r\n          <Tooltip />\r\n          <Legend wrapperStyle={{ bottom: -5 }}/>\r\n          <Line connectNulls yAxisId=\"left\" type=\"monotone\" name={symbol + \" Score\"} dataKey={symbol + \"_esgScore\"} stroke=\"#0088FE\"/>\r\n          <Line connectNulls yAxisId=\"left\" type=\"monotone\" name={peerGroup + \" Score\"} dataKey={peerGroup + \"_esgScore\"} stroke=\"#AA336A\"/>\r\n        </ComposedChart>\r\n      </ResponsiveContainer>\r\n      <ResponsiveContainer width=\"100%\" height=\"47%\">\r\n        <ComposedChart\r\n          data={data}\r\n          syncId=\"StockAndESGDataChart\"\r\n          margin={{\r\n            top: 5,\r\n            right: 30,\r\n            left: 20,\r\n            bottom: 5,\r\n          }}\r\n        >\r\n          <CartesianGrid strokeDasharray=\"3 3\" />\r\n          <XAxis dataKey=\"Date\" tickFormatter={(tickItem) => {\r\n            return moment(tickItem).format('MM/DD/YYYY')\r\n          }} />\r\n          <YAxis yAxisId=\"left\" domain={['auto', 'auto']}/>\r\n          <Tooltip />\r\n          <Legend wrapperStyle={{ bottom: -5 }}/>\r\n          <Line connectNulls yAxisId=\"left\" type=\"monotone\" name={symbol + \" Governance\"} dataKey={symbol + \"_governanceScore\"} stroke=\"#FF0000\"/>\r\n          <Line connectNulls yAxisId=\"left\" type=\"monotone\" name={symbol + \" Environment\"} dataKey={symbol + \"_environmentScore\"} stroke=\"#FF00FF\"/>\r\n          <Line connectNulls yAxisId=\"left\" type=\"monotone\" name={symbol + \" Social\"} dataKey={symbol + \"_socialScore\"} stroke=\"#2828FF\"/>\r\n          <Line connectNulls yAxisId=\"left\" type=\"monotone\" name={peerGroup + \" Governance\"} dataKey={peerGroup + \"_governanceScore\"} stroke=\"#00AEAE\"/>\r\n          <Line connectNulls yAxisId=\"left\" type=\"monotone\" name={peerGroup + \" Environment\"} dataKey={peerGroup + \"_environmentScore\"} stroke=\"#00A600\"/>\r\n          <Line connectNulls yAxisId=\"left\" type=\"monotone\" name={peerGroup + \" Social\"} dataKey={peerGroup + \"_socialScore\"} stroke=\"#8C8C00\"/>\r\n        </ComposedChart>\r\n      </ResponsiveContainer>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nexport default StockAndESGDataChart\r\n","\r\nimport React, { useState, useRef, useEffect } from 'react'\r\nimport { DataGrid } from '@mui/x-data-grid'\r\nimport IconButton from '@mui/material/IconButton'\r\nimport Link from '@mui/material/Link'\r\nimport BarChartSharpIcon from '@mui/icons-material/BarChartSharp'\r\nimport useFetch from 'use-http'\r\nimport moment from 'moment'\r\n\r\nimport { ESGLink, ESGTooltip } from '../../common/common'\r\nimport StockAndESGDataChart from './stockAndESGDataChart'\r\nimport ModalWindow from '../modalWindow'\r\nimport DefaultDataGridTable from '../defaultDataGridTable'\r\nimport SearchGridToolbar from '../searchGridToolbar'\r\nimport { SymbolNameField, PriceField, PureFieldWithValueCheck, PercentField, ColorPercentField, ShortFloatLinkWithShowChartField, YahooFinanceUrl } from '../../common/dataGridUtil'\r\n\r\nimport esgStocksSummaryStyle from './esgStocksSummary.module.scss'\r\nimport '../muiTablePagination.css'\r\n\r\n\r\nconst ESGStocksSummary = ({ loadingAnimeRef }) => {\r\n\r\n  const [hideColState, setHideColState] = useState({})\r\n\r\n  const modalWindowRef = useRef({\r\n    popModalWindow: null,\r\n    popPureModal: null,\r\n  })\r\n\r\n  const tableColList = {\r\n    Close: { hide: false, text: 'Price' },\r\n    PeerGroup: { hide: true, text: 'Type' },\r\n    ESGLatest: { hide: false, text: 'ESG Latest' },\r\n    ESGAvg1Yr: { hide: false, text: 'ESG Avg 1Yr' },\r\n    ESGAvg3Yr: { hide: false, text: 'ESG Avg 3Yr' },\r\n    ESGAvg5Yr: { hide: false, text: 'ESG Avg 5Yr' },\r\n    ESGPeerLatest: { hide: false, text: 'Peer Latest' },\r\n    ESGPeerAvg1Yr: { hide: false, text: 'Peer Avg 1Yr' },\r\n    ESGPeerAvg3Yr: { hide: false, text: 'Peer Avg 3Yr' },\r\n    ESGPeerAvg5Yr: { hide: false, text: 'Peer Avg 5Yr' },\r\n    RatioLatest: { hide: false, text: 'Ratio Latest' },\r\n    RatioAvg1Yr: { hide: false, text: 'Ratio Avg 1Yr' },\r\n    RatioAvg3Yr: { hide: false, text: 'Ratio Avg 3Yr' },\r\n    RatioAvg5Yr: { hide: false, text: 'Ratio Avg 5Yr' },\r\n    PE: { hide: false, text: 'P/E' },\r\n    PB: { hide: false, text: 'P/B' },\r\n    ShortFloat: { hide: false, text: 'Short Float' },\r\n    Dividend: { hide: false, text: 'Dividend %' },\r\n    High52: { hide: false, text: '52W High' },\r\n    Low52: { hide: false, text: '52W Low' },\r\n    PerfWeek: { hide: false, text: 'Perf Week' },\r\n    PerfMonth: { hide: false, text: 'Perf Month' },\r\n    PerfQuarter: { hide: false, text: 'Perf Quarter' },\r\n    PerfHalfY: { hide: false, text: 'Perf Half Y' },\r\n    PerfYear: { hide: false, text: 'Perf Year' },\r\n    PerfYTD: { hide: false, text: 'Perf YTD' },\r\n    Chart: { hide: false, text: 'Chart' },\r\n  }\r\n\r\n  const getData = async (url, fetchObj) => {\r\n    const resp_data = await fetchObj.get(url)\r\n    if (fetchObj.response.ok && resp_data) {\r\n      return resp_data\r\n    }\r\n    else {\r\n      return null\r\n    }\r\n  }\r\n\r\n  const renderShowChart = (symbol)=> {\r\n    Promise.all([\r\n      getData(\"/norn-data/esg/data/esgChart/\" + symbol+\".json\", fetchESGData),\r\n    ]).then((allResponses) => {\r\n      // console.log(allResponses)\r\n      if (allResponses.length === 1 && allResponses[0] !== null) {\r\n        let startDate = new Date(Date.now() - 365*5*24*60*60*1000)\r\n        if (startDate < new Date(2020,1,1)) {  // The ESG score benchmark was modified on 2020/01/01\r\n          startDate = new Date(2020,1,1)\r\n        }\r\n        let allDateByKey = {}\r\n        const convertESGData2DictByDate = (timestamps, datas, key) => {\r\n          if ((timestamps && !Array.isArray(timestamps)) || (datas && !Array.isArray(datas))) {\r\n            console.log(\"timestamp or data is not array\")\r\n            return\r\n          }\r\n          timestamps.forEach((timestamp, index) => {\r\n            let date = Date.parse(new Date(timestamp*1000).toLocaleDateString()) // align timezone\r\n            if (date < startDate) {\r\n              return\r\n            }\r\n            if (!(date in allDateByKey)) {\r\n              allDateByKey[date] = {}\r\n            }\r\n\r\n            let data = datas[index]\r\n            if (typeof data === \"number\") {\r\n              data = parseFloat(data.toFixed(2))\r\n            }\r\n            // convert to float\r\n            allDateByKey[date][key] = data\r\n          })\r\n        }\r\n        let esgData = allResponses[0][\"data\"][\"esgChart\"][\"result\"][0]\r\n        let peerGroup = esgData[\"peerGroup\"]\r\n        let esgDict = {}\r\n        esgDict[symbol + \"_esgScore\"] = {timestamps: esgData[\"symbolSeries\"][\"timestamp\"], datas: esgData[\"symbolSeries\"][\"esgScore\"]}\r\n        esgDict[symbol + \"_governanceScore\"] = {timestamps: esgData[\"symbolSeries\"][\"timestamp\"], datas: esgData[\"symbolSeries\"][\"governanceScore\"]}\r\n        esgDict[symbol + \"_environmentScore\"] = {timestamps: esgData[\"symbolSeries\"][\"timestamp\"], datas: esgData[\"symbolSeries\"][\"environmentScore\"]}\r\n        esgDict[symbol + \"_socialScore\"] = {timestamps: esgData[\"symbolSeries\"][\"timestamp\"], datas: esgData[\"symbolSeries\"][\"socialScore\"]}\r\n        esgDict[peerGroup + \"_esgScore\"] = {timestamps: esgData[\"peerSeries\"][\"timestamp\"], datas: esgData[\"peerSeries\"][\"esgScore\"]}\r\n        esgDict[peerGroup + \"_governanceScore\"] = {timestamps: esgData[\"peerSeries\"][\"timestamp\"], datas: esgData[\"peerSeries\"][\"governanceScore\"]}\r\n        esgDict[peerGroup + \"_environmentScore\"] = {timestamps: esgData[\"peerSeries\"][\"timestamp\"], datas: esgData[\"peerSeries\"][\"environmentScore\"]}\r\n        esgDict[peerGroup + \"_socialScore\"] = {timestamps: esgData[\"peerSeries\"][\"timestamp\"], datas: esgData[\"peerSeries\"][\"socialScore\"]} \r\n        Object.keys(esgDict).forEach((key) => {\r\n          convertESGData2DictByDate(esgDict[key].timestamps, esgDict[key].datas, key)\r\n        })\r\n\r\n        console.log(allDateByKey)\r\n        let allDataArray = []\r\n        let targetKeys = Object.keys(esgDict)\r\n        console.log(targetKeys)\r\n        Object.keys(allDateByKey).sort().forEach((key) => {\r\n          let o = { Date: moment(parseInt(key)).format('MM/DD/YYYY') }\r\n          targetKeys.forEach((val) => {\r\n            if (val in allDateByKey[key]) {\r\n              o[val] = allDateByKey[key][val]\r\n            }\r\n          })\r\n          allDataArray.push(o)\r\n        })\r\n        console.log(allDataArray)\r\n        modalWindowRef.current.popModalWindow(<StockAndESGDataChart symbol={symbol} peerGroup={peerGroup} data={allDataArray} />)\r\n      } else {\r\n        modalWindowRef.current.popModalWindow(<div>Load some data failed</div>)\r\n      }\r\n    }).catch(() => {\r\n      modalWindowRef.current.popModalWindow(<div>Can't draw stock price & esg chart</div>)\r\n    })\r\n  }\r\n\r\n  const ESGRatioField = (field, headerName, width, hide, description = null) => {\r\n    let output = {\r\n      field: field,\r\n      headerName: headerName,\r\n      width: width,\r\n      type: 'number',\r\n      renderCell: (params) => (\r\n        params.value === \"-\" || params.value === -Number.MAX_VALUE || params.value === Number.MAX_VALUE || params.value === null || params.value === undefined || params.value === \"Infinity\" || params.value === 'NaN' ?\r\n          <span>-</span> :\r\n          <span style={{ fontWeight: 500, color: parseFloat(params.value) < 1 ? 'green' : parseFloat(params.value) >= -1 ? 'red' : '' }}>{params.value}</span>\r\n      ),\r\n      hide: hide\r\n    }\r\n    \r\n    if (description != null) {\r\n      output['description'] = description\r\n    }\r\n    return output\r\n  }\r\n\r\n  const genTableColTemplate = () => {\r\n    return [\r\n      SymbolNameField('Symbol', 130, 'symbol' in hideColState ? hideColState['symbol'] : false),\r\n      PriceField('close', tableColList.Close.text, 110, 'close' in hideColState ? hideColState['close'] : tableColList['Close'].hide, null, \"yahoo\"),\r\n      { field: 'peerGroup', headerName: 'PeerGroup', width: 155, hide: 'peerGroup' in hideColState ? hideColState['peerGroup'] : tableColList['PeerGroup'].hide },\r\n      {\r\n        field: \"ESGLatest\",\r\n        headerName: tableColList.ESGLatest.text,\r\n        width: 110,\r\n        type: 'number',\r\n        renderCell: (params) => (\r\n          params.value === \"-\" || params.value === -Number.MAX_VALUE || params.value === Number.MAX_VALUE || params.value === null || params.value === undefined || params.value === \"Infinity\" || params.value === 'NaN' ?\r\n            <span>-</span> :\r\n            <Link href={ YahooFinanceUrl + 'quote/' + params.row[\"symbol\"] + '/sustainability'} target=\"_blank\" rel=\"noreferrer noopener\">\r\n              <span>{params.value.toFixed(2)}</span>\r\n            </Link>\r\n        ),\r\n        hide: \"ESGLatest\" in hideColState ? hideColState[\"ESGLatest\"] : tableColList['ESGLatest'].hide\r\n      },\r\n      PureFieldWithValueCheck(\"ESGAvg1Yr\", tableColList.ESGAvg1Yr.text, 110, 2, \"ESGAvg1Yr\" in hideColState ? hideColState[\"ESGAvg1Yr\"] : tableColList['ESGAvg1Yr'].hide),\r\n      PureFieldWithValueCheck(\"ESGAvg3Yr\", tableColList.ESGAvg3Yr.text, 110, 2, \"ESGAvg3Yr\" in hideColState ? hideColState[\"ESGAvg3Yr\"] : tableColList['ESGAvg3Yr'].hide),\r\n      PureFieldWithValueCheck(\"ESGAvg5Yr\", tableColList.ESGAvg5Yr.text, 110, 2, \"ESGAvg5Yr\" in hideColState ? hideColState[\"ESGLatest\"] : tableColList['ESGAvg5Yr'].hide),\r\n      PureFieldWithValueCheck(\"ESGPeerLatest\", tableColList.ESGPeerLatest.text, 110, 2, \"ESGPeerLatest\" in hideColState ? hideColState[\"ESGPeerLatest\"] : tableColList['ESGPeerLatest'].hide),\r\n      PureFieldWithValueCheck(\"ESGPeerAvg1Yr\", tableColList.ESGPeerAvg1Yr.text, 110, 2, \"ESGPeerAvg1Yr\" in hideColState ? hideColState[\"ESGPeerAvg1Yr\"] : tableColList['ESGPeerAvg1Yr'].hide),\r\n      PureFieldWithValueCheck(\"ESGPeerAvg3Yr\", tableColList.ESGPeerAvg3Yr.text, 110, 2, \"ESGPeerAvg3Yr\" in hideColState ? hideColState[\"ESGPeerAvg3Yr\"] : tableColList['ESGPeerAvg3Yr'].hide),\r\n      PureFieldWithValueCheck(\"ESGPeerAvg5Yr\", tableColList.ESGPeerAvg5Yr.text, 110, 2, \"ESGPeerAvg5Yr\" in hideColState ? hideColState[\"ESGPeerAvg5Yr\"] : tableColList['ESGPeerAvg5Yr'].hide),\r\n      ESGRatioField(\"ratioLatest\", tableColList.RatioLatest.text, 110, \"ratioLatest\" in hideColState ? hideColState[\"ratioLatest\"] : tableColList['RatioLatest'].hide, \"ESG Ratio Latest (ESG Latest / ESG Peer Latest)\"),\r\n      ESGRatioField(\"ratioAvg1Yr\", tableColList.RatioAvg1Yr.text, 110, \"ratioAvg1Yr\" in hideColState ? hideColState[\"ratioAvg1Yr\"] : tableColList['RatioAvg1Yr'].hide, \"ESG Ratio Avg 1Yr (ESG Avg 1Yr / ESG Peer Avg 1Yr)\"),\r\n      ESGRatioField(\"ratioAvg3Yr\", tableColList.RatioAvg3Yr.text, 110, \"ratioAvg3Yr\" in hideColState ? hideColState[\"ratioAvg3Yr\"] : tableColList['RatioAvg3Yr'].hide, \"ESG Ratio Avg 3Yr (ESG Avg 3Yr / ESG Peer Avg 3Yr)\"),\r\n      ESGRatioField(\"ratioAvg5Yr\", tableColList.RatioAvg5Yr.text, 110, \"ratioAvg5Yr\" in hideColState ? hideColState[\"ratioAvg5Yr\"] : tableColList['RatioAvg5Yr'].hide, \"ESG Ratio Avg 5Yr (ESG Avg 5Yr / ESG Peer Avg 5Yr)\"),\r\n      PureFieldWithValueCheck(\"PE\", tableColList.PE.text, 110, 2, \"PE\" in hideColState ? hideColState[\"PE\"] : tableColList['PE'].hide),\r\n      PureFieldWithValueCheck(\"PB\", tableColList.PB.text, 110, 2, \"PB\" in hideColState ? hideColState[\"PB\"] : tableColList['PB'].hide),\r\n      ShortFloatLinkWithShowChartField(\"shortFloat\", tableColList.ShortFloat.text, 150, \"shortFloat\" in hideColState ? hideColState[\"shortFloat\"] : tableColList['ShortFloat'].hide),\r\n      PercentField(\"dividend\", tableColList.Dividend.text, 150, \"dividend\" in hideColState ? hideColState[\"dividend\"] : tableColList['Dividend'].hide),\r\n      PercentField(\"high52\", tableColList.High52.text, 150, \"high52\" in hideColState ? hideColState[\"high52\"] : tableColList['High52'].hide),\r\n      PercentField(\"low52\", tableColList.Low52.text, 150, \"low52\" in hideColState ? hideColState[\"low52\"] : tableColList['Low52'].hide),\r\n      ColorPercentField(\"perfWeek\", tableColList.PerfWeek.text, 150, 2, \"perfWeek\" in hideColState ? hideColState[\"perfWeek\"] : tableColList['PerfWeek'].hide, 500),\r\n      ColorPercentField(\"perfMonth\", tableColList.PerfMonth.text, 150, 2, \"perfMonth\" in hideColState ? hideColState[\"perfMonth\"] : tableColList['PerfMonth'].hide, 500),\r\n      ColorPercentField(\"perfQuarter\", tableColList.PerfQuarter.text, 150, 2, \"perfQuarter\" in hideColState ? hideColState[\"perfQuarter\"] : tableColList['PerfQuarter'].hide, 500),\r\n      ColorPercentField(\"perfHalfY\", tableColList.PerfHalfY.text, 150, 2, \"perfHalfY\" in hideColState ? hideColState[\"perfHalfY\"] : tableColList['PerfHalfY'].hide, 500),\r\n      ColorPercentField(\"perfYear\", tableColList.PerfYear.text, 150, 2, \"perfYear\" in hideColState ? hideColState[\"perfYear\"] : tableColList['PerfYear'].hide, 500),\r\n      ColorPercentField(\"perfYTD\", tableColList.PerfYTD.text, 150, 2, \"perfYTD\" in hideColState ? hideColState[\"perfYTD\"] : tableColList['PerfYTD'].hide, 500),\r\n      {\r\n        field: 'Chart',\r\n        headerName: tableColList.Chart.text,\r\n        width: 130,\r\n        renderCell: (params) => (\r\n          <IconButton\r\n            size=\"small\"\r\n            aria-haspopup=\"true\"\r\n            onClick={()=>{\r\n              renderShowChart(params.row[\"symbol\"], params.row[\"shsFloat\"])\r\n            }}\r\n          >\r\n            <BarChartSharpIcon color=\"primary\" style={{ fontSize: 40 }} />\r\n          </IconButton>\r\n        ),\r\n        hide: 'Chart' in hideColState ? hideColState['Chart'] : tableColList['Chart'].hide\r\n      },\r\n    ]\r\n  }\r\n\r\n  const fetchStockData = useFetch({ cachePolicy: 'no-cache' })\r\n  const fetchESGData = useFetch({ cachePolicy: 'no-cache' })\r\n  const renderESGStocksTable = (config, showChart)=>{\r\n    Promise.all([\r\n      getData(\"/norn-data/stock/stat.json\", fetchStockData),\r\n      getData('/norn-data/esg/stat.json', fetchESGData),\r\n    ]).then((allResponses) => {\r\n      // console.log(allResponses)\r\n      if (allResponses.length === 2 && allResponses[0] !== null && allResponses[1] !== null) {      \r\n        let output = allResponses[1][\"data\"].reduce((result, value, index) => {\r\n          let symbol = value[\"symbol\"]\r\n          let stockInfo = allResponses[0][symbol]\r\n          let o = {\r\n            id: index,\r\n            symbol: symbol,\r\n            close: stockInfo !== undefined && stockInfo !== null && stockInfo['Close'] !== '-' ? stockInfo['Close'] : -Number.MAX_VALUE,\r\n            peerGroup: 'peerGroup' in value && value['peerGroup'] !== '-' ? value['peerGroup'] : '-',\r\n            ESGLatest: 'esg-latest' in value && value['esg-latest'] !== '-' ? value['esg-latest'] : -Number.MAX_VALUE,\r\n            ESGAvg1Yr: 'esg-avg-1yr' in value && value['esg-avg-1yr'] !== '-' ? value['esg-avg-1yr'] : -Number.MAX_VALUE,\r\n            ESGAvg3Yr: 'esg-avg-3yr' in value && value['esg-avg-3yr'] !== '-' ? value['esg-avg-3yr'] : -Number.MAX_VALUE,\r\n            ESGAvg5Yr: 'esg-avg-5yr' in value && value['esg-avg-5yr'] !== '-' ? value['esg-avg-5yr'] : -Number.MAX_VALUE,\r\n            ESGPeerLatest: 'esg-peer-latest' in value && value['esg-peer-latest'] !== '-' ? value['esg-peer-latest'] : -Number.MAX_VALUE,\r\n            ESGPeerAvg1Yr: 'esg-peer-avg-1yr' in value && value['esg-peer-avg-1yr'] !== '-' ? value['esg-peer-avg-1yr'] : -Number.MAX_VALUE,\r\n            ESGPeerAvg3Yr: 'esg-peer-avg-3yr' in value && value['esg-peer-avg-3yr'] !== '-' ? value['esg-peer-avg-3yr'] : -Number.MAX_VALUE,\r\n            ESGPeerAvg5Yr: 'esg-peer-avg-5yr' in value && value['esg-peer-avg-5yr'] !== '-' ? value['esg-peer-avg-5yr'] : -Number.MAX_VALUE,\r\n            ratioLatest: 'ratio-latest' in value && value['ratio-latest'] !== '-' ? value['ratio-latest'] : -Number.MAX_VALUE,\r\n            ratioAvg1Yr: 'ratio-avg-1yr' in value && value['ratio-avg-1yr'] !== '-' ? value['ratio-avg-1yr'] : -Number.MAX_VALUE,\r\n            ratioAvg3Yr: 'ratio-avg-3yr' in value && value['ratio-avg-3yr'] !== '-' ? value['ratio-avg-3yr'] : -Number.MAX_VALUE,\r\n            ratioAvg5Yr: 'ratio-avg-5yr' in value && value['ratio-avg-5yr'] !== '-' ? value['ratio-avg-5yr'] : -Number.MAX_VALUE,\r\n            PE: stockInfo !== undefined && stockInfo !== null && stockInfo['P/E'] !== '-' ? stockInfo['P/E'] : Number.MAX_VALUE,\r\n            PB: stockInfo !== undefined && stockInfo !== null && stockInfo['P/B'] !== '-' ? stockInfo['P/B'] : Number.MAX_VALUE,\r\n            shortFloat: stockInfo !== undefined && stockInfo !== null && stockInfo['Short Float'] !== '-' ? stockInfo['Short Float'] : -Number.MAX_VALUE,\r\n            dividend: stockInfo !== undefined && stockInfo !== null && stockInfo['Dividend %'] !== '-' ? stockInfo['Dividend %'] : -Number.MAX_VALUE,\r\n            high52: stockInfo !== undefined && stockInfo !== null && stockInfo['52W High'] !== '-' ? stockInfo['52W High'] : -Number.MAX_VALUE,\r\n            low52: stockInfo !== undefined && stockInfo !== null && stockInfo['52W Low'] !== '-' ? stockInfo['52W Low'] : -Number.MAX_VALUE,\r\n            perfWeek: stockInfo !== undefined && stockInfo !== null && stockInfo['Perf Week'] !== '-' ? stockInfo['Perf Week'] : -Number.MAX_VALUE,\r\n            perfMonth: stockInfo !== undefined && stockInfo !== null && stockInfo['Perf Month'] !== '-' ? stockInfo['Perf Month'] : -Number.MAX_VALUE,\r\n            perfQuarter: stockInfo !== undefined && stockInfo !== null && stockInfo['Perf Quarter'] !== '-' ? stockInfo['Perf Quarter'] : -Number.MAX_VALUE,\r\n            perfHalfY: stockInfo !== undefined && stockInfo !== null && stockInfo['Perf Half Y'] !== '-' ? stockInfo['Perf Half Y'] : -Number.MAX_VALUE,\r\n            perfYear: stockInfo !== undefined && stockInfo !== null && stockInfo['Perf Year'] !== '-' ? stockInfo['Perf Year'] : -Number.MAX_VALUE,\r\n            perfYTD: stockInfo !== undefined && stockInfo !== null && stockInfo['Perf YTD'] !== '-' ? stockInfo['Perf YTD'] : -Number.MAX_VALUE,\r\n          }\r\n\r\n          if(config.filter_symbols.length === 0 || config.filter_symbols.includes(symbol)) {\r\n            result.push(o)\r\n          }\r\n          return result\r\n        }, [])\r\n        console.log(output)\r\n        setRowData(output)\r\n        if (showChart) {\r\n          renderShowChart(output[0][\"symbol\"])\r\n        }\r\n      } else {\r\n        modalWindowRef.current.popModalWindow(<div>Load some data failed</div>)\r\n      }\r\n      loadingAnimeRef.current.setLoading(false)\r\n    }).catch(() => {\r\n      modalWindowRef.current.popModalWindow(<div>Can't get data</div>)\r\n      loadingAnimeRef.current.setLoading(false)\r\n    })\r\n  }\r\n\r\n  const [rowData, setRowData] = useState([])\r\n  const [searchVal, setSearchVal] = useState(\"\")\r\n  useEffect(() => {\r\n    // componentDidMount is here!\r\n    // componentDidUpdate is here!\r\n    let config = {filter_symbols: []}\r\n    let showChart = false\r\n    if (typeof window !== 'undefined') {\r\n      const queryParameters = new URLSearchParams(window.location.search)\r\n      let symbol = queryParameters.get(\"symbol\")\r\n      if (symbol) {\r\n        config = {filter_symbols: [symbol]}\r\n      }\r\n      showChart = queryParameters.get(\"showChart\") === \"true\"\r\n    }\r\n    renderESGStocksTable(config, showChart)\r\n    return () => {\r\n      // componentWillUnmount is here!\r\n    }\r\n  }, [])\r\n\r\n  return (\r\n    <>\r\n      <div className={esgStocksSummaryStyle.container}>\r\n        <div className={esgStocksSummaryStyle.table}>\r\n          <DataGrid rows={rowData} columns={genTableColTemplate()} components={{ NoRowsOverlay: DefaultDataGridTable, Toolbar: ()=>{\r\n            return <SearchGridToolbar searchVal={searchVal} setSearchVal={setSearchVal} clickCallback={(config)=>{\r\n              renderESGStocksTable(config, false)\r\n            }} \r\n              info={{\r\n                placeholder: 'Filter symbols: AAPL, BAC, KSS, ...',\r\n                tooltip: {\r\n                  text: ESGTooltip,\r\n                  link: ESGLink\r\n                }\r\n              }}\r\n            />\r\n          }}} disableSelectionOnClick onColumnVisibilityChange={(param) => {\r\n            let tempHideColState = hideColState\r\n            tempHideColState[param['field']] = !param['isVisible']\r\n            setHideColState(tempHideColState)\r\n          }}\r\n          />\r\n        </div>\r\n      </div>\r\n      <ModalWindow modalWindowRef={modalWindowRef} />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ESGStocksSummary\r\n","import React, { useRef } from 'react'\r\nimport { StylesProvider } from '@mui/styles'\r\n\r\nimport Layout from '../components/layout'\r\nimport ESGStocksSummary from '../components/esg-stocks/esgStocksSummary'\r\nimport LoadingAnime from '../components/loadingAnime'\r\nimport SEO from '../components/seo'\r\n\r\nconst ESGStocksSummaryPage = () => {\r\n\r\n  const loadingAnimeRef = useRef({\r\n    getLoading: null,\r\n    setLoading: null\r\n  })\r\n\r\n  return (\r\n    <StylesProvider injectFirst>\r\n      <SEO />\r\n      <Layout >\r\n        <ESGStocksSummary loadingAnimeRef={loadingAnimeRef} />\r\n      </Layout>\r\n      <LoadingAnime loadingAnimeRef={loadingAnimeRef} />\r\n    </StylesProvider>\r\n  )\r\n}\r\n\r\nexport default ESGStocksSummaryPage\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"esgStocksSummary-module--container--12PN2\",\"showColumn\":\"esgStocksSummary-module--showColumn--2zCvj\",\"table\":\"esgStocksSummary-module--table--1YDps\"};"],"sourceRoot":""}