{"version":3,"sources":["webpack:///./src/common/optionsDef.js","webpack:///./src/components/options/valuation/options.js","webpack:///./src/pages/options-valuation.js","webpack:///./node_modules/recharts/es6/chart/LineChart.js","webpack:///./node_modules/@mui/icons-material/BarChartSharp.js","webpack:///./src/components/monteCarloChart.js","webpack:///./node_modules/@mui/icons-material/Info.js","webpack:///./src/components/options/valuation/options.module.scss"],"names":["Options_Def","name","display_name","SelfQuery_Def","parameters","val","gridsm","ParameterNodesField","_ref","queryParameterRef","queryParameterCurrentRef","map","value","index","genParameterField","inputRef","React","createElement","Grid","item","md","xs","key","shortid","generate","noValidate","autoComplete","TextField","id","className","optionsStyle","valueText","label","variant","defaultValue","size","current","FetchNornFinanceAPIServer","_ref2","FetchNornFinanceAPIServerRef","useFetchNornFinanceAPIServer","useFetch","NornFinanceAPIServerDomain","cachePolicy","server","Fragment","Options","_ref3","loadingAnimeRef","callsData","setCallsData","useState","putsData","setPutsData","hideColState","setHideColState","arg","setArg","displayQuery","setDisplayQuery","ws","setWs","modalWindowRef","useRef","popModalWindow","popPureModal","tableColList","Symbol","hide","text","StockPrice","StockShortFloat","ExpiryDate","Strike","LastPrice","AvgEWMA","PriceBias","description","VolBias","PriceStrikeRatio","PriceStrikeYearRatio","DistanceRatio","KellyCriterion_buy","KellyCriterion_sell","KellyCriterion_MU_0_buy","KellyCriterion_MU_0_sell","KellyCriterion_IV_buy","startsWith","KellyCriterion_IV_sell","EarningDate","ExDividendDate","ExerciseProbability","Delta","Gamma","Rho","Theta","Vega","LastTradeDate","Bid","Ask","Change","PercentChange","Volume","OpenInterest","ImpliedVolatility","EWMAHisVol","BSM_EWMAHisVol","MC_EWMAHisVol","BT_EWMAHisVol","MCChart","OptionPriceField","field","headerName","width","valueFixed","type","renderCell","params","symbol","row","link","YahooFinanceUrl","expiredDate","replaceAll","substring","strikeL","parseInt","toString","padStart","strikeR","toFixed","length","option_s","Number","MAX_VALUE","undefined","Link","href","target","rel","genTableColTemplate","SymbolNameField","ShortFloatLinkWithShowChartField","moment","format","PureFieldWithValueCheck","style","fontWeight","color","getRedLevel","getBlueLevel","PercentField","ColorPercentField","whiteSpace","wordWrap","ColorPosGreenNegRedField","IconButton","aria-haspopup","onClick","setLoading","query_string","workdayCount","Date","toISOString","split","Promise","all","GetDataByFetchObj","then","allResponses","console","log","chartData","cost","info","forEach","mean_point","mean_index","d","data_points","data_i","String","push","MonteCarloChart","data","iteration","error","catch","BarChartSharpIcon","fontSize","fetchOptionsData","fetchExDividendData","exDividendDictRef","fetchStockData","StockDictRef","renderTable","resp","support_earnings_date","calls","puts","stock_price","stock_extra_info","earningDate","min_earnings_date","temp","i","getTime","join","ex_dividend_date","ex_dividend_link","stock_short_float","today","ewma_his_vol","contracts","expiry_date","extra_data_func","calls_puts","kind","cp","v","o","stockPrice","stockShortFloat","expiryDate","lastTradeDate","strike","lastPrice","bid","ask","change","percentChange","volume","openInterest","impliedVolatility","delta","gamma","rho","theta","vega","earningDateColor","exDividendDate","exDividendLink","exDividendDateColor","exerciseProbability","cnt","sum","Math","abs","day_diff","floor","parse","slice","concat","refreshData","file_name","Object","assign","apply","_toConsumableArray","x","createRef","useEffect","useInterval","readyState","WebSocket","OPEN","send","onopen","onmessage","e","message","JSON","commonStyle","defaultFont","container","spacing","FormControl","optionsTableSelect","InputLabel","htmlFor","Select","native","displayEmpty","onChange","event","queryPannel","display","parameterTitle","Typography","gutterBottom","component","NoMaxWidthTooltip","arrow","title","lineHeight","textAlign","QueryNote","window","open","NornFinanceAPIServerGithub","InfoIcon","parameterBlock","Box","justifyContent","ThemeProvider","theme","createTheme","palette","primary","blue","Button","isMobile","queryBtnMobile","queryBtn","startIcon","SearchIcon","args","reduce","accumulator","currentValue","currentIndex","keys","table","DataGrid","rows","columns","components","NoRowsOverlay","DefaultDataGridTable","disableSelectionOnClick","onColumnVisibilityChange","param","tempHideColState","initialState","filter","filterModel","items","columnField","operatorValue","sorting","sortModel","sort","ModalWindow","OptionsValuationPage","getLoading","StylesProvider","injectFirst","SEO","Layout","LoadingAnime","LineChart","chartName","GraphicalChild","axisComponents","axisType","AxisComp","formatAxisMap","_interopRequireDefault","defineProperty","exports","default","_createSvgIcon","_jsxRuntime","jsx","CustomizedLabel","_PureComponent","arguments","_inheritsLoose","prototype","render","y","stroke","this","props","dy","fill","textAnchor","PureComponent","show_mean_label","modal_mode","dataLines","Array","Line","dataKey","dot","strokeWidth","optionReferenceLines","ReferenceLine","position","strokeDasharray","xAxisLabel","Label","offset","chartStyle","innerWidth","height","innerHeight","maxWidth","maxHeight","ResponsiveContainer","margin","top","right","left","bottom","CartesianGrid","XAxis","YAxis","domain","Tooltip","itemSorter","module"],"mappings":"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","file":"component---src-pages-options-valuation-js-e5e6c0e6ffaac314ebfe.js","sourcesContent":["// options\r\nexport const Options_Def = [\r\n  {\r\n    name: 'output_bias_0.1_1.0_NaN',\r\n    display_name: 'Valuation Bias: last price > 0.1; premium > 100%'\r\n  },\r\n  {\r\n    name: 'output_bias_0.5_NaN_-0.5',\r\n    display_name: 'Valuation Bias: last price > 0.1; discount > 50%'\r\n  },\r\n  {\r\n    name: 'self_query',\r\n    display_name: 'Self Query'\r\n  },\r\n]\r\n\r\nexport const SelfQuery_Def = {\r\n  parameters: [\r\n    {\r\n      name: \"symbol\",\r\n      display_name: \"Symbol\",\r\n      val: \"DAC\",\r\n      gridsm: 1,\r\n    },\r\n    {\r\n      name: \"min_next_days\",\r\n      display_name: \"Min Next Days\",\r\n      val: \"0\",\r\n      gridsm: 1,\r\n    },\r\n    {\r\n      name: \"max_next_days\",\r\n      display_name: \"Max Next Days\",\r\n      val: \"45\",\r\n      gridsm: 1,\r\n    },\r\n    {\r\n      name: \"min_volume\",\r\n      display_name: \"Min Volume\",\r\n      val: \"10\",\r\n      gridsm: 1,\r\n    },\r\n    {\r\n      name: \"last_trade_days\",\r\n      display_name: \"Last Trade Days\",\r\n      val: \"3\",\r\n      gridsm: 1,\r\n    },\r\n    {\r\n      name: \"ewma_his_vol_period\",\r\n      display_name: \"EWMA History Volatility Period\",\r\n      val: \"21\",\r\n      gridsm: 2,\r\n    },\r\n    {\r\n      name: \"ewma_his_vol_lambda\",\r\n      display_name: \"EWMA History Volatility Lambda\",\r\n      val: \"0.94\",\r\n      gridsm: 2,\r\n    },\r\n    {\r\n      name: \"proxy\",\r\n      display_name: \"Proxy\",\r\n      val: \"\",\r\n      gridsm: 1,\r\n    },\r\n  ]\r\n}\r\n","import React, { useState, useEffect, useRef, createRef } from 'react'\r\nimport SearchIcon from '@mui/icons-material/Search'\r\nimport IconButton from '@mui/material/IconButton'\r\nimport BarChartSharpIcon from '@mui/icons-material/BarChartSharp'\r\nimport InfoIcon from '@mui/icons-material/Info'\r\nimport TextField from '@mui/material/TextField'\r\nimport Button from '@mui/material/Button'\r\nimport Box from '@mui/material/Box'\r\nimport Grid from '@mui/material/Grid'\r\nimport { DataGrid } from '@mui/x-data-grid'\r\nimport Link from '@mui/material/Link'\r\nimport InputLabel from '@mui/material/InputLabel'\r\nimport FormControl from '@mui/material/FormControl'\r\nimport Typography from '@mui/material/Typography'\r\nimport Select from '@mui/material/Select'\r\nimport { blue } from '@mui/material/colors'\r\nimport { createTheme } from '@mui/material/styles'\r\nimport { ThemeProvider } from '@mui/styles'\r\nimport shortid from 'shortid'\r\nimport useFetch from 'use-http'\r\nimport moment from 'moment'\r\nimport { isMobile } from 'react-device-detect'\r\n\r\nimport ModalWindow from '../../modalWindow'\r\nimport DefaultDataGridTable from '../../defaultDataGridTable'\r\n\r\nimport { NornFinanceAPIServerDomain, QueryNote, NornFinanceAPIServerGithub } from '../../../common/common'\r\nimport { getRedLevel, getBlueLevel, workdayCount } from '../../../common/utils'\r\nimport { useInterval, GetDataByFetchObj, NoMaxWidthTooltip, YahooFinanceUrl } from '../../../common/reactUtils'\r\nimport { SymbolNameField, PureFieldWithValueCheck, PercentField, ColorPercentField, ColorPosGreenNegRedField, ShortFloatLinkWithShowChartField } from '../../../common/dataGridUtil'\r\nimport { Options_Def, SelfQuery_Def } from '../../../common/optionsDef'\r\n\r\nimport MonteCarloChart from '../../monteCarloChart'\r\n\r\nimport commonStyle from '../../common.module.scss'\r\nimport optionsStyle from './options.module.scss'\r\n\r\n\r\n// query parameter\r\nconst genParameterField = (inputRef, name, value, display_name, gridsm) => {\r\n  // add key to force re-render component\r\n  return (\r\n    <Grid item md={gridsm} xs={12} key={shortid.generate()}>\r\n      <form noValidate autoComplete=\"off\">\r\n        <TextField id={name} className={optionsStyle.valueText} label={display_name} variant=\"outlined\" defaultValue={value} size=\"small\" inputRef={inputRef} />\r\n      </form>\r\n    </Grid>\r\n  )\r\n}\r\n\r\nconst ParameterNodesField = ({ queryParameterRef, queryParameterCurrentRef }) => {\r\n  return SelfQuery_Def.parameters.map((value, index) => {\r\n    return (\r\n      genParameterField(queryParameterRef.current[index], value.name, queryParameterCurrentRef.current === null ? value.val : queryParameterCurrentRef.current[index], value.display_name, value.gridsm)\r\n    )\r\n  })\r\n}\r\n\r\nconst FetchNornFinanceAPIServer = ({FetchNornFinanceAPIServerRef}) => {\r\n  const useFetchNornFinanceAPIServer = useFetch(\"https://\" + NornFinanceAPIServerDomain, { cachePolicy: 'no-cache' })\r\n  FetchNornFinanceAPIServerRef.current.server = useFetchNornFinanceAPIServer\r\n  return <></>\r\n}\r\n\r\nconst Options = ({loadingAnimeRef}) => {\r\n\r\n  const [callsData, setCallsData] = useState([])\r\n  const [putsData, setPutsData] = useState([])\r\n  const [hideColState, setHideColState] = useState({})\r\n  const [arg, setArg] = useState(0)\r\n  const [displayQuery, setDisplayQuery] = useState(false)\r\n  const [ws, setWs] = useState(null)\r\n\r\n  const modalWindowRef = useRef({\r\n    popModalWindow: null,\r\n    popPureModal: null,\r\n  })\r\n  \r\n  const FetchNornFinanceAPIServerRef = useRef({\r\n    server: null\r\n  })\r\n\r\n  const tableColList = {\r\n    Symbol: { hide: false, text: 'Symbol' },\r\n    StockPrice: { hide: false, text: 'Price (Stock)' },\r\n    StockShortFloat: { hide: false, text: 'Short Float (Stock)' },\r\n    ExpiryDate: { hide: false, text: 'Expiry' },\r\n    Strike: { hide: false, text: 'Strike' },\r\n    LastPrice: { hide: false, text: 'Last Price' },\r\n    AvgEWMA: { hide: false, text: 'Valuation (Avg)'},\r\n    PriceBias: { hide: false, text: 'Bias (Price)', description: '| Last Price - Valuation (Avg) | / Last Price' },\r\n    VolBias: { hide: false, text: 'Bias (Vol.)' },\r\n    PriceStrikeRatio: { hide: false, text: 'P/S (%)', description: 'Last Price / Strike' },\r\n    PriceStrikeYearRatio: { hide: false, text: 'P/S (Y%)', description: 'Last Price / Strike (Year)' },\r\n    DistanceRatio: { hide: false, text: 'Dist (%)', description: '| Price (Stock) - Strike | / Strike' },\r\n    KellyCriterion_buy: { hide: true, text: 'Kelly (Buy)', description: 'Kelly Criterion' },\r\n    KellyCriterion_sell: { hide: true, text: 'Kelly (Sell)', description: 'Kelly Criterion' },\r\n    KellyCriterion_MU_0_buy: { hide: false, text: 'Kelly (Buy, MU0)', description: 'Kelly Criterion, MU=0' },\r\n    KellyCriterion_MU_0_sell: { hide: false, text: 'Kelly (Sell, MU0)', description: 'Kelly Criterion, MU=0' },\r\n    KellyCriterion_IV_buy: { hide: Options_Def[arg].name.startsWith('self_query') ? false : true, text: 'Kelly (Buy, IV)', description: 'Kelly Criterion (IV)' },\r\n    KellyCriterion_IV_sell: { hide: Options_Def[arg].name.startsWith('self_query') ? false : true, text: 'Kelly (Sell, IV)', description: 'Kelly Criterion (IV)' },\r\n    EarningDate: { hide: false, text: 'Earning Date' },\r\n    ExDividendDate: { hide: false, text: 'Ex-Dividend Date' }, \r\n    ExerciseProbability: { hide: false, text: 'Exercise Probability' }, \r\n    Delta: { hide: false, text: 'δ (Delta)' },\r\n    Gamma: { hide: false, text: 'γ (Gamma)' },\r\n    Rho: { hide: false, text: 'ρ (Rho)' },\r\n    Theta: { hide: false, text: 'θ (Theta)' },\r\n    Vega: { hide: false, text: 'ν (Vega)' },\r\n    LastTradeDate: { hide: false, text: 'Last Trade Date' },\r\n    Bid: { hide: false, text: 'Bid' },\r\n    Ask: { hide: false, text: 'Ask' },\r\n    Change: { hide: true, text: 'Change' },\r\n    PercentChange: { hide: false, text: 'Change (%)' },\r\n    Volume: { hide: false, text: 'Volume' },\r\n    OpenInterest: { hide: false, text: 'Open Interest' },\r\n    ImpliedVolatility: { hide: false, text: 'Implied Volatility' },\r\n    EWMAHisVol: { hide: false, text: 'EWMA Historical Volatility' },\r\n    BSM_EWMAHisVol: { hide: false, text: 'Black Scholes Merton' },\r\n    MC_EWMAHisVol: { hide: false, text: 'Monte Carlo' },\r\n    BT_EWMAHisVol: { hide: false, text: 'Binomial Tree' },\r\n    MCChart: { hide: false, text: 'MC Chart' },\r\n  }\r\n\r\n  const OptionPriceField = (field, headerName, width, valueFixed, hide, type) => {\r\n    let output = {\r\n      field: field,\r\n      headerName: headerName,\r\n      width: width,\r\n      type: 'number',\r\n      renderCell: (params) => {\r\n        const symbol = params.row['symbol']\r\n        let link = \"javascript:void(0)\"\r\n        if (type === \"stock\") {\r\n          link = YahooFinanceUrl + \"quote/\" +  symbol + \"?p=\" + symbol\r\n        } else if (type === \"option\") {\r\n          const expiredDate = params.row['expiryDate'].replaceAll(\"-\",\"\").substring(2) // 2022-10-28 -> 221028\r\n          const type = params.row['kind'] === 1 ? \"C\" : \"P\"\r\n          const strikeL = ((parseInt(params.row['strike'], 10)).toString()).padStart(5, 0)\r\n          let strikeR = (params.row['strike'].toFixed(3))\r\n          strikeR = strikeR.substring(strikeR.length-3)\r\n          const option_s = symbol + expiredDate + type +  strikeL + strikeR\r\n          link = YahooFinanceUrl + \"quote/\" + option_s + \"?p=\" + option_s\r\n        }\r\n  \r\n        return params.value === \"-\" || params.value === -Number.MAX_VALUE || params.value === Number.MAX_VALUE || params.value === null || params.value === undefined || params.value === \"Infinity\" || params.value === 'NaN' ?\r\n          <span>-</span> :\r\n          <Link href={link} target=\"_blank\" rel=\"noreferrer noopener\">\r\n          <span>{params.value.toFixed(valueFixed)}</span>\r\n          </Link>\r\n      },\r\n      hide: hide\r\n    }    \r\n    return output\r\n  }\r\n\r\n  const genTableColTemplate = () => {\r\n    return [\r\n      SymbolNameField('Symbol', 115, 'symbol' in hideColState ? hideColState['symbol'] : false),\r\n      OptionPriceField(\"stockPrice\", tableColList.StockPrice.text, 125, 2, \"stockPrice\" in hideColState ? hideColState[\"stockPrice\"] : tableColList['StockPrice'].hide, \"stock\"),\r\n      ShortFloatLinkWithShowChartField(\"stockShortFloat\", tableColList.StockShortFloat.text, 115, \"stockShortFloat\" in hideColState ? hideColState[\"stockShortFloat\"] : tableColList['StockShortFloat'].hide),\r\n      {\r\n        field: 'expiryDate',\r\n        headerName: tableColList.ExpiryDate.text,\r\n        width: 120,\r\n        type: 'date',\r\n        renderCell: (params) => (\r\n          <span>{moment(params.row['expiryDate']).format('YYYY-MM-DD')}</span>\r\n        ),\r\n        hide: 'expiryDate' in hideColState ? hideColState['expiryDate'] : tableColList['ExpiryDate'].hide\r\n      },\r\n      PureFieldWithValueCheck(\"strike\", tableColList.Strike.text, 110, 2, \"strike\" in hideColState ? hideColState[\"strike\"] : tableColList['Strike'].hide),\r\n      OptionPriceField(\"lastPrice\", tableColList.LastPrice.text, 140, 2, \"lastPrice\" in hideColState ? hideColState[\"lastPrice\"] : tableColList['LastPrice'].hide, \"option\"),\r\n      PureFieldWithValueCheck(\"avgEWMA\", tableColList.AvgEWMA.text, 140, 2, \"avgEWMA\" in hideColState ? hideColState[\"avgEWMA\"] : tableColList['AvgEWMA'].hide),\r\n      {\r\n        field: \"priceBias\",\r\n        headerName: tableColList.PriceBias.text,\r\n        width: 120,\r\n        type: 'number',\r\n        description: tableColList.PriceBias.description,\r\n        renderCell: (params) => (\r\n          params.value === \"-\" || params.value === -Number.MAX_VALUE || params.value === Number.MAX_VALUE || params.value === null || params.value === undefined || params.value === \"Infinity\" || params.value === 'NaN' ?\r\n            <span>-</span> :\r\n            <span style={{ fontWeight: 500, color: params.row['lastPrice'] > params.row['avgEWMA'] ? getRedLevel(params.value) : params.row['lastPrice'] < params.row['avgEWMA'] ? getBlueLevel(params.value) : '' }}>{params.value.toFixed(2)}</span>\r\n        ),\r\n        hide: \"priceBias\" in hideColState ? hideColState[\"priceBias\"] : tableColList['PriceBias'].hide\r\n      },\r\n      PercentField(\"priceStrikeRatio\", tableColList.PriceStrikeRatio.text, 90, \"priceStrikeRatio\" in hideColState ? hideColState[\"priceStrikeRatio\"] : tableColList['PriceStrikeRatio'].hide, tableColList.PriceStrikeRatio.description),\r\n      PercentField(\"priceStrikeYearRatio\", tableColList.PriceStrikeYearRatio.text, 90, \"priceStrikeYearRatio\" in hideColState ? hideColState[\"priceStrikeRatio\"] : tableColList['PriceStrikeYearRatio'].hide, tableColList.PriceStrikeYearRatio.description),\r\n      PercentField(\"distanceRatio\", tableColList.DistanceRatio.text, 90, \"distanceRatio\" in hideColState ? hideColState[\"distanceRatio\"] : tableColList['DistanceRatio'].hide, tableColList.DistanceRatio.description),\r\n      ColorPercentField(\"KellyCriterion_buy\", tableColList.KellyCriterion_buy.text, 130, 2, \"KellyCriterion_buy\" in hideColState ? hideColState[\"KellyCriterion_buy\"] : tableColList['KellyCriterion_buy'].hide, 500, tableColList.KellyCriterion_buy.description),\r\n      ColorPercentField(\"KellyCriterion_sell\", tableColList.KellyCriterion_sell.text, 130, 2, \"KellyCriterion_sell\" in hideColState ? hideColState[\"KellyCriterion_sell\"] : tableColList['KellyCriterion_sell'].hide, 500, tableColList.KellyCriterion_sell.description),\r\n      ColorPercentField(\"KellyCriterion_MU_0_buy\", tableColList.KellyCriterion_MU_0_buy.text, 130, 2, \"KellyCriterion_MU_0_buy\" in hideColState ? hideColState[\"kellyCriterion_MU_0_buy\"] : tableColList['KellyCriterion_MU_0_buy'].hide, 500, tableColList.KellyCriterion_MU_0_buy.description),\r\n      ColorPercentField(\"KellyCriterion_MU_0_sell\", tableColList.KellyCriterion_MU_0_sell.text, 130, 2, \"KellyCriterion_MU_0_sell\" in hideColState ? hideColState[\"KellyCriterion_MU_0_sell\"] : tableColList['KellyCriterion_MU_0_sell'].hide, 500, tableColList.KellyCriterion_MU_0_sell.description),\r\n      ColorPercentField(\"KellyCriterion_IV_buy\", tableColList.KellyCriterion_IV_buy.text, 130, 2, \"KellyCriterion_IV_buy\" in hideColState ? hideColState[\"kellyCriterion_IV_buy\"] : tableColList['KellyCriterion_IV_buy'].hide, 500, tableColList.KellyCriterion_IV_buy.description),\r\n      ColorPercentField(\"KellyCriterion_IV_sell\", tableColList.KellyCriterion_IV_sell.text, 130, 2, \"KellyCriterion_IV_sell\" in hideColState ? hideColState[\"KellyCriterion_IV_sell\"] : tableColList['KellyCriterion_IV_sell'].hide, 500, tableColList.KellyCriterion_IV_sell.description),\r\n      {\r\n        field: \"earningDate\",\r\n        headerName: tableColList.EarningDate.text,\r\n        width: 120,\r\n        renderCell: (params) => (\r\n          <span style={{ whiteSpace: 'normal', wordWrap: 'break-word', color: params.row['earningDateColor']}}>\r\n            {params.value}\r\n          </span>\r\n        ),\r\n        hide: \"earningDate\" in hideColState ? hideColState[\"earningDate\"] : tableColList['EarningDate'].hide\r\n      },\r\n      {\r\n        field: 'exDividendDate',\r\n        headerName: tableColList.ExDividendDate.text,\r\n        width: 120,\r\n        renderCell: (params) => (\r\n          'exDividendLink' in params.row && params.row['exDividendLink'] != \"\" && params.row['exDividendLink'] != \"-\" ?       \r\n          <Link href={params.row['exDividendLink']} target=\"_blank\" rel=\"noreferrer noopener\">\r\n            <span style={{color: params.row['exDividendDateColor']}}>{params.value}</span>\r\n          </Link> : <span>{params.value}</span>\r\n        ),\r\n        hide: 'exDividendDate' in hideColState ? hideColState['exDividendDate'] : tableColList['ExDividendDate'].hide\r\n      },\r\n      PercentField(\"exerciseProbability\", tableColList.ExerciseProbability.text, 90, \"exerciseProbability\" in hideColState ? hideColState[\"exerciseProbability\"] : tableColList['ExerciseProbability'].hide),\r\n      PureFieldWithValueCheck(\"delta\", tableColList.Delta.text, 90, 2, \"delta\" in hideColState ? hideColState[\"delta\"] : tableColList['Delta'].hide),\r\n      PureFieldWithValueCheck(\"gamma\", tableColList.Gamma.text, 90, 2, \"gamma\" in hideColState ? hideColState[\"gamma\"] : tableColList['Gamma'].hide),\r\n      PureFieldWithValueCheck(\"rho\", tableColList.Rho.text, 90, 2, \"rho\" in hideColState ? hideColState[\"rho\"] : tableColList['Rho'].hide),\r\n      PureFieldWithValueCheck(\"theta\", tableColList.Theta.text, 90, 2, \"theta\" in hideColState ? hideColState[\"theta\"] : tableColList['Theta'].hide),\r\n      PureFieldWithValueCheck(\"vega\", tableColList.Vega.text, 90, 2, \"vega\" in hideColState ? hideColState[\"vega\"] : tableColList['Vega'].hide),\r\n      {\r\n        field: 'lastTradeDate',\r\n        headerName: tableColList.LastTradeDate.text,\r\n        width: 145,\r\n        type: 'date',\r\n        renderCell: (params) => (\r\n          <span>{moment(params.row['lastTradeDate']).format('YYYY-MM-DD')}</span>\r\n        ),\r\n        hide: 'lastTradeDate' in hideColState ? hideColState['lastTradeDate'] : tableColList['LastTradeDate'].hide\r\n      },\r\n      PureFieldWithValueCheck(\"bid\", tableColList.Bid.text, 105, 2, \"bid\" in hideColState ? hideColState[\"bid\"] : tableColList['Bid'].hide),\r\n      PureFieldWithValueCheck(\"ask\", tableColList.Ask.text, 105, 2, \"ask\" in hideColState ? hideColState[\"ask\"] : tableColList['Ask'].hide),\r\n      ColorPosGreenNegRedField(\"change\", tableColList.Change.text, 130, \"change\" in hideColState ? hideColState[\"change\"] : tableColList['Change'].hide, 500),\r\n      ColorPercentField(\"percentChange\", tableColList.PercentChange.text, 140, 2, \"percentChange\" in hideColState ? hideColState[\"percentChange\"] : tableColList['PercentChange'].hide, 500),\r\n      PureFieldWithValueCheck(\"volume\", tableColList.Volume.text, 140, 0, \"volume\" in hideColState ? hideColState[\"volume\"] : tableColList['Volume'].hide),\r\n      PureFieldWithValueCheck(\"openInterest\", tableColList.OpenInterest.text, 140, 0, \"openInterest\" in hideColState ? hideColState[\"openInterest\"] : tableColList['OpenInterest'].hide),\r\n      PercentField(\"impliedVolatility\", tableColList.ImpliedVolatility.text, 140, \"impliedVolatility\" in hideColState ? hideColState[\"impliedVolatility\"] : tableColList['ImpliedVolatility'].hide),\r\n      PercentField(\"EWMAHisVol\", tableColList.EWMAHisVol.text, 140, \"EWMAHisVol\" in hideColState ? hideColState[\"EWMAHisVol\"] : tableColList['EWMAHisVol'].hide),\r\n      PureFieldWithValueCheck(\"BSM_EWMAHisVol\", tableColList.BSM_EWMAHisVol.text, 140, 2, \"BSM_EWMAHisVol\" in hideColState ? hideColState[\"BSM_EWMAHisVol\"] : tableColList['BSM_EWMAHisVol'].hide),\r\n      PureFieldWithValueCheck(\"MC_EWMAHisVol\", tableColList.MC_EWMAHisVol.text, 140, 2, \"MC_EWMAHisVol\" in hideColState ? hideColState[\"MC_EWMAHisVol\"] : tableColList['MC_EWMAHisVol'].hide),\r\n      PureFieldWithValueCheck(\"BT_EWMAHisVol\", tableColList.BT_EWMAHisVol.text, 140, 2, \"BT_EWMAHisVol\" in hideColState ? hideColState[\"BT_EWMAHisVol\"] : tableColList['BT_EWMAHisVol'].hide),\r\n      {\r\n        field: 'MCChart',\r\n        headerName: tableColList.MCChart.text,\r\n        width: 120,\r\n        renderCell: (params) => (\r\n          <IconButton\r\n            size=\"small\"\r\n            aria-haspopup=\"true\"\r\n            onClick={() => {\r\n              loadingAnimeRef.current.setLoading(true)\r\n              let iteration = 50\r\n              const query_string = '/stock/price-simulation-by-mc?symbol=' + params.row['symbol'] + '&iteration=' + iteration + '&mu=0&vol=' + \r\n              params.row['EWMAHisVol'] + '&days=' + workdayCount(moment(new Date().toISOString().split('T')[0]), moment(params.row['expiryDate']))\r\n              Promise.all([\r\n                GetDataByFetchObj(query_string, FetchNornFinanceAPIServerRef.current.server),\r\n              ]).then((allResponses) => {\r\n                console.log(allResponses)\r\n                if (allResponses.length === 1 && allResponses[0] !== null) {\r\n                  let chartData = []\r\n                  let cost = params.row['kind'] === 1 ? params.row['strike'] + params.row['lastPrice'] : params.row['strike'] - params.row['lastPrice']\r\n                  let info = {'symbol': params.row['symbol'], 'strike': params.row['strike'], 'cost': cost}\r\n                  allResponses[0]['mean'].forEach((mean_point, mean_index) => {\r\n                    let d = {'Mean': parseInt(mean_point * 100, 10) / 100.0, 'Name': 'Day' + mean_index}\r\n                    allResponses[0]['data'].forEach((data_points, data_i) => {\r\n                      d['Path-'+String(data_i).padStart(2, '0')] =  parseInt(data_points[mean_index] * 100, 10) / 100.0\r\n                    })\r\n                    chartData.push(d)\r\n                  })\r\n                  console.log(chartData)\r\n                  modalWindowRef.current.popModalWindow(<MonteCarloChart data={chartData} iteration={iteration} info={info}/>)\r\n                } else {\r\n                  console.error(\"Call simulation api failed\")\r\n                  modalWindowRef.current.popModalWindow(<div>Call simulation api failed</div>)\r\n                }\r\n                loadingAnimeRef.current.setLoading(false)\r\n              }).catch(() => {\r\n                console.error(\"Call simulation api failed...\")\r\n                modalWindowRef.current.popModalWindow(<div>Call simulation api failed...</div>)\r\n                loadingAnimeRef.current.setLoading(false)\r\n              })\r\n            }}\r\n          >\r\n            <BarChartSharpIcon color=\"primary\" style={{ fontSize: 40 }} />\r\n          </IconButton>\r\n        ),\r\n        hide: 'MCChart' in  hideColState? hideColState['MCChart'] : tableColList['MCChart'].hide\r\n      },\r\n    ]\r\n  }\r\n\r\n\r\n  const fetchOptionsData = useFetch({ cachePolicy: 'no-cache' })\r\n  const fetchExDividendData = useFetch({ cachePolicy: 'no-cache' })\r\n  const exDividendDictRef = useRef({}) \r\n  const fetchStockData = useFetch({ cachePolicy: 'no-cache' })\r\n  const StockDictRef = useRef({}) \r\n  \r\n  const renderTable = (resp, support_earnings_date) => {\r\n    // [{\"symbol\":\"A\",\"stockPrice\":149.50999450683594,\"EWMA_historicalVolatility\":0.2519420533670158,\"contracts\":[{\"expiryDate\":\"2022-01-21\",\"calls\":[{\"lastTradeDate\":\"2022-01-12\",\"strike\":155.0,\"lastPrice\":0.32,\"bid\":0.35,\"ask\":0.5,\"change\":0.049999982,\"percentChange\":18.51851,\"volume\":30,\"openInterest\":721,\"impliedVolatility\":0.22461712890624996,\"valuationData\":{\"BSM_EWMAHisVol\":0.7042894690005248,\"MC_EWMAHisVol\":0.70279983534146,\"BT_EWMAHisVol\":0.7046023394736802}}],\"puts\":[]}]}\r\n    var calls = []\r\n    var puts = []\r\n    resp.forEach((data) => {\r\n      let symbol = data[\"symbol\"]\r\n      let stock_price = data[\"stockPrice\"]\r\n      let stock_extra_info = data[\"stockExtraInfo\"]\r\n      let earningDate = support_earnings_date ? 'No Data' : 'Not Supported' \r\n      let min_earnings_date = 0\r\n      if (stock_extra_info != null && stock_extra_info[\"earningsDate\"] !== undefined && stock_extra_info[\"earningsDate\"] !== null && stock_extra_info[\"earningsDate\"] !== '') {\r\n        let temp = stock_extra_info[\"earningsDate\"].split(' - ')\r\n        temp.forEach((d, i) => {\r\n          temp[i] = temp[i].split(' ')[0]\r\n          if (i === 0) {\r\n            min_earnings_date = new Date(temp[i]).getTime()\r\n          }\r\n        })\r\n        earningDate = temp.join(\" - \")\r\n      }\r\n      let ex_dividend_date = ''\r\n      let ex_dividend_link = ''\r\n      if (symbol in exDividendDictRef.current) {\r\n        ex_dividend_date = exDividendDictRef.current[symbol]['ex_dividend_date']\r\n        ex_dividend_link = exDividendDictRef.current[symbol]['link']\r\n      }\r\n\r\n      let stock_short_float = '-'\r\n      if (symbol in StockDictRef.current) {\r\n        stock_short_float = StockDictRef.current[symbol]['Short Float']\r\n      }\r\n\r\n      let today = new Date(new Date().toISOString().split('T')[0]);\r\n\r\n      let ewma_his_vol = data[\"EWMA_historicalVolatility\"]\r\n      data[\"contracts\"].forEach((contracts) => {\r\n        let expiry_date = contracts[\"expiryDate\"]\r\n        let extra_data_func = (calls_puts, kind) => {\r\n          let output = calls_puts.map((cp, index) => {\r\n            let v = cp[\"valuationData\"]\r\n            let o = {\r\n              id: index,\r\n              symbol: symbol,\r\n              stockPrice: stock_price,\r\n              stockShortFloat: stock_short_float,\r\n              EWMAHisVol: ewma_his_vol,\r\n              kind: kind,\r\n              expiryDate: expiry_date,\r\n              lastTradeDate: cp[\"lastTradeDate\"] !== undefined && cp[\"lastTradeDate\"] !== null && cp[\"lastTradeDate\"] !== '-' ? cp[\"lastTradeDate\"] : 0,\r\n              strike: cp[\"strike\"] !== undefined && cp[\"strike\"] !== null && cp[\"strike\"] !== '-' ? cp[\"strike\"] : -Number.MAX_VALUE,\r\n              lastPrice: cp[\"lastPrice\"] !== undefined && cp[\"lastPrice\"] !== null && cp[\"lastPrice\"] !== '-' ? cp[\"lastPrice\"] : -Number.MAX_VALUE,\r\n              bid: cp[\"bid\"] !== undefined && cp[\"bid\"] !== null && cp[\"bid\"] !== '-' ? cp[\"bid\"] : -Number.MAX_VALUE,\r\n              ask: cp[\"ask\"] !== undefined && cp[\"ask\"] !== null && cp[\"ask\"] !== '-' ? cp[\"ask\"] : -Number.MAX_VALUE,\r\n              change: cp[\"change\"] !== undefined && cp[\"change\"] !== null && cp[\"change\"] !== '-' ? cp[\"change\"] : -Number.MAX_VALUE,\r\n              percentChange: cp[\"percentChange\"] !== undefined && cp[\"percentChange\"] !== null && cp[\"percentChange\"] !== '-' ? cp[\"percentChange\"] / 100.0 : -Number.MAX_VALUE,\r\n              volume: cp[\"volume\"] !== undefined && cp[\"volume\"] !== null && cp[\"volume\"] !== '-' ? cp[\"volume\"] : -Number.MAX_VALUE,\r\n              openInterest: cp[\"openInterest\"] !== undefined && cp[\"openInterest\"] !== null && cp[\"openInterest\"] !== '-' ? cp[\"openInterest\"] : -Number.MAX_VALUE,\r\n              impliedVolatility: cp[\"impliedVolatility\"] !== undefined && cp[\"impliedVolatility\"] !== null && cp[\"impliedVolatility\"] !== '-' ? cp[\"impliedVolatility\"] : -Number.MAX_VALUE,\r\n              BSM_EWMAHisVol: v[\"BSM_EWMAHisVol\"] !== undefined && v[\"BSM_EWMAHisVol\"] !== null && v[\"BSM_EWMAHisVol\"] > 0 ? v[\"BSM_EWMAHisVol\"] : -Number.MAX_VALUE,\r\n              MC_EWMAHisVol: v[\"MC_EWMAHisVol\"] !== undefined && v[\"MC_EWMAHisVol\"] !== null && v[\"MC_EWMAHisVol\"] > 0 ? v[\"MC_EWMAHisVol\"] : -Number.MAX_VALUE,\r\n              BT_EWMAHisVol: v[\"BT_EWMAHisVol\"] !== undefined && v[\"BT_EWMAHisVol\"] !== null && v[\"BT_EWMAHisVol\"] > 0 ? v[\"BT_EWMAHisVol\"] : -Number.MAX_VALUE,\r\n              delta: v[\"delta\"] !== undefined && v[\"delta\"] !== null ? v[\"delta\"] : -Number.MAX_VALUE,\r\n              gamma: v[\"gamma\"] !== undefined && v[\"gamma\"] !== null ? v[\"gamma\"] : -Number.MAX_VALUE,\r\n              rho: v[\"rho\"] !== undefined && v[\"rho\"] !== null ? v[\"rho\"] : -Number.MAX_VALUE,\r\n              theta: v[\"theta\"] !== undefined && v[\"theta\"] !== null ? v[\"theta\"] : -Number.MAX_VALUE,\r\n              vega: v[\"vega\"] !== undefined && v[\"vega\"] !== null ? v[\"vega\"] : -Number.MAX_VALUE,\r\n              KellyCriterion_buy: v[\"KellyCriterion_buy\"] !== undefined && v[\"KellyCriterion_buy\"] !== null ? v[\"KellyCriterion_buy\"] : -Number.MAX_VALUE,\r\n              KellyCriterion_sell: v[\"KellyCriterion_sell\"] !== undefined && v[\"KellyCriterion_sell\"] !== null ? v[\"KellyCriterion_sell\"] : -Number.MAX_VALUE,\r\n              KellyCriterion_MU_0_buy: v[\"KellyCriterion_MU_0_buy\"] !== undefined && v[\"KellyCriterion_MU_0_buy\"] !== null ? v[\"KellyCriterion_MU_0_buy\"] : -Number.MAX_VALUE,\r\n              KellyCriterion_MU_0_sell: v[\"KellyCriterion_MU_0_sell\"] !== undefined && v[\"KellyCriterion_MU_0_sell\"] !== null ? v[\"KellyCriterion_MU_0_sell\"] : -Number.MAX_VALUE,\r\n              KellyCriterion_IV_buy: v[\"KellyCriterion_IV_buy\"] !== undefined && v[\"KellyCriterion_IV_buy\"] !== null ? v[\"KellyCriterion_IV_buy\"] : -Number.MAX_VALUE,\r\n              KellyCriterion_IV_sell: v[\"KellyCriterion_IV_sell\"] !== undefined && v[\"KellyCriterion_IV_sell\"] !== null ? v[\"KellyCriterion_IV_sell\"] : -Number.MAX_VALUE,\r\n              earningDate: earningDate,\r\n              earningDateColor: min_earnings_date > 0 && new Date(expiry_date).getTime() >= min_earnings_date && min_earnings_date >= today.getTime() ? 'red':'',\r\n              exDividendDate: ex_dividend_date != '' ? ex_dividend_date : 'No Data',\r\n              exDividendLink: ex_dividend_link,\r\n              exDividendDateColor:ex_dividend_date != '' && new Date(expiry_date).getTime() >= new Date(ex_dividend_date).getTime() && new Date(ex_dividend_date).getTime() >= today.getTime() ? 'red':'',\r\n              exerciseProbability: v[\"exerciseProbability\"] !== undefined && v[\"exerciseProbability\"] !== null ? v[\"exerciseProbability\"] : -Number.MAX_VALUE,\r\n            }\r\n            let cnt = 0\r\n            let sum = 0\r\n            if (o.BSM_EWMAHisVol > 0) {\r\n              cnt += 1\r\n              sum += o.BSM_EWMAHisVol\r\n            }\r\n            if (o.MC_EWMAHisVol > 0) {\r\n              cnt += 1\r\n              sum += o.MC_EWMAHisVol\r\n            }\r\n            if (o.BT_EWMAHisVol > 0) {\r\n              cnt += 1\r\n              sum += o.BT_EWMAHisVol\r\n            }\r\n            o[\"avgEWMA\"] = sum / cnt\r\n\r\n            o[\"priceBias\"] = -Number.MAX_VALUE\r\n            if (o.lastPrice != -Number.MAX_VALUE) {\r\n              o[\"priceBias\"] = Math.abs(o.lastPrice - o[\"avgEWMA\"]) / o.lastPrice\r\n            }\r\n\r\n            o[\"priceStrikeRatio\"] = -Number.MAX_VALUE\r\n            if (o.strike != -Number.MAX_VALUE && o.lastPrice != -Number.MAX_VALUE) {\r\n              o[\"priceStrikeRatio\"] = o.lastPrice / o.strike\r\n            }\r\n\r\n            o[\"priceStrikeYearRatio\"] = -Number.MAX_VALUE\r\n            if (o[\"priceStrikeRatio\"] != -Number.MAX_VALUE) {\r\n              let day_diff = Math.floor((Date.parse(expiry_date) - Date.parse(new Date().toISOString().slice(0, 10))) / 86400000)\r\n              o[\"priceStrikeYearRatio\"] = o[\"priceStrikeRatio\"] * 365.0 / day_diff\r\n            }\r\n\r\n            o[\"distanceRatio\"] = -Number.MAX_VALUE\r\n            if (o.strike != -Number.MAX_VALUE && o.stockPrice != -Number.MAX_VALUE) {\r\n              o[\"distanceRatio\"] = Math.abs(o.stockPrice - o.strike) / o.stockPrice\r\n            }\r\n\r\n            return o\r\n          })\r\n          return output\r\n        }\r\n        calls = calls.concat(extra_data_func(contracts[\"calls\"], 1))\r\n        puts = puts.concat(extra_data_func(contracts[\"puts\"], -1))\r\n      })\r\n    })\r\n\r\n    // reset id\r\n    calls.forEach((d, i) => {\r\n      calls[i].id = i\r\n    });\r\n    puts.forEach((d, i) => {\r\n      puts[i].id = i\r\n    });\r\n\r\n    console.log(calls)\r\n    setCallsData(calls)\r\n    console.log(puts)\r\n    setPutsData(puts)\r\n  }\r\n\r\n  const renderOptionsData = (file_name) => {\r\n    loadingAnimeRef.current.setLoading(true)\r\n    Promise.all([\r\n      GetDataByFetchObj('/norn-data/options/ex_dividend_date_list.json', fetchExDividendData),\r\n      GetDataByFetchObj('/norn-data/stock/stat.json', fetchStockData),\r\n      GetDataByFetchObj('/norn-data/options/' + file_name + '.json', fetchOptionsData),\r\n    ]).then((allResponses) => {\r\n      console.log(allResponses)\r\n      if (allResponses.length === 3 && allResponses[0] !== null && allResponses[1] !== null && allResponses[2] !== null) {\r\n        exDividendDictRef.current = Object.assign({}, ...allResponses[0]['data'].map((x) => ({[x['symbol']]: x})))\r\n        StockDictRef.current = allResponses[1]\r\n        renderTable(allResponses[2], false)\r\n      } else {\r\n        console.error(\"renderOptionsData some data failed\")\r\n        modalWindowRef.current.popModalWindow(<div>Get some data failed...</div>)\r\n      }\r\n      loadingAnimeRef.current.setLoading(false)\r\n    }).catch(() => {\r\n      console.error(\"renderOptionsData failed\")\r\n      modalWindowRef.current.popModalWindow(<div>Get data failed...</div>)\r\n      loadingAnimeRef.current.setLoading(false)\r\n    })\r\n  }\r\n\r\n  const refreshData = (name) => {\r\n    if (name.startsWith('self_query')) {\r\n      setDisplayQuery(true)\r\n      setCallsData([])\r\n      setPutsData([])\r\n      loadingAnimeRef.current.setLoading(false)\r\n    } else {\r\n      setDisplayQuery(false)\r\n      renderOptionsData(name)\r\n    }\r\n  }\r\n\r\n  const queryParameterRef = useRef([])\r\n  SelfQuery_Def.parameters.forEach((value, index) => {\r\n    queryParameterRef.current[index] = createRef()\r\n    queryParameterRef.current[index].current = { value: value.val }\r\n  })\r\n  const queryParameterCurrentRef = useRef(null)\r\n\r\n  useEffect(() => {\r\n    // componentDidMount is here!\r\n    // componentDidUpdate is here!\r\n    refreshData(Options_Def[0].name)\r\n\r\n    return () => {\r\n      // componentWillUnmount is here!\r\n    }\r\n  }, [])\r\n\r\n  useInterval(() => {\r\n    if (ws && ws.readyState === WebSocket.OPEN) {\r\n      ws.send(\"\") // heartbeat\r\n      console.log(\"heartbeat\")\r\n    }\r\n  }, ws ? 3000 : null)\r\n\r\n  useEffect(() => {\r\n    if (ws) {\r\n      ws.onopen = () => {\r\n        loadingAnimeRef.current.setLoading(true)\r\n        console.log('WebSocket Connected')\r\n      }\r\n      ws.onmessage = (e) => {\r\n        const message = JSON.parse(e.data)\r\n        console.log(message)\r\n        renderTable([message], true)\r\n        loadingAnimeRef.current.setLoading(false)\r\n        setWs(null)\r\n      }\r\n    }\r\n    return () => {\r\n    }\r\n  }, [ws])\r\n  \r\n  return (\r\n    <div className={commonStyle.defaultFont + ' ' + optionsStyle.container}>\r\n      <div key={shortid.generate()} >\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={6}>\r\n            <FormControl size=\"small\" variant=\"outlined\" className={optionsStyle.optionsTableSelect}>\r\n              <InputLabel htmlFor=\"arg-select\">{'Options Valuation'}</InputLabel>\r\n              <Select\r\n                native\r\n                value={arg}\r\n                displayEmpty\r\n                onChange={(event) => {\r\n                  setArg(event.target.value)\r\n                  refreshData(Options_Def[event.target.value].name)\r\n                }}\r\n                label={'Options Valuation'}\r\n              >\r\n                {\r\n                  Options_Def.map((value, index) => {\r\n                    return <option key={shortid.generate()} index={index} value={index}>{value.display_name}</option>\r\n                  })\r\n                }\r\n              </Select>\r\n            </FormControl>\r\n          </Grid>\r\n        </Grid>\r\n        <div className={optionsStyle.queryPannel} style={{ display: displayQuery ? 'block' : 'none' }}>\r\n          <div className={optionsStyle.parameterTitle}>\r\n            <Typography variant=\"h6\" gutterBottom component=\"div\">\r\n              {'Query Parameters'}\r\n              <NoMaxWidthTooltip arrow title={<span style={{ fontSize: '14px', whiteSpace: 'pre-line', lineHeight: '20px', textAlign: 'center'}}>{QueryNote}</span>} >\r\n                <IconButton onClick={() => window.open(NornFinanceAPIServerGithub, \"_blank\")}>\r\n                  <InfoIcon color=\"action\"/>\r\n                </IconButton>\r\n              </NoMaxWidthTooltip>\r\n            </Typography>\r\n          </div>\r\n          <div className={optionsStyle.parameterBlock}>\r\n            <Grid container spacing={2}>\r\n              <ParameterNodesField queryParameterRef={queryParameterRef} queryParameterCurrentRef={queryParameterCurrentRef}/>\r\n              <Grid item md={2} xs={12} >\r\n                <Box display=\"flex\" justifyContent=\"flex-end\">\r\n                  <ThemeProvider theme={createTheme({ palette: { primary: blue } })}>\r\n                    <Button className={isMobile ? optionsStyle.queryBtnMobile : optionsStyle.queryBtn} variant=\"contained\" color=\"primary\" startIcon={<SearchIcon />} onClick={() => {\r\n                      queryParameterCurrentRef.current = []\r\n                      let args = SelfQuery_Def.parameters.reduce((accumulator, currentValue, currentIndex) => {\r\n                        accumulator[currentValue.name] = queryParameterRef.current[currentIndex].current.value\r\n                        queryParameterCurrentRef.current.push(accumulator[currentValue.name])\r\n                        return accumulator\r\n                      }, {})\r\n                      console.log(args)\r\n                      let query_string = \"/ws/option/quote-valuation?\" + Object.keys(args).map(function (key) { return key + \"=\" + args[key] }).join(\"&\") + \"&calc_kelly_iv=true&iteration=20\"\r\n                      setWs(new WebSocket(\"wss://\" + NornFinanceAPIServerDomain + query_string))\r\n                    }}>{'Query Now'}</Button>\r\n                  </ThemeProvider>\r\n                </Box>\r\n              </Grid>\r\n            </Grid>\r\n          </div>\r\n        </div>\r\n        <div className={optionsStyle.table}>\r\n          <DataGrid rows={callsData} columns={genTableColTemplate()} components={{ NoRowsOverlay: DefaultDataGridTable, }} disableSelectionOnClick onColumnVisibilityChange={(param) => {\r\n            let tempHideColState = hideColState\r\n            tempHideColState[param['field']] = !param['isVisible']\r\n            setHideColState(tempHideColState)\r\n          }} initialState={{\r\n            filter: {\r\n              filterModel: {\r\n                items: [{ columnField: 'lastPrice', operatorValue: '>', value: 0.1 }],\r\n              },\r\n            },\r\n            sorting: {\r\n              sortModel: [{ field: 'priceBias', sort: 'desc' }],\r\n            },\r\n          }}/>\r\n        </div>\r\n        <div className={optionsStyle.table}>\r\n          <DataGrid rows={putsData} columns={genTableColTemplate()} components={{ NoRowsOverlay: DefaultDataGridTable, }} disableSelectionOnClick onColumnVisibilityChange={(param) => {\r\n            let tempHideColState = hideColState\r\n            tempHideColState[param['field']] = !param['isVisible']\r\n            setHideColState(tempHideColState)\r\n          }} initialState={{\r\n            filter: {\r\n              filterModel: {\r\n                items: [{ columnField: 'lastPrice', operatorValue: '>', value: 0.1 }],\r\n              },\r\n            },\r\n            sorting: {\r\n              sortModel: [{ field: 'priceBias', sort: 'desc' }],\r\n            },\r\n          }}/>\r\n        </div>\r\n      </div>\r\n      <ModalWindow modalWindowRef={modalWindowRef} />\r\n      <FetchNornFinanceAPIServer FetchNornFinanceAPIServerRef={FetchNornFinanceAPIServerRef}/>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Options\r\n","import React, { useRef } from 'react'\r\nimport { StylesProvider } from '@mui/styles'\r\n\r\nimport Layout from '../components/layout'\r\nimport Options from '../components/options/valuation/options'\r\nimport LoadingAnime from '../components/loadingAnime'\r\nimport SEO from '../components/seo'\r\n\r\nconst OptionsValuationPage = () => {\r\n\r\n  const loadingAnimeRef = useRef({\r\n    getLoading: null,\r\n    setLoading: null\r\n  })\r\n\r\n  return (\r\n    <StylesProvider injectFirst>\r\n      <SEO />\r\n      <Layout >\r\n        <Options loadingAnimeRef={loadingAnimeRef} />\r\n      </Layout>\r\n      <LoadingAnime loadingAnimeRef={loadingAnimeRef} />\r\n    </StylesProvider>\r\n  )\r\n}\r\n\r\nexport default OptionsValuationPage\r\n","/**\n * @fileOverview Line Chart\n */\nimport { generateCategoricalChart } from './generateCategoricalChart';\nimport { Line } from '../cartesian/Line';\nimport { XAxis } from '../cartesian/XAxis';\nimport { YAxis } from '../cartesian/YAxis';\nimport { formatAxisMap } from '../util/CartesianUtils';\nexport var LineChart = generateCategoricalChart({\n  chartName: 'LineChart',\n  GraphicalChild: Line,\n  axisComponents: [{\n    axisType: 'xAxis',\n    AxisComp: XAxis\n  }, {\n    axisType: 'yAxis',\n    AxisComp: YAxis\n  }],\n  formatAxisMap: formatAxisMap\n});","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = exports.default = (0, _createSvgIcon.default)(/*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M4 9h4v11H4zm12 4h4v7h-4zm-6-9h4v16h-4z\"\n}), 'BarChartSharp');","import React, { PureComponent } from 'react'\r\nimport shortid from 'shortid'\r\nimport {\r\n  LineChart,\r\n  Line,\r\n  Label,\r\n  XAxis,\r\n  YAxis,\r\n  CartesianGrid,\r\n  Tooltip,\r\n  ReferenceLine,\r\n  ResponsiveContainer\r\n} from 'recharts'\r\n\r\n\r\nclass CustomizedLabel extends PureComponent {\r\n  render() {\r\n    const { x, y, stroke, value, fontSize } = this.props;\r\n\r\n    return (\r\n      <text x={x} y={y} dy={-4} fill={stroke} fontSize={fontSize} textAnchor=\"middle\">\r\n        {value}\r\n      </text>\r\n    );\r\n  }\r\n}\r\n\r\nconst MonteCarloChart = ({ data, iteration, info, show_mean_label=true, modal_mode=true }) => {\r\n\r\n  const dataLines = Array(iteration).fill(0).map((value, index) => {\r\n    return <Line key={shortid.generate()}  type=\"monotone\" dataKey={'Path-'+String(index).padStart(2, '0')} stroke={'#d3d3d3'} dot={false} strokeWidth={2}/>\r\n  })\r\n  // console.log(dataLines)\r\n  const optionReferenceLines = \"strike\" in info && \"cost\" in info ? \r\n  <>          \r\n    <ReferenceLine y={info.strike} label={{ position: 'insideBottomLeft',  value: 'Strike: ' + info.strike, fill: 'red', fontSize: 14 }} stroke=\"red\" strokeDasharray=\"3 3\" />\r\n    <ReferenceLine y={info.cost} label={{ position: 'insideTopLeft',  value: 'Cost: ' + info.cost, fill: 'blue', fontSize: 14 }} stroke=\"blue\" strokeDasharray=\"3 3\" />\r\n  </> : <></>\r\n\r\n  const xAxisLabel = \"symbol\" in info ? \r\n  <Label value={\"Symbol: \" + info.symbol} offset={5} position=\"bottom\" fill='#8884d8' fontSize={16} /> : <></>\r\n\r\n  const chartStyle = modal_mode ? { width: (window.innerWidth - 100) + 'px', height: (window.innerHeight - 100) + 'px', maxWidth: '1200px', maxHeight: '600px' } : {width: '100%', height: '100%'}\r\n\r\n  return (\r\n    <div style={chartStyle}>\r\n      <ResponsiveContainer width=\"100%\" height=\"100%\">\r\n        <LineChart\r\n          data={data}\r\n          margin={{\r\n            top: 5,\r\n            right: 30,\r\n            left: 20,\r\n            bottom: 20,\r\n          }}\r\n        >\r\n          <CartesianGrid strokeDasharray=\"3 3\" />\r\n          <XAxis dataKey=\"Name\">\r\n            {xAxisLabel}\r\n          </XAxis>\r\n          <YAxis domain={['auto', 'auto']} />\r\n          <Tooltip itemSorter={item => item.name}/>\r\n          {dataLines}\r\n          <Line type=\"monotone\" dataKey=\"Mean\" stroke=\"#FF8042\" strokeWidth={3} label={show_mean_label ? <CustomizedLabel stroke={\"#FF8042\"} fontSize={14}/> : <></>} />\r\n          {optionReferenceLines}\r\n        </LineChart>\r\n      </ResponsiveContainer>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nexport default MonteCarloChart\r\n","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = exports.default = (0, _createSvgIcon.default)(/*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2m1 15h-2v-6h2zm0-8h-2V7h2z\"\n}), 'Info');","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"options-module--container--2g_bX\",\"optionsTableSelect\":\"options-module--optionsTableSelect--2h6H5\",\"queryPannel\":\"options-module--queryPannel--2bEK-\",\"parameterTitle\":\"options-module--parameterTitle--1emU9\",\"parameterBlock\":\"options-module--parameterBlock--2QBHO\",\"valueText\":\"options-module--valueText--1ha1M\",\"queryBtn\":\"options-module--queryBtn--3ljAN\",\"queryBtnMobile\":\"options-module--queryBtnMobile--1UsUa\",\"table\":\"options-module--table--16_cs\"};"],"sourceRoot":""}