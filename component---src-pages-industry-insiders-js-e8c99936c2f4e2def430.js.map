{"version":3,"sources":["webpack:///./src/components/industry-insiders/industryInsidersTable.js","webpack:///./src/pages/industry-insiders.js","webpack:///./node_modules/@mui/icons-material/ListAlt.js","webpack:///./src/components/industry-insiders/industryInsidersTable.module.scss"],"names":["IndustryInsidersTable","_ref","loadingAnimeRef","modalWindowRef","useRef","popModalWindow","popPureModal","tableColList","hide","text","get","response","useFetch","cachePolicy","rowData","setRowData","useState","hideColState","setHideColState","useEffect","async","resp_data","ok","console","log","output","map","value","index","id","industry","url","change","floatShort","perfWeek","Number","MAX_VALUE","perfMonth","perfQuarter","perfHalfY","perfYear","perfYTD","recom","tradeWeek","tradeMonth","tradeQuarter","tradeHalfY","tradeYear","tradeYTD","current","React","createElement","setLoading","getIndustryInsidersTable","Fragment","className","industryInsidersTableStyle","container","table","DataGrid","rows","columns","field","headerName","width","renderCell","params","row","Link","href","target","rel","ColorPercentField","PercentField","type","style","fontWeight","color","URL","getUrl","protocol","hostname","port","match","join","IconButton","size","aria-haspopup","ListAltIcon","fontSize","components","NoRowsOverlay","DefaultDataGridTable","disableSelectionOnClick","onColumnVisibilityChange","param","tempHideColState","ModalWindow","IndustryInsidersPage","getLoading","StylesProvider","injectFirst","SEO","Layout","LoadingAnime","_interopRequireDefault","Object","defineProperty","exports","default","_createSvgIcon","_jsxRuntime","jsx","d","module"],"mappings":"0SAqKeA,MAtJeC,IAA0B,IAAzB,gBAAEC,GAAiBD,EAEhD,MAAME,EAAiBC,iBAAO,CAC5BC,eAAgB,KAChBC,aAAc,OAGVC,EACI,CAAEC,MAAM,EAAOC,KAAM,UADzBF,EAEQ,CAAEC,MAAM,EAAMC,KAAM,eAF5BF,EAGG,CAAEC,MAAM,EAAMC,KAAM,SAHvBF,EAIM,CAAEC,MAAM,EAAOC,KAAM,aAJ3BF,EAKO,CAAEC,MAAM,EAAOC,KAAM,cAL5BF,EAMS,CAAEC,MAAM,EAAOC,KAAM,gBAN9BF,EAOO,CAAEC,MAAM,EAAOC,KAAM,eAP5BF,EAQM,CAAEC,MAAM,EAAOC,KAAM,aAR3BF,EASK,CAAEC,MAAM,EAAOC,KAAM,YAT1BF,EAUO,CAAEC,MAAM,EAAOC,KAAM,cAV5BF,EAWQ,CAAEC,MAAM,EAAOC,KAAM,eAX7BF,EAYU,CAAEC,MAAM,EAAOC,KAAM,iBAZ/BF,EAaQ,CAAEC,MAAM,EAAOC,KAAM,gBAb7BF,EAcO,CAAEC,MAAM,EAAOC,KAAM,cAd5BF,EAeM,CAAEC,MAAM,EAAOC,KAAM,aAf3BF,EAgBQ,CAAEC,MAAM,EAAOC,KAAM,WA4D7B,IAAEC,EAAG,SAAEC,GAAaC,YAAS,CAAEC,YAAa,cAuC5C,EAACC,EAAQ,EAACC,GAAcC,mBAAS,KACjC,EAACC,EAAa,EAACC,GAAmBF,mBAAS,IAWjD,OATAG,oBAAU,KAxCuBC,WAC/B,MAAMC,QAAkBX,EAAI,iCAC5B,GAAIC,EAASW,GAAI,CACfC,QAAQC,IAAIH,GAEZ,IAAII,EAASJ,EAAgB,KAAEK,IAAI,CAACC,EAAOC,KACjC,CACNC,GAAID,EACJE,SAAUH,EAAgB,SAC1BI,IAAKJ,EAAW,IAChBK,OAAQL,EAAc,OACtBM,WAAYN,EAAM,eAClBO,SAAiC,MAAvBP,EAAM,aAAuBA,EAAM,cAAgBQ,OAAOC,UACpEC,UAAmC,MAAxBV,EAAM,cAAwBA,EAAM,eAAiBQ,OAAOC,UACvEE,YAAqC,MAAxBX,EAAM,cAAwBA,EAAM,eAAiBQ,OAAOC,UACzEG,UAAkC,MAAvBZ,EAAM,aAAuBA,EAAM,cAAgBQ,OAAOC,UACrEI,SAAiC,MAAvBb,EAAM,aAAuBA,EAAM,cAAgBQ,OAAOC,UACpEK,QAA+B,MAAtBd,EAAM,YAAsBA,EAAM,aAAeQ,OAAOC,UACjEM,MAAOf,EAAa,MACpBgB,UAAmC,MAAxBhB,EAAM,cAAwBA,EAAM,eAAiBQ,OAAOC,UACvEQ,WAAqC,MAAzBjB,EAAM,eAAyBA,EAAM,gBAAkBQ,OAAOC,UAC1ES,aAAuC,MAAzBlB,EAAM,eAAyBA,EAAM,gBAAkBQ,OAAOC,UAC5EU,WAAoC,MAAxBnB,EAAM,cAAwBA,EAAM,eAAiBQ,OAAOC,UACxEW,UAAmC,MAAxBpB,EAAM,cAAwBA,EAAM,eAAiBQ,OAAOC,UACvEY,SAAiC,MAAvBrB,EAAM,aAAuBA,EAAM,cAAgBQ,OAAOC,aAIxErB,EAAWU,QAGXtB,EAAe8C,QAAQ5C,eAAe6C,IAAAC,cAAA,WAAK,0BAC3CpC,EAAW,IAEbb,EAAgB+C,QAAQG,YAAW,IASnCC,GACO,QAGN,IAGDH,IAAAC,cAAAD,IAAAI,SAAA,KACEJ,IAAAC,cAAA,OAAKI,UAAWC,IAA2BC,WACzCP,IAAAC,cAAA,OAAKI,UAAWC,IAA2BE,OACzCR,IAAAC,cAACQ,IAAQ,CAACC,KAAM9C,EAAS+C,QA/GxB,CACL,CACEC,MAAO,WACPC,WAAY,WACZC,MAAO,IACPC,WAAaC,GACW,MAAtBA,EAAOC,IAAS,IACdjB,IAAAC,cAAA,YAAOe,EAAOvC,OACduB,IAAAC,cAACiB,IAAI,CAACC,KAAMH,EAAOC,IAAS,IAAGG,OAAO,SAASC,IAAI,uBACjDrB,IAAAC,cAAA,YAAOe,EAAOvC,QAGpBnB,KAAM,aAAcS,GAAeA,EAAuB,UAE5DuD,YAAkB,SAAUjE,EAAuBE,KAAM,IAAK,EAAG,WAAYQ,EAAeA,EAAqB,OAAIV,EAAuBC,KAAM,KAClJiE,YAAa,aAAclE,EAA2BE,KAAM,IAAK,eAAgBQ,EAAeA,EAAyB,WAAIV,EAA2BC,MACxJ,CACEsD,MAAO,QACPC,WAAYxD,EAAsBE,KAClCuD,MAAO,IACPU,KAAM,SACNT,WAAaC,GACXhB,IAAAC,cAAA,QAAMwB,MAAO,CAAEC,WAAY,IAAKC,MAAOX,EAAOvC,MAAQ,EAAI,QAAUuC,EAAOvC,MAAQ,EAAI,MAAQ,KAAOuC,EAAOvC,OAE/GnB,KAAM,UAAWS,EAAeA,EAAoB,MAAIV,EAAsBC,MAEhFgE,YAAkB,WAAYjE,EAAyBE,KAAM,IAAK,EAAG,aAAcQ,EAAeA,EAAuB,SAAIV,EAAyBC,KAAM,KAC5JgE,YAAkB,YAAajE,EAA0BE,KAAM,IAAK,EAAG,cAAeQ,EAAeA,EAAwB,UAAIV,EAA0BC,KAAM,KACjKgE,YAAkB,cAAejE,EAA4BE,KAAM,IAAK,EAAG,gBAAiBQ,EAAeA,EAA0B,YAAIV,EAA4BC,KAAM,KAC3KgE,YAAkB,YAAajE,EAA0BE,KAAM,IAAK,EAAG,cAAeQ,EAAeA,EAAwB,UAAIV,EAA0BC,KAAM,KACjKgE,YAAkB,WAAYjE,EAAyBE,KAAM,IAAK,EAAG,aAAcQ,EAAeA,EAAuB,SAAIV,EAAyBC,KAAM,KAC5JgE,YAAkB,UAAWjE,EAAwBE,KAAM,IAAK,EAAG,YAAaQ,EAAeA,EAAsB,QAAIV,EAAwBC,KAAM,KACvJgE,YAAkB,YAAajE,EAA0BE,KAAM,IAAK,EAAG,cAAeQ,EAAeA,EAAwB,UAAIV,EAA0BC,KAAM,KACjKgE,YAAkB,aAAcjE,EAA2BE,KAAM,IAAK,EAAG,eAAiBQ,EAAcA,EAAyB,WAAIV,EAA2BC,KAAM,KACtKgE,YAAkB,eAAgBjE,EAA6BE,KAAM,IAAK,EAAG,iBAAkBQ,EAAeA,EAA2B,aAAIV,EAA6BC,KAAM,KAChLgE,YAAkB,aAAcjE,EAA2BE,KAAM,IAAK,EAAG,eAAgBQ,EAAeA,EAAyB,WAAIV,EAA2BC,KAAM,KACtKgE,YAAkB,YAAajE,EAA0BE,KAAM,IAAK,EAAG,cAAeQ,EAAeA,EAAwB,UAAIV,EAA0BC,KAAM,KACjKgE,YAAkB,WAAYjE,EAAyBE,KAAM,IAAK,EAAG,aAAcQ,EAAcA,EAAuB,SAAIV,EAAyBC,KAAM,KAC3J,CACEsD,MAAO,aACPC,WAAYxD,EAA2BE,KACvCuD,MAAO,IACPC,WAAaC,GACXhB,IAAAC,cAAA,KAAGkB,KAAO,IAAIS,IAAIC,eAAWC,SAAW,KAAQ,IAAIF,IAAIC,eAAWE,SAAW,IAAO,IAAIH,IAAIC,eAAWG,KAA9F,iCAA6IhB,EAAOC,IAAc,SAAEgB,MAAM,SAASC,KAAK,KAAMd,OAAO,SAASC,IAAI,uBAC1NrB,IAAAC,cAACkC,IAAU,CACTC,KAAK,QACLC,gBAAc,QACdrC,IAAAC,cAACqC,IAAW,CAACX,MAAM,UAAUF,MAAO,CAAEc,SAAU,QAItDjF,KAAM,eAAiBS,EAAcA,EAAyB,WAAIV,EAA2BC,OA4DlCkF,WAAY,CAAEC,cAAeC,KAAyBC,yBAAuB,EAACC,yBAA2BC,IAChK,IAAIC,EAAmB/E,EACvB+E,EAAiBD,EAAa,QAAMA,EAAiB,UACrD7E,EAAgB8E,QAItB9C,IAAAC,cAAC8C,IAAW,CAAC9F,eAAgBA,M,wBCtIpB+F,UAlBcA,KAEzB,MAAMhG,EAAkBE,iBAAO,CAC3B+F,WAAY,KACZ/C,WAAY,OAGhB,OACIF,IAAAC,cAACiD,IAAc,CAACC,aAAW,GACvBnD,IAAAC,cAACmD,IAAG,MACJpD,IAAAC,cAACoD,IAAM,KACHrD,IAAAC,cAACnD,EAAqB,CAACE,gBAAiBA,KAE5CgD,IAAAC,cAACqD,IAAY,CAACtG,gBAAiBA,O,kCClB3C,IAAIuG,EAAyB,EAAQ,QACrCC,OAAOC,eAAeC,EAAS,aAAc,CAC3CjF,OAAO,IAETiF,EAAQC,aAAU,EAClB,IAAIC,EAAiBL,EAAuB,EAAQ,SAChDM,EAAc,EAAQ,QACXH,EAAQC,SAAU,EAAIC,EAAeD,UAAsB,EAAIE,EAAYC,KAAK,OAAQ,CACrGC,EAAG,8KACD,Y,4CCXJC,EAAON,QAAU,CAAC,UAAY,iDAAiD,WAAa,kDAAkD,MAAQ","file":"component---src-pages-industry-insiders-js-e8c99936c2f4e2def430.js","sourcesContent":["import React, { useState, useRef, useEffect } from 'react'\r\nimport { DataGrid } from '@mui/x-data-grid'\r\nimport IconButton from '@mui/material/IconButton'\r\nimport ListAltIcon from '@mui/icons-material/ListAlt'\r\nimport Link from '@mui/material/Link'\r\nimport useFetch from 'use-http'\r\n\r\nimport ModalWindow from '../modalWindow'\r\nimport DefaultDataGridTable from '../defaultDataGridTable'\r\nimport { PercentField, ColorPercentField } from '../../common/dataGridUtil'\r\nimport { getUrl } from '../../common/utils'\r\n\r\nimport industryInsidersTableStyle from './industryInsidersTable.module.scss'\r\nimport '../muiTablePagination.css'\r\n\r\nconst IndustryInsidersTable = ({ loadingAnimeRef }) => {\r\n\r\n  const modalWindowRef = useRef({\r\n    popModalWindow: null,\r\n    popPureModal: null,\r\n  })\r\n\r\n  const tableColList = {\r\n    Change: { hide: false, text: 'Change' },\r\n    FloatShort: { hide: true, text: 'Float Short' },\r\n    Recom: { hide: true, text: 'Recom' },\r\n    PerfWeek: { hide: false, text: 'Perf Week' },\r\n    PerfMonth: { hide: false, text: 'Perf Month' },\r\n    PerfQuarter: { hide: false, text: 'Perf Quarter' },\r\n    PerfHalfY: { hide: false, text: 'Perf Half Y' },\r\n    PerfYear: { hide: false, text: 'Perf Year' },\r\n    PerfYTD: { hide: false, text: 'Perf YTD' },\r\n    TradeWeek: { hide: false, text: 'Trade Week' },\r\n    TradeMonth: { hide: false, text: 'Trade Month' },\r\n    TradeQuarter: { hide: false, text: 'Trade Quarter' },\r\n    TradeHalfY: { hide: false, text: 'Trade Half Y' },\r\n    TradeYear: { hide: false, text: 'Trade Year' },\r\n    TradeYTD: { hide: false, text: 'Trade YTD' },\r\n    DetailLink: { hide: false, text: 'Detail' },\r\n  }\r\n\r\n  const genTableColTemplate = () => {\r\n    return [\r\n      {\r\n        field: 'industry',\r\n        headerName: 'Industry',\r\n        width: 250,\r\n        renderCell: (params) => (\r\n          params.row['url'] === '-' ?\r\n            <span>{params.value}</span> :\r\n            <Link href={params.row['url']} target=\"_blank\" rel=\"noreferrer noopener\">\r\n              <span>{params.value}</span>\r\n            </Link>\r\n        ),\r\n        hide: 'industry' in hideColState ? hideColState['industry'] : false\r\n      },\r\n      ColorPercentField('change', tableColList['Change'].text, 130, 2, 'change' in hideColState ? hideColState['change'] : tableColList['Change'].hide, 500),\r\n      PercentField(\"floatShort\", tableColList['FloatShort'].text, 150, \"floatShort\" in hideColState ? hideColState[\"floatShort\"] : tableColList['FloatShort'].hide),\r\n      {\r\n        field: 'recom',\r\n        headerName: tableColList['Recom'].text,\r\n        width: 150,\r\n        type: 'number',\r\n        renderCell: (params) => (\r\n          <span style={{ fontWeight: 500, color: params.value < 2 ? 'green' : params.value > 3 ? 'red' : '' }}>{params.value}</span>\r\n        ),\r\n        hide: 'recom' in hideColState ? hideColState['recom'] : tableColList['Recom'].hide\r\n      },\r\n      ColorPercentField(\"perfWeek\", tableColList['PerfWeek'].text, 150, 2, \"perfWeek\" in hideColState ? hideColState[\"perfWeek\"] : tableColList['PerfWeek'].hide, 500),\r\n      ColorPercentField(\"perfMonth\", tableColList['PerfMonth'].text, 150, 2, \"perfMonth\" in hideColState ? hideColState[\"perfMonth\"] : tableColList['PerfMonth'].hide, 500),\r\n      ColorPercentField(\"perfQuarter\", tableColList['PerfQuarter'].text, 160, 2, \"perfQuarter\" in hideColState ? hideColState[\"perfQuarter\"] : tableColList['PerfQuarter'].hide, 500),\r\n      ColorPercentField(\"perfHalfY\", tableColList['PerfHalfY'].text, 150, 2, \"perfHalfY\" in hideColState ? hideColState[\"perfHalfY\"] : tableColList['PerfHalfY'].hide, 500),\r\n      ColorPercentField(\"perfYear\", tableColList['PerfYear'].text, 150, 2, \"perfYear\" in hideColState ? hideColState[\"perfYear\"] : tableColList['PerfYear'].hide, 500),\r\n      ColorPercentField(\"perfYTD\", tableColList['PerfYTD'].text, 150, 2, \"perfYTD\" in hideColState ? hideColState[\"perfYTD\"] : tableColList['PerfYTD'].hide, 500),\r\n      ColorPercentField(\"tradeWeek\", tableColList['TradeWeek'].text, 160, 3, \"tradeWeek\" in hideColState ? hideColState[\"tradeWeek\"] : tableColList['TradeWeek'].hide, 500),\r\n      ColorPercentField(\"tradeMonth\", tableColList['TradeMonth'].text, 160, 3, \"tradeMonth\" in  hideColState? hideColState[\"tradeMonth\"] : tableColList['TradeMonth'].hide, 500),\r\n      ColorPercentField(\"tradeQuarter\", tableColList['TradeQuarter'].text, 170, 2, \"tradeQuarter\" in hideColState ? hideColState[\"tradeQuarter\"] : tableColList['TradeQuarter'].hide, 500),\r\n      ColorPercentField(\"tradeHalfY\", tableColList['TradeHalfY'].text, 160, 2, \"tradeHalfY\" in hideColState ? hideColState[\"tradeHalfY\"] : tableColList['TradeHalfY'].hide, 500),\r\n      ColorPercentField(\"tradeYear\", tableColList['TradeYear'].text, 160, 2, \"tradeYear\" in hideColState ? hideColState[\"tradeYear\"] : tableColList['TradeYear'].hide, 500),\r\n      ColorPercentField(\"tradeYTD\", tableColList['TradeYTD'].text, 160, 2, \"tradeYTD\" in hideColState? hideColState[\"tradeYTD\"] : tableColList['TradeYTD'].hide, 500),\r\n      {\r\n        field: 'detailLink',\r\n        headerName: tableColList['DetailLink'].text,\r\n        width: 130,\r\n        renderCell: (params) => (\r\n          <a href={(new URL(getUrl())).protocol + \"//\" + (new URL(getUrl())).hostname + \":\" + (new URL(getUrl())).port + '/insiders-trade-list' + '?industry=' + params.row['industry'].match(/\\w+/gi).join('_')} target=\"_blank\" rel=\"noreferrer noopener\">\r\n            <IconButton\r\n              size=\"small\"\r\n              aria-haspopup=\"true\">\r\n              <ListAltIcon color=\"primary\" style={{ fontSize: 40 }} />\r\n            </IconButton>\r\n          </a>\r\n        ),\r\n        hide: 'detailLink' in  hideColState? hideColState['detailLink'] : tableColList['DetailLink'].hide\r\n      },\r\n    ]\r\n  }\r\n\r\n  const { get, response } = useFetch({ cachePolicy: 'no-cache' })\r\n\r\n  const getIndustryInsidersTable = async ()=>{\r\n    const resp_data = await get('/norn-data/insiders/stat.json')\r\n    if (response.ok) {\r\n      console.log(resp_data)\r\n      // let output = genRowData(resp_data['data'])\r\n      let output = resp_data['data'].map((value, index) => {\r\n        let o = {\r\n          id: index,\r\n          industry: value['Industry'],\r\n          url: value['Url'],\r\n          change: value['Change'],\r\n          floatShort: value['Float Short'],\r\n          perfWeek: value['Perf Week'] !== '-' ? value['Perf Week'] : -Number.MAX_VALUE,\r\n          perfMonth: value['Perf Month'] !== '-' ? value['Perf Month'] : -Number.MAX_VALUE,\r\n          perfQuarter: value['Perf Quart'] !== '-' ? value['Perf Quart'] : -Number.MAX_VALUE,\r\n          perfHalfY: value['Perf Half'] !== '-' ? value['Perf Half'] : -Number.MAX_VALUE,\r\n          perfYear: value['Perf Year'] !== '-' ? value['Perf Year'] : -Number.MAX_VALUE,\r\n          perfYTD: value['Perf YTD'] !== '-' ? value['Perf YTD'] : -Number.MAX_VALUE,\r\n          recom: value['Recom'],\r\n          tradeWeek: value['Trade Week'] !== '-' ? value['Trade Week'] : -Number.MAX_VALUE,\r\n          tradeMonth: value['Trade Month'] !== '-' ? value['Trade Month'] : -Number.MAX_VALUE,\r\n          tradeQuarter: value['Trade Quart'] !== '-' ? value['Trade Quart'] : -Number.MAX_VALUE,\r\n          tradeHalfY: value['Trade Half'] !== '-' ? value['Trade Half'] : -Number.MAX_VALUE,\r\n          tradeYear: value['Trade Year'] !== '-' ? value['Trade Year'] : -Number.MAX_VALUE,\r\n          tradeYTD: value['Trade YTD'] !== '-' ? value['Trade YTD'] : -Number.MAX_VALUE,\r\n        }\r\n        return o\r\n      })  \r\n      setRowData(output)\r\n    }\r\n    else {\r\n      modalWindowRef.current.popModalWindow(<div>Load stat.json failed</div>)\r\n      setRowData([])\r\n    }\r\n    loadingAnimeRef.current.setLoading(false)\r\n  }\r\n\r\n  const [rowData, setRowData] = useState([])\r\n  const [hideColState, setHideColState] = useState({})\r\n\r\n  useEffect(() => {\r\n    // componentDidMount is here!\r\n    // componentDidUpdate is here!\r\n    getIndustryInsidersTable()\r\n    return () => {\r\n      // componentWillUnmount is here!\r\n    }\r\n  }, [])\r\n\r\n  return (\r\n    <>\r\n      <div className={industryInsidersTableStyle.container}>\r\n        <div className={industryInsidersTableStyle.table}>\r\n          <DataGrid rows={rowData} columns={genTableColTemplate()} components={{ NoRowsOverlay: DefaultDataGridTable, }} disableSelectionOnClick onColumnVisibilityChange={(param) => {\r\n            let tempHideColState = hideColState\r\n            tempHideColState[param['field']] = !param['isVisible']\r\n            setHideColState(tempHideColState)\r\n          }}/>\r\n        </div>\r\n      </div>\r\n      <ModalWindow modalWindowRef={modalWindowRef} />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default IndustryInsidersTable\r\n","import React, { useRef } from 'react'\r\nimport { StylesProvider } from '@mui/styles'\r\n\r\nimport Layout from '../components/layout'\r\nimport IndustryInsidersTable from '../components/industry-insiders/industryInsidersTable'\r\nimport LoadingAnime from '../components/loadingAnime'\r\nimport SEO from '../components/seo'\r\n\r\nconst IndustryInsidersPage = () => {\r\n\r\n    const loadingAnimeRef = useRef({\r\n        getLoading: null,\r\n        setLoading: null\r\n    })\r\n\r\n    return (\r\n        <StylesProvider injectFirst>\r\n            <SEO />\r\n            <Layout >\r\n                <IndustryInsidersTable loadingAnimeRef={loadingAnimeRef} />\r\n            </Layout>\r\n            <LoadingAnime loadingAnimeRef={loadingAnimeRef} />\r\n        </StylesProvider>\r\n    )\r\n}\r\n\r\nexport default IndustryInsidersPage\r\n","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = exports.default = (0, _createSvgIcon.default)(/*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M19 5v14H5V5zm1.1-2H3.9c-.5 0-.9.4-.9.9v16.2c0 .4.4.9.9.9h16.2c.4 0 .9-.5.9-.9V3.9c0-.5-.5-.9-.9-.9M11 7h6v2h-6zm0 4h6v2h-6zm0 4h6v2h-6zM7 7h2v2H7zm0 4h2v2H7zm0 4h2v2H7z\"\n}), 'ListAlt');","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"industryInsidersTable-module--container--3c_jG\",\"showColumn\":\"industryInsidersTable-module--showColumn--3Hbcs\",\"table\":\"industryInsidersTable-module--table--1TK9P\"};"],"sourceRoot":""}