{"version":3,"sources":["webpack:///./node_modules/@mui/x-data-grid/context/GridRootPropsContext.js","webpack:///./node_modules/@mui/x-data-grid/constants/gridClasses.js","webpack:///./node_modules/@mui/x-data-grid/node_modules/clsx/dist/clsx.m.js","webpack:///./node_modules/@mui/x-data-grid/hooks/utils/useGridRootProps.js","webpack:///./src/common/dataGridUtil.js","webpack:///./node_modules/@mui/x-data-grid/components/containers/GridRootStyles.js","webpack:///./node_modules/reselect/es/defaultMemoize.js","webpack:///./node_modules/reselect/es/index.js","webpack:///./node_modules/@mui/x-data-grid/utils/warning.js","webpack:///./node_modules/@mui/x-data-grid/utils/createSelector.js","webpack:///./node_modules/@mui/x-data-grid/hooks/features/columns/gridColumnsSelector.js","webpack:///./node_modules/@mui/x-data-grid/hooks/utils/useGridSelector.js","webpack:///./node_modules/@mui/x-data-grid/components/GridApiContext.js","webpack:///./node_modules/@mui/x-data-grid/hooks/utils/useGridApiContext.js","webpack:///./node_modules/@mui/x-data-grid/hooks/features/density/densitySelector.js","webpack:///./node_modules/@mui/x-data-grid/hooks/features/rows/gridRowsSelector.js","webpack:///./node_modules/@mui/x-data-grid/components/containers/GridRoot.js","webpack:///./node_modules/@mui/x-data-grid/hooks/utils/useGridLogger.js","webpack:///./node_modules/@mui/x-data-grid/components/containers/GridMainContainer.js","webpack:///./node_modules/@mui/x-data-grid/components/ErrorBoundary.js","webpack:///./node_modules/@mui/x-data-grid/components/base/GridErrorHandler.js","webpack:///./node_modules/@mui/x-data-grid/components/base/GridHeaderPlaceholder.js","webpack:///./node_modules/@mui/x-data-grid/lib/createDetectElementResize/index.js","webpack:///./node_modules/@mui/x-data-grid/components/GridAutoSizer.js","webpack:///./node_modules/@mui/x-data-grid/hooks/features/sorting/gridSortingSelector.js","webpack:///./node_modules/@mui/x-data-grid/hooks/features/filter/gridFilterSelector.js","webpack:///./node_modules/@mui/x-data-grid/components/base/GridOverlays.js","webpack:///./node_modules/@mui/x-data-grid/components/base/GridBody.js","webpack:///./node_modules/@mui/x-data-grid/components/base/GridFooterPlaceholder.js","webpack:///./node_modules/@mui/x-data-grid/context/GridContextProvider.js","webpack:///./node_modules/@mui/x-data-grid/utils/utils.js","webpack:///./node_modules/@mui/x-data-grid/hooks/core/useGridLoggerFactory.js","webpack:///./node_modules/@mui/x-data-grid/hooks/utils/useGridApiMethod.js","webpack:///./node_modules/@mui/x-data-grid/utils/cleanupTracking/TimerBasedCleanupTracking.js","webpack:///./node_modules/@mui/x-data-grid/utils/cleanupTracking/FinalizationRegistryBasedCleanupTracking.js","webpack:///./node_modules/@mui/x-data-grid/hooks/utils/useGridApiEventHandler.js","webpack:///./node_modules/@mui/x-data-grid/utils/EventManager.js","webpack:///./node_modules/@mui/x-data-grid/hooks/core/useGridApiInitialization.js","webpack:///./node_modules/@mui/x-data-grid/hooks/core/pipeProcessing/useGridPipeProcessing.js","webpack:///./node_modules/@mui/x-data-grid/hooks/core/strategyProcessing/useGridStrategyProcessing.js","webpack:///./node_modules/@mui/x-data-grid/hooks/core/useGridStateInitialization.js","webpack:///./node_modules/@mui/x-data-grid/hooks/core/useGridInitialization.js","webpack:///./node_modules/@mui/x-data-grid/hooks/core/useGridErrorHandler.js","webpack:///./node_modules/@mui/x-data-grid/hooks/core/useGridLocaleText.js","webpack:///./node_modules/@mui/x-data-grid/hooks/utils/useGridInitializeState.js","webpack:///./node_modules/@mui/x-data-grid/hooks/features/clipboard/useGridClipboard.js","webpack:///./node_modules/@mui/x-data-grid/hooks/utils/useGridNativeEventListener.js","webpack:///./node_modules/@mui/x-data-grid/hooks/features/columnMenu/columnMenuSelector.js","webpack:///./node_modules/@mui/x-data-grid/hooks/features/columnMenu/useGridColumnMenu.js","webpack:///./node_modules/@mui/x-data-grid/hooks/utils/useFirstRender.js","webpack:///./node_modules/@mui/x-data-grid/hooks/core/pipeProcessing/useGridRegisterPipeProcessor.js","webpack:///./node_modules/@mui/x-data-grid/hooks/core/pipeProcessing/useGridRegisterPipeApplier.js","webpack:///./node_modules/@mui/x-data-grid/components/icons/index.js","webpack:///./node_modules/@mui/x-data-grid/components/panel/filterPanel/filterPanelUtils.js","webpack:///./node_modules/@mui/x-data-grid/components/panel/filterPanel/GridFilterInputValue.js","webpack:///./node_modules/@mui/x-data-grid/components/cell/GridEditInputCell.js","webpack:///./node_modules/@mui/x-data-grid/hooks/features/sorting/gridSortingUtils.js","webpack:///./node_modules/@mui/material/useAutocomplete/useAutocomplete.js","webpack:///./node_modules/@mui/material/ListSubheader/listSubheaderClasses.js","webpack:///./node_modules/@mui/material/ListSubheader/ListSubheader.js","webpack:///./node_modules/@mui/material/Autocomplete/autocompleteClasses.js","webpack:///./node_modules/@mui/material/Autocomplete/Autocomplete.js","webpack:///./node_modules/@mui/x-data-grid/components/panel/filterPanel/GridFilterInputMultipleValue.js","webpack:///./node_modules/@mui/x-data-grid/colDef/gridStringOperators.js","webpack:///./node_modules/@mui/x-data-grid/colDef/gridStringColDef.js","webpack:///./node_modules/@mui/x-data-grid/colDef/gridNumericOperators.js","webpack:///./node_modules/@mui/x-data-grid/colDef/gridNumericColDef.js","webpack:///./node_modules/@mui/x-data-grid/components/panel/filterPanel/GridFilterInputDate.js","webpack:///./node_modules/@mui/x-data-grid/colDef/gridDateOperators.js","webpack:///./node_modules/@mui/x-data-grid/components/cell/GridEditDateCell.js","webpack:///./node_modules/@mui/x-data-grid/colDef/gridDateColDef.js","webpack:///./node_modules/@mui/x-data-grid/components/cell/GridBooleanCell.js","webpack:///./node_modules/@mui/x-data-grid/components/cell/GridEditBooleanCell.js","webpack:///./node_modules/@mui/x-data-grid/components/panel/filterPanel/GridFilterInputBoolean.js","webpack:///./node_modules/@mui/x-data-grid/colDef/gridBooleanColDef.js","webpack:///./node_modules/@mui/x-data-grid/colDef/gridBooleanOperators.js","webpack:///./node_modules/@mui/x-data-grid/utils/keyboardUtils.js","webpack:///./node_modules/@mui/x-data-grid/models/gridEditRowModel.js","webpack:///./node_modules/@mui/x-data-grid/components/cell/GridEditSingleSelectCell.js","webpack:///./node_modules/@mui/x-data-grid/components/panel/filterPanel/GridFilterInputSingleSelect.js","webpack:///./node_modules/@mui/x-data-grid/components/panel/filterPanel/GridFilterInputMultipleSingleSelect.js","webpack:///./node_modules/@mui/x-data-grid/colDef/gridSingleSelectOperators.js","webpack:///./node_modules/@mui/x-data-grid/colDef/gridSingleSelectColDef.js","webpack:///./node_modules/@mui/material/ClickAwayListener/ClickAwayListener.js","webpack:///./node_modules/@mui/x-data-grid/components/menu/GridMenu.js","webpack:///./node_modules/@mui/x-data-grid/components/cell/GridActionsCell.js","webpack:///./node_modules/@mui/x-data-grid/colDef/gridActionsColDef.js","webpack:///./node_modules/@mui/x-data-grid/colDef/gridDefaultColumnTypes.js","webpack:///./node_modules/@mui/x-data-grid/hooks/features/columns/gridColumnsUtils.js","webpack:///./node_modules/@mui/x-data-grid/hooks/features/preferencesPanel/gridPreferencePanelsValue.js","webpack:///./node_modules/@mui/x-data-grid/hooks/features/columns/useGridColumns.js","webpack:///./node_modules/@mui/x-data-grid/models/gridDensity.js","webpack:///./node_modules/@mui/x-data-grid/models/gridColumnGrouping.js","webpack:///./node_modules/@mui/x-data-grid/hooks/features/columnGrouping/gridColumnGroupsSelector.js","webpack:///./node_modules/@mui/x-data-grid/hooks/features/columnGrouping/useGridColumnGrouping.js","webpack:///./node_modules/@mui/x-data-grid/hooks/features/density/useGridDensity.js","webpack:///./node_modules/@mui/x-data-grid/components/columnSelection/GridCellCheckboxRenderer.js","webpack:///./node_modules/@mui/x-data-grid/hooks/features/focus/gridFocusStateSelector.js","webpack:///./node_modules/@mui/x-data-grid/hooks/features/selection/gridSelectionSelector.js","webpack:///./node_modules/@mui/x-data-grid/hooks/features/pagination/gridPaginationSelector.js","webpack:///./node_modules/@mui/x-data-grid/components/columnSelection/GridHeaderCheckbox.js","webpack:///./node_modules/@mui/x-data-grid/colDef/gridCheckboxSelectionColDef.js","webpack:///./node_modules/@mui/x-data-grid/hooks/features/export/serializers/csvSerializer.js","webpack:///./node_modules/@mui/x-data-grid/hooks/features/export/utils.js","webpack:///./node_modules/@mui/x-data-grid/components/toolbar/GridToolbarExport.js","webpack:///./node_modules/@mui/x-data-grid/hooks/features/export/useGridCsvExport.js","webpack:///./node_modules/@mui/x-data-grid/utils/exportAs.js","webpack:///./node_modules/@mui/x-data-grid/hooks/features/rows/gridRowsMetaSelector.js","webpack:///./node_modules/@mui/x-data-grid/hooks/features/export/useGridPrintExport.js","webpack:///./node_modules/@mui/x-data-grid/models/gridFeatureMode.js","webpack:///./node_modules/@mui/x-data-grid/models/gridFilterItem.js","webpack:///./node_modules/@mui/x-data-grid/hooks/features/filter/gridFilterState.js","webpack:///./node_modules/@mui/x-data-grid/hooks/core/strategyProcessing/useGridRegisterStrategyProcessor.js","webpack:///./node_modules/@mui/x-data-grid/hooks/features/filter/gridFilterUtils.js","webpack:///./node_modules/@mui/x-data-grid/hooks/features/filter/useGridFilter.js","webpack:///./node_modules/@mui/x-data-grid/hooks/utils/useGridVisibleRows.js","webpack:///./node_modules/@mui/x-data-grid/hooks/features/focus/useGridFocus.js","webpack:///./node_modules/@mui/x-data-grid/hooks/features/keyboardNavigation/useGridKeyboardNavigation.js","webpack:///./node_modules/@mui/x-data-grid/constants/gridDetailPanelToggleField.js","webpack:///./node_modules/@mui/x-data-grid/hooks/features/rows/gridRowsUtils.js","webpack:///./node_modules/@mui/x-data-grid/hooks/features/pagination/useGridPageSize.js","webpack:///./node_modules/@mui/x-data-grid/hooks/features/pagination/useGridPage.js","webpack:///./node_modules/@mui/x-data-grid/hooks/features/pagination/useGridPagination.js","webpack:///./node_modules/@mui/x-data-grid/hooks/features/preferencesPanel/gridPreferencePanelSelector.js","webpack:///./node_modules/@mui/x-data-grid/hooks/features/preferencesPanel/useGridPreferencesPanel.js","webpack:///./node_modules/@mui/x-data-grid/hooks/features/editRows/gridEditRowsSelector.js","webpack:///./node_modules/@mui/x-data-grid/hooks/features/editRows/useGridCellEditing.old.js","webpack:///./node_modules/@mui/x-data-grid/hooks/features/editRows/useGridEditing.old.js","webpack:///./node_modules/@mui/x-data-grid/hooks/features/editRows/useGridRowEditing.old.js","webpack:///./node_modules/@mui/x-data-grid/models/params/gridEditCellParams.js","webpack:///./node_modules/@mui/x-data-grid/hooks/features/editRows/useGridCellEditing.new.js","webpack:///./node_modules/@mui/x-data-grid/models/params/gridRowParams.js","webpack:///./node_modules/@mui/x-data-grid/hooks/features/editRows/useGridRowEditing.new.js","webpack:///./node_modules/@mui/x-data-grid/hooks/features/editRows/useGridEditing.new.js","webpack:///./node_modules/@mui/x-data-grid/hooks/features/rows/useGridRows.js","webpack:///./node_modules/@mui/x-data-grid/hooks/features/rows/useGridRowsPreProcessors.js","webpack:///./node_modules/@mui/x-data-grid/utils/domUtils.js","webpack:///./node_modules/@mui/x-data-grid/hooks/features/rows/useGridParamsApi.js","webpack:///./node_modules/@mui/x-data-grid/hooks/features/selection/useGridSelection.js","webpack:///./node_modules/@mui/x-data-grid/hooks/features/selection/useGridSelectionPreProcessors.js","webpack:///./node_modules/@mui/x-data-grid/hooks/features/sorting/useGridSorting.js","webpack:///./node_modules/@mui/x-data-grid/hooks/features/scroll/useGridScroll.js","webpack:///./node_modules/@mui/x-data-grid/hooks/features/rows/useGridRowsMeta.js","webpack:///./node_modules/@mui/x-data-grid/DataGrid/useDataGridComponent.js","webpack:///./node_modules/@mui/x-data-grid/hooks/features/columnGrouping/useGridColumnGroupingPreProcessors.js","webpack:///./node_modules/@mui/x-data-grid/hooks/features/columns/useGridColumnSpanning.js","webpack:///./node_modules/@mui/x-data-grid/hooks/features/dimensions/useGridDimensions.js","webpack:///./node_modules/@mui/x-data-grid/hooks/features/events/useGridEvents.js","webpack:///./node_modules/@mui/x-data-grid/hooks/features/statePersistence/useGridStatePersistence.js","webpack:///./node_modules/@mui/x-data-grid/constants/localeTextConstants.js","webpack:///./node_modules/@mui/x-data-grid/components/cell/GridCell.js","webpack:///./node_modules/@mui/x-data-grid/components/cell/GridSkeletonCell.js","webpack:///./node_modules/@mui/x-data-grid/components/columnHeaders/GridIconButtonContainer.js","webpack:///./node_modules/@mui/x-data-grid/components/menu/columnMenu/GridColumnMenuContainer.js","webpack:///./node_modules/@mui/x-data-grid/components/menu/columnMenu/GridColumnsMenuItem.js","webpack:///./node_modules/@mui/x-data-grid/components/menu/columnMenu/GridFilterMenuItem.js","webpack:///./node_modules/@mui/x-data-grid/components/menu/columnMenu/HideGridColMenuItem.js","webpack:///./node_modules/@mui/x-data-grid/components/menu/columnMenu/SortGridMenuItems.js","webpack:///./node_modules/@mui/x-data-grid/components/menu/columnMenu/GridColumnMenu.js","webpack:///./node_modules/@mui/x-data-grid/components/GridRowCount.js","webpack:///./node_modules/@mui/x-data-grid/components/GridSelectedRowCount.js","webpack:///./node_modules/@mui/x-data-grid/components/containers/GridFooterContainer.js","webpack:///./node_modules/@mui/x-data-grid/components/GridFooter.js","webpack:///./node_modules/@mui/x-data-grid/components/GridHeader.js","webpack:///./node_modules/@mui/x-data-grid/components/panel/GridPreferencesPanel.js","webpack:///./node_modules/@mui/material/CircularProgress/circularProgressClasses.js","webpack:///./node_modules/@mui/material/CircularProgress/CircularProgress.js","webpack:///./node_modules/@mui/x-data-grid/components/GridLoadingOverlay.js","webpack:///./node_modules/@mui/x-data-grid/components/GridNoRowsOverlay.js","webpack:///./node_modules/@mui/x-data-grid/components/GridPagination.js","webpack:///./node_modules/@mui/x-data-grid/components/panel/GridPanelContent.js","webpack:///./node_modules/@mui/x-data-grid/components/panel/GridPanelFooter.js","webpack:///./node_modules/@mui/x-data-grid/components/panel/GridPanelWrapper.js","webpack:///./node_modules/@mui/x-data-grid/components/panel/filterPanel/GridFilterForm.js","webpack:///./node_modules/@mui/x-data-grid/components/panel/filterPanel/GridFilterPanel.js","webpack:///./node_modules/@mui/x-data-grid/components/panel/GridPanelHeader.js","webpack:///./node_modules/@mui/x-data-grid/constants/envConstants.js","webpack:///./node_modules/@mui/x-data-grid/components/panel/GridColumnsPanel.js","webpack:///./node_modules/@mui/x-data-grid/components/panel/GridPanel.js","webpack:///./node_modules/@mui/x-data-grid/components/GridRow.js","webpack:///./node_modules/@mui/x-data-grid/components/columnHeaders/GridColumnUnsortedIcon.js","webpack:///./node_modules/@mui/x-data-grid/components/ErrorOverlay.js","webpack:///./node_modules/@mui/x-data-grid/components/GridNoResultsOverlay.js","webpack:///./node_modules/@mui/x-data-grid/constants/defaultGridSlotsComponents.js","webpack:///./node_modules/@mui/x-data-grid/components/columnHeaders/GridColumnHeaderFilterIconButton.js","webpack:///./node_modules/@mui/x-data-grid/DataGrid/useDataGridProps.js","webpack:///./node_modules/@mui/x-data-grid/components/virtualization/GridVirtualScroller.js","webpack:///./node_modules/@mui/x-data-grid/components/virtualization/GridVirtualScrollerContent.js","webpack:///./node_modules/@mui/x-data-grid/components/virtualization/GridVirtualScrollerRenderZone.js","webpack:///./node_modules/@mui/x-data-grid/hooks/features/virtualization/useGridVirtualScroller.js","webpack:///./node_modules/@mui/x-data-grid/components/DataGridVirtualScroller.js","webpack:///./node_modules/@mui/x-data-grid/components/columnHeaders/GridColumnHeaderSortIcon.js","webpack:///./node_modules/@mui/x-data-grid/components/columnHeaders/ColumnHeaderMenuIcon.js","webpack:///./node_modules/@mui/x-data-grid/components/menu/columnMenu/GridColumnHeaderMenu.js","webpack:///./node_modules/@mui/x-data-grid/components/columnHeaders/GridColumnHeaderTitle.js","webpack:///./node_modules/@mui/x-data-grid/components/columnHeaders/GridColumnHeaderSeparator.js","webpack:///./node_modules/@mui/x-data-grid/components/columnHeaders/GridGenericColumnHeaderItem.js","webpack:///./node_modules/@mui/x-data-grid/components/columnHeaders/GridColumnHeaderItem.js","webpack:///./node_modules/@mui/x-data-grid/components/columnHeaders/GridColumnGroupHeader.js","webpack:///./node_modules/@mui/x-data-grid/hooks/features/columnHeaders/useGridColumnHeaders.js","webpack:///./node_modules/@mui/x-data-grid/components/GridScrollArea.js","webpack:///./node_modules/@mui/x-data-grid/components/columnHeaders/GridColumnHeaders.js","webpack:///./node_modules/@mui/x-data-grid/components/columnHeaders/GridColumnHeadersInner.js","webpack:///./node_modules/@mui/x-data-grid/components/DataGridColumnHeaders.js","webpack:///./node_modules/@mui/x-data-grid/DataGrid/DataGrid.js","webpack:///./node_modules/@mui/utils/esm/chainPropTypes/chainPropTypes.js","webpack:///./node_modules/@mui/icons-material/TravelExplore.js","webpack:///./node_modules/@mui/x-data-grid/components/containers/GridOverlay.js","webpack:///./src/components/defaultDataGridTable.js","webpack:///./node_modules/@mui/material/styles/useThemeProps.js"],"names":["GridRootPropsContext","undefined","getDataGridUtilityClass","slot","gridClasses","r","e","t","f","n","Array","isArray","length","arguments","useGridRootProps","contextValue","Error","YahooFinanceUrl","YahooFinanceEnUrl","PureFieldWithValueCheck","field","headerName","width","valueFixed","hide","description","toExponential","output","type","renderCell","params","value","Number","MAX_VALUE","React","createElement","toFixed","ColorPosGreenNegRedField","style","fontWeight","color","Math","sign","parseFloat","PercentField","KMBTField","convertKMBT","ColorPercentField","flag","SymbolNameField","source","SymbolNameWithDetailLinkField","detail_link","show_detail_link","align","Fragment","Link","href","FinvizUrl","target","rel","IconButton","onClick","window","open","replace","TravelExploreIcon","PriceField","row","NameWithLinkField","linkKey","ShortFloatLinkWithShowChartField","ShortSummaryRelLink","ColorNumberWithExtraInfoField","NoMaxWidthTooltip","arrow","title","fontSize","whiteSpace","lineHeight","textAlign","Typography","sx","cursor","GridRootStyles","styled","name","overridesResolver","props","styles","autoHeight","aggregationColumnHeader","aggregationColumnHeaderLabel","editBooleanCell","cell","cellContent","cellCheckbox","cellSkeleton","checkboxInput","columnHeader","columnHeaderCheckbox","columnHeaderDraggableContainer","columnHeaderTitleContainer","columnSeparator","filterIcon","iconSeparator","menuIcon","menuIconButton","menuOpen","menuList","rowReorderCellPlaceholder","rowReorderCell","sortIcon","withBorder","treeDataGroupingCell","treeDataGroupingCellToggle","detailPanelToggleCell","root","_ref","theme","borderColor","palette","mode","divider","flex","boxSizing","position","border","borderRadius","shape","text","primary","typography","body2","outline","height","display","flexDirection","borderBottomColor","WebkitTapHighlightColor","padding","main","outlineWidth","outlineOffset","justifyContent","alignItems","iconButtonContainer","visibility","opacity","transition","transitions","create","duration","shorter","minWidth","overflow","columnHeaderTitleContainerContent","borderBottom","marginRight","marginLeft","backgroundColor","action","hover","zIndex","left","right","touchAction","pointerEvents","breakInside","selectedOpacity","hoverOpacity","textOverflow","boxShadow","shadows","background","paper","booleanCell","secondary","disabled","actionsCell","gridGap","spacing","disabledOpacity","rowReorderCellContainer","borderRight","alignSelf","groupingCriteriaCell","groupingCriteriaCellToggle","defaultEqualityCheck","a","b","defaultMemoize","func","equalityCheckOrOptions","equals","entry","providedOptions","equalityCheck","_providedOptions$equa","_providedOptions$maxS","maxSize","resultEqualityCheck","comparator","prev","next","i","createCacheKeyComparator","cache","get","key","put","getEntries","clear","entries","cacheIndex","findIndex","splice","unshift","pop","createLruCache","memoized","apply","matchingEntry","find","clearCache","getDependencies","funcs","dependencies","every","dep","dependencyTypes","map","join","createSelectorCreator","memoize","_len","memoizeOptionsFromArgs","_key","createSelector","_len2","_key2","_lastResult","_recomputations","directlyPassedOptions","memoizeOptions","resultFunc","_directlyPassedOption","_directlyPassedOption2","finalMemoizeOptions","memoizedResultFunc","concat","selector","push","Object","assign","lastResult","recomputations","resetRecomputations","buildWarning","message","gravity","alreadyWarned","cleanMessage","console","error","warn","wrapWithWarningOnCall","method","cacheContainer","args","selectorArgs","stateOrApiRef","instanceId","isApiRef","current","cacheKey","state","newSelector","Map","set","acceptsApiRef","gridColumnsSelector","columns","gridColumnFieldsSelector","columnsState","all","gridColumnLookupSelector","lookup","gridColumnDefinitionsSelector","allFields","gridColumnVisibilityModelSelector","columnVisibilityModel","gridVisibleColumnDefinitionsSelector","filter","column","gridColumnPositionsSelector","visibleColumns","positions","currentPosition","computedWidth","gridColumnsTotalWidthSelector","colCount","gridFilterableColumnDefinitionsSelector","col","filterable","gridFilterableColumnLookupSelector","reduce","acc","gridColumnsMetaSelector","totalWidth","useGridSelector","apiRef","isOutputSelector","GridApiContext","useGridApiContext","gridDensitySelector","density","gridDensityValueSelector","gridDensityRowHeightSelector","rowHeight","gridDensityHeaderHeightSelector","headerHeight","gridDensityHeaderGroupingMaxDepthSelector","headerGroupingMaxDepth","gridDensityFactorSelector","factor","gridDensityTotalHeaderHeightSelector","gridRowsStateSelector","rows","gridRowCountSelector","totalRowCount","gridRowsLoadingSelector","loading","gridTopLevelRowCountSelector","totalTopLevelRowCount","gridRowsLookupSelector","idRowsLookup","gridRowsIdToIdLookupSelector","idToIdLookup","gridRowTreeSelector","tree","gridRowGroupingNameSelector","groupingName","gridRowTreeDepthSelector","treeDepth","gridRowIdsSelector","ids","gridAdditionalRowGroupsSelector","additionalRowGroups","gridPinnedRowsSelector","pinnedRows","gridPinnedRowsCountSelector","_pinnedRows$top","_pinnedRows$bottom","top","bottom","_excluded","ref","rootProps","children","className","other","densityValue","rootContainerRef","handleRef","useForkRef","pinnedRowsCount","ownerState","classes","slots","capitalize","composeClasses","useUtilityClasses","rootElementRef","mountedState","setMountedState","useEnhancedEffect","unstable_updateGridDimensionsRef","role","disableMultipleSelection","useGridLogger","logger","newLogger","getLogger","GridMainContainerRoot","flexGrow","GridMainContainer","hasError","errorInfo","this","api","logError","showError","_this$state","render","GridErrorHandler","errorState","errorProps","_rootProps$components","components","ErrorOverlay","componentsProps","errorOverlay","GridHeaderPlaceholder","headerRef","Header","header","createDetectElementResize","nonce","hostWindow","resetTriggers","element","triggers","__resizeTriggers__","expand","firstElementChild","contract","lastElementChild","expandChild","scrollLeft","scrollWidth","scrollTop","scrollHeight","offsetWidth","offsetHeight","scrollListener","indexOf","__resizeRAF__","cancelAnimationFrame","requestAnimationFrame","__resizeLast__","checkTriggers","__resizeListeners__","forEach","fn","call","animation","keyframeprefix","animationstartevent","domPrefixes","split","startEvents","elm","document","animationName","toLowerCase","animationKeyframes","animationStyle","addResizeListener","doc","ownerDocument","elementStyle","getComputedStyle","getElementById","css","container","constructor","head","getElementsByTagName","id","setAttribute","styleSheet","cssText","appendChild","createTextNode","createStyles","getRootNode","innerHTML","addEventListener","__animationListener__","removeResizeListener","removeEventListener","removeChild","GridAutoSizer","defaultHeight","defaultWidth","disableHeight","disableWidth","onResize","setState","rootRef","parentElement","handleResize","useEventCallback","computedStyle","ownerWindow","paddingLeft","parseInt","paddingRight","newHeight","paddingTop","paddingBottom","newWidth","_parentElement$curren","win","detectElementResize","outerStyle","childParams","gridSortingStateSelector","sorting","gridSortedRowIdsSelector","sortingState","sortedRows","gridSortedRowEntriesSelector","sortedIds","model","gridSortModelSelector","sortModel","gridSortColumnLookupSelector","res","sortItem","index","sortDirection","sort","sortIndex","gridFilterStateSelector","gridFilterModelSelector","filterState","filterModel","gridVisibleRowsLookupSelector","quickFilterValues","visibleRowsLookup","gridFilteredRowsLookupSelector","filteredRowsLookup","gridVisibleSortedRowEntriesSelector","filteredDescendantCountLookup","gridVisibleSortedRowIdsSelector","visibleSortedRowEntries","gridFilteredSortedRowEntriesSelector","gridFilteredSortedRowIdsSelector","filteredSortedRowEntries","gridVisibleSortedTopLevelRowEntriesSelector","visibleSortedRows","rowTree","rowTreeDepth","_rowTree$row$id","depth","gridVisibleRowCountSelector","gridVisibleTopLevelRowCountSelector","visibleSortedTopLevelRows","gridFilterActiveItemsSelector","columnLookup","_filterModel$items","items","item","_column$filterOperato","_item$value","columnField","filterOperators","filterOperator","operator","operatorValue","InputComponent","toString","gridFilterActiveItemsLookupSelector","activeFilters","filterItem","GridOverlayWrapper","_viewportInnerSize$he","_viewportInnerSize$wi","totalHeaderHeight","viewportInnerSize","setViewportInnerSize","_apiRef$current$getRo","_apiRef$current$getRo2","getRootDimensions","handleViewportSizeChange","_apiRef$current$getRo3","_apiRef$current$getRo4","subscribeEvent","GridOverlays","visibleRowCount","showNoResultsOverlay","overlay","_rootProps$components2","_rootProps$components3","NoRowsOverlay","noRowsOverlay","NoResultsOverlay","noResultsOverlay","LoadingOverlay","loadingOverlay","GridBody","VirtualScrollerComponent","ColumnHeadersComponent","isVirtualizationDisabled","setIsVirtualizationDisabled","disableVirtualization","enableVirtualization","unstable_disableVirtualization","unstable_enableVirtualization","columnHeadersRef","columnsContainerRef","windowRef","renderingZoneRef","columnHeadersContainerElementRef","columnHeadersElementRef","size","publishEvent","innerRef","marginTop","GridFooterPlaceholder","footerRef","hideFooter","Footer","footer","GridContextProvider","Provider","isFunction","escapeRegExp","clamp","min","max","isDeepEqual","entriesA","from","has","entryA","Set","ArrayBuffer","isView","RegExp","flags","valueOf","prototype","keys","hasOwnProperty","randomNumberBetween","seed","random","imul","deepClone","obj","structuredClone","JSON","parse","stringify","forceDebug","localStorage","setItem","removeItem","err","localStorageAvailable","getItem","noop","noopLogger","debug","info","LOG_LEVELS","getAppender","logLevel","appender","minLogLevelIdx","loggerObj","idx","useGridApiMethod","apiMethods","apiName","apiMethodsRef","apiMethodsNames","installMethods","methodName","TimerBasedCleanupTracking","timeout","timeouts","cleanupTimeout","object","unsubscribe","unregisterToken","setTimeout","delete","cleanupToken","clearTimeout","unregister","FinalizationRegistryBasedCleanupTracking","registry","FinalizationRegistry","register","GridSignature","ObjectToBeRetainedByReact","registryContainer","cleanupTokensCounter","eventName","handler","options","objectRetainedByReact","subscription","handlerRef","cleanupTokenRef","enhancedHandler","event","details","_handlerRef$current","defaultMuiPrevented","_subscription$current","_handlerRef$current2","_subscription$current2","createUseGridApiEventHandler","optionsSubscriberOptions","isFirst","useGridApiOptionHandler","EventManager","maxListeners","warnOnce","events","listener","collection","highPriority","regular","highPriorityListeners","regularListeners","that","on","oneTimeListener","removeListener","isSyntheticEvent","isPropagationStopped","globalId","useGridApiInitialization","inputApiRef","unstable_eventManager","unstable_caches","signature","DataGridPro","emit","GRID_STRATEGIES_PROCESSORS","rowTreeCreation","filtering","useGridInitialization","useGridLoggerFactory","handleError","useGridErrorHandler","controlStateMapRef","rawForceUpdate","registerControlState","controlStateItem","stateId","others","reason","newState","ignoreSetState","updatedControlStateIds","controlState","oldSubState","stateSelector","newSubState","hasPropChanged","propModel","el","propOnChange","changeEvent","updateControlState","previousState","forceUpdate","unstable_updateControlState","unstable_registerControlState","useGridStateInitialization","processorsCache","runAppliers","groupCache","values","appliers","callback","unstable_registerPipeProcessor","group","processor","processors","unstable_registerPipeApplier","applier","_appliers","otherAppliers","unstable_requestPipeProcessorsApplication","unstable_applyPipeProcessors","context","preProcessors","preProcessor","useGridPipeProcessing","availableStrategies","strategiesCache","registerStrategyProcessor","strategyName","processorName","cleanup","otherProcessors","groupPreProcessors","previousProcessor","unstable_getActiveStrategy","applyStrategyProcessor","activeStrategy","getActiveStrategy","strategyGroup","_availableStrategyEnt","availableStrategyEntry","_ref2","strategy","isAvailable","setStrategyAvailability","unstable_registerStrategyProcessor","unstable_applyStrategyProcessor","unstable_setStrategyAvailability","useGridStrategyProcessing","getLocaleText","localeText","useGridLocaleText","useGridInitializeState","initializer","isInitialized","writeToClipboardPolyfill","data","span","userSelect","textContent","body","range","createRange","selectNode","selection","getSelection","removeAllRanges","addRange","execCommand","useGridClipboard","copySelectedRowsToClipboard","includeHeaders","getSelectedRows","getDataAsCsv","delimiter","navigator","clipboard","writeText","catch","handleKeydown","isModifierKeyPressed","ctrlKey","metaKey","altKey","_window$getSelection","String","fromCharCode","keyCode","selectionEnd","selectionStart","unstable_copySelectedRowsToClipboard","added","setAdded","wrapHandler","targetElement","boundElem","useGridNativeEventListener","gridColumnMenuSelector","columnMenu","columnMenuStateInitializer","useFirstRender","isFirstRender","useGridRegisterPipeProcessor","round","registerPreProcessor","useGridRegisterPipeApplier","GridArrowUpwardIcon","createSvgIcon","d","GridArrowDownwardIcon","GridKeyboardArrowRight","GridExpandMoreIcon","GridFilterListIcon","GridFilterAltIcon","GridSearchIcon","GridColumnIcon","GridSeparatorIcon","GridViewHeadlineIcon","GridTableRowsIcon","GridViewStreamIcon","GridTripleDotsVerticalIcon","GridCloseIcon","GridAddIcon","GridRemoveIcon","GridLoadIcon","GridDragIcon","GridSaveAltIcon","GridCheckIcon","GridMoreVertIcon","getValueFromOption","option","getValueFromValueOptions","valueOptions","result","optionValue","renderSingleSelectOptions","OptionComponent","valueFormatter","isOptionTypeObject","formattedValue","content","label","SUBMIT_FILTER_STROKE_TIME","GridFilterInputValue","_baseSelectProps$nati","applyValue","focusElementRef","filterTimeout","filterValueState","setFilterValueState","applying","setIsApplying","useId","isSelectNative","baseSelect","native","singleSelectProps","select","SelectProps","getColumn","MenuItem","onFilterChange","columnValueOptions","_item$value2","itemValue","InputProps","endAdornment","BaseTextField","placeholder","onChange","variant","InputLabelProps","shrink","inputRef","baseTextField","GridEditInputCellRoot","InputBase","editInputCell","GridEditInputCell","_rootProps$experiment","_rootProps$experiment3","colDef","hasFocus","debounceMs","experimentalFeatures","newEditingApi","isProcessingProps","onValueChange","valueState","setValueState","handleChange","async","_rootProps$experiment2","newValue","parsedValue","valueParser","getCellParams","setEditCellValue","unstable_skipValueParser","meta","unstable_getEditCellMeta","changeReason","focus","fullWidth","sortModelDisableMultiColumnsSortingWarning","sanitizeSortModel","disableMultipleColumnsSorting","mergeStateWithSortModel","getNextGridSortDirection","sortingOrder","currentIdx","gridNillComparator","v1","v2","collator","Intl","Collator","gridNumberComparator","value1","value2","nillResult","gridDateComparator","stripDiacritics","string","normalize","createFilterOptions","config","ignoreAccents","ignoreCase","limit","matchFrom","trim","inputValue","getOptionLabel","input","filteredOptions","candidate","slice","array","comp","defaultFilterOptions","defaultIsActiveElementInListbox","listboxRef","_listboxRef$current$p","contains","activeElement","unstable_isActiveElementInListbox","unstable_classNamePrefix","autoComplete","autoHighlight","autoSelect","blurOnSelect","clearOnBlur","freeSolo","clearOnEscape","componentName","defaultValue","multiple","disableClearable","disableCloseOnSelect","disabledProp","disabledItemsFocusable","disableListWrap","filterOptions","filterSelectedOptions","getOptionDisabled","getOptionKey","getOptionLabelProp","_option$label","groupBy","handleHomeEndKeys","idProp","includeInputInList","inputValueProp","isOptionEqualToValue","onClose","onHighlightChange","onInputChange","onOpen","openProp","openOnFocus","readOnly","selectOnFocus","valueProp","optionLabel","ignoreFocus","firstFocus","anchorEl","setAnchorEl","focusedTag","setFocusedTag","defaultHighlighted","highlightedIndexRef","useControlled","controlled","default","setInputValueState","focused","setFocused","resetInputValue","newInputValue","setOpenState","inputPristine","setInputPristine","inputValueIsSelectedValue","popupOpen","some","previousProps","usePreviousProps","valueChange","listboxAvailable","focusTag","tagToFocus","querySelector","setHighlightedIndex","removeAttribute","classList","remove","listboxNode","getAttribute","add","clientHeight","scrollBottom","elementBottom","offsetTop","changeHighlightedIndex","_ref3","diff","direction","nextIndex","nextFocus","nextFocusDisabled","hasAttribute","validOptionIndex","maxIndex","newIndex","abs","getNextIndex","setSelectionRange","syncHighlightedIndex","previousHighlightedOptionIndex","val","previousHighlightedOption","getPreviousHighlightedOptionIndex","valueItem","currentOption","itemIndex","optionItem","handleListboxRef","node","setRef","handleOpen","handleClose","handleValue","isTouch","selectNewValue","reasonProp","origin","blur","handleFocusTag","nextTag","validTagIndex","handleClear","handleKeyDown","onKeyDown","which","preventDefault","stopPropagation","handleFocus","handleBlur","handleInputChange","handleOptionMouseMove","currentTarget","handleOptionTouchStart","handleOptionClick","handleTagDelete","handlePopupIndicator","handleMouseDown","handleClick","handleInputMouseDown","dirty","groupedOptions","getRootProps","onMouseDown","getInputLabelProps","htmlFor","getInputProps","onBlur","onFocus","autoCapitalize","spellCheck","getClearProps","tabIndex","getPopupIndicatorProps","getTagProps","_ref4","onDelete","getListboxProps","getOptionProps","_ref5","_getOptionKey","selected","onMouseMove","onTouchStart","expanded","getListSubheaderUtilityClass","generateUtilityClass","generateUtilityClasses","ListSubheaderRoot","disableGutters","gutters","inset","disableSticky","sticky","listStyle","vars","fontFamily","fontWeightMedium","pxToRem","inProps","component","as","clsx","muiSkipListHighlight","getAutocompleteUtilityClass","_ClearIcon","_ArrowDropDownIcon","_excluded2","_excluded3","_excluded4","AutocompleteRoot","hasClearIcon","hasPopupIcon","inputFocused","tag","inputRoot","clearIndicator","margin","maxWidth","inputClasses","inputBaseClasses","sizeSmall","outlinedInputClasses","filledInputClasses","hiddenLabel","variants","flexWrap","AutocompleteEndAdornment","transform","AutocompleteClearIndicator","AutocompletePopupIndicator","popupIndicator","popupIndicatorOpen","AutocompletePopper","Popper","popper","disablePortal","popperDisablePortal","modal","AutocompletePaper","Paper","body1","AutocompleteLoading","AutocompleteNoOptions","noOptions","AutocompleteListbox","listbox","_ref6","maxHeight","minHeight","breakpoints","up","focusVisible","mainChannel","focusOpacity","AutocompleteGroupLabel","groupLabel","_ref7","AutocompleteGroupUl","groupUl","_slotProps$clearIndic","_slotProps$paper","_slotProps$popper","_slotProps$popupIndic","ChipProps","clearIcon","clearText","closeText","forcePopupIcon","getLimitTagsText","more","limitTags","ListboxComponent","ListboxProps","loadingText","noOptionsText","openText","PaperComponent","PopperComponent","popupIcon","ArrowDropDown","renderGroup","renderGroupProp","renderInput","renderOption","renderOptionProp","renderTags","slotProps","externalListboxRef","_getListboxProps","otherListboxProps","combinedListboxRef","startAdornment","getCustomizedTagProps","_getCustomizedTagProp","customTagProps","Chip","props2","otherProps","renderListOption","optionProps","clearIndicatorSlotProps","paperSlotProps","popperSlotProps","popupIndicatorSlotProps","renderAutocompletePopperChildren","clientWidth","autocompletePopper","option2","index2","inputProps","GridFilterInputMultipleValue","helperText","TextFieldProps","GRID_STRING_COL_DEF","Infinity","hideable","sortable","resizable","groupable","pinnable","aggregable","editable","sortComparator","compare","disableTrim","getApplyFilterFn","filterItemValue","filterRegex","test","sensitivity","usage","requiresFilterValue","_ref8","filterValue","getGridStringOperators","renderEditCell","getApplyQuickFilterFn","columnValue","parseNumericValue","getGridNumericOperators","isNaN","InputComponentProps","_ref9","_ref10","includes","GRID_NUMERIC_COL_DEF","headerAlign","isNumber","toLocaleString","GridFilterInputDate","dateRegex","dateTimeRegex","buildApplyFilterFn","compareFn","showTime","keepHours","year","month","day","hour","minute","match","time","Date","getTime","valueAsDate","timeToCompare","setHours","getHours","getMinutes","getGridDateOperators","StyledInputBase","GridEditDateCell","isDateTime","valueTransformed","parsedDate","formattedDate","getTimezoneOffset","toISOString","substr","parsed","formatted","newFormattedDate","newParsedDate","date","setFullYear","hours","minutes","_valueTransformed$par","_state$parsed","renderEditDateCell","GRID_DATE_COL_DEF","toLocaleDateString","GRID_DATETIME_COL_DEF","GridBooleanCellRaw","Icon","BooleanCellTrueIcon","BooleanCellFalseIcon","titleAccess","Boolean","GridBooleanCell","GridEditBooleanCell","checked","BaseCheckbox","baseCheckbox","GridFilterInputBoolean","displayEmpty","GRID_BOOLEAN_COL_DEF","rowNode","isAutoGenerated","valueAsBoolean","isEscapeKey","isEnterKey","isTabKey","isSpaceKey","isDeleteKeys","isPrintableKey","GRID_CELL_EXIT_EDIT_MODE_KEYS","GRID_CELL_EDIT_COMMIT_KEYS","isCellEditCommitKeys","isNavigationKey","isHomeOrEndKeys","isArrowKeys","isPageKeys","isKeyboardEvent","isHideMenuKey","GridEditModes","GridCellModes","GridRowModes","GridEditSingleSelectCell","initialOpen","editMode","Cell","setOpen","valueOptionsFormatted","BaseSelect","formattedTargetValue","isValid","Row","Promise","resolve","commitCellChange","setCellMode","MenuProps","stopCellEditMode","ignoreModifications","GridFilterInputSingleSelect","currentColumn","currentValueOptions","_itemValue","GridFilterInputMultipleSingleSelect","resolvedColumn","resolvedValueOptions","resolvedFormattedValueOptions","filterValueOptionFormatter","filterValues","formattedElement","formatedOption","parseObjectValue","GRID_SINGLE_SELECT_COL_DEF","filterItemValues","potentialValues","iterableColumnValues","mapEventPropToEvent","eventProp","substring","ClickAwayListener","disableReactTree","mouseEvent","onClickAway","touchEvent","movedRef","nodeRef","activatedRef","syntheticEventRef","handleClickAway","insideReactTree","documentElement","clientX","clientY","clickedRootScrollbar","insideDOM","composedPath","createHandleSynthetic","handlerName","childrenPropsHandler","childrenProps","mappedTouchEvent","handleTouchMove","mappedMouseEvent","GridMenuRoot","menu","transformOrigin","GridMenu","onExited","prevTarget","prevOpen","BasePopper","placement","basePopper","TransitionProps","Grow","popperOnExited","GridActionsCell","focusedButtonIndex","setFocusedButtonIndex","buttonRef","ignoreCallToFocus","touchRippleRefs","menuId","buttonId","stop","preventScroll","getActions","hasActions","getRowParams","iconButtons","showInMenu","menuButtons","numberOfButtons","hideMenu","handleTouchRippleRef","instance","handleButtonClick","button","touchRippleRef","MoreActionsIcon","MenuList","autoFocusItem","GRID_ACTIONS_COL_DEF","disableColumnMenu","disableExport","getGridDefaultColumnTypes","number","dateTime","boolean","singleSelect","COLUMNS_DIMENSION_PROPERTIES","computeColumnTypes","customColumnTypes","mergedColumnTypes","colType","colTypeDef","extendType","hydrateColumnsWidth","rawState","viewportInnerWidth","columnsLookup","totalFlexUnits","widthAllocatedBeforeFlex","flexColumns","newColumn","initialFreeSpace","computedColumnWidths","flexColumnsLookup","frozenFields","freeze","frozen","loopOverFlexItems","violationsLookup","remainingFreeSpace","flexUnits","totalViolation","computeFlexColumnsWidth","createColumnsState","columnsToUpsert","initialState","columnTypes","currentColumnVisibilityModel","shouldRegenColumnVisibilityModelFromColumns","keepOnlyColumnsToUpsert","_apiRef$current","isInsideStateInitializer","columnsStateWithoutColumnVisibilityModel","currentState","columnsToKeep","columnsToUpsertLookup","existingState","getGridColDef","hasBeenResized","columnsLookupBeforePreProcessing","columnsStateWithPreProcessing","hasModelChanged","newColumnVisibilityModel","isVisibleBefore","isVisibleAfter","columnsStateWithPortableColumns","orderedFields","dimensions","columnsWithUpdatedDimensions","orderedFieldsLookup","cleanOrderedFields","newOrderedFields","newColumnLookup","newColDef","applyInitialState","mergeColumnsState","getFirstNonSpannedColumnToRender","firstColumnToRender","firstRowToRender","lastRowToRender","visibleRows","firstNonSpannedColumnToRender","rowId","cellColSpanInfo","unstable_getCellColSpanInfo","spannedByColSpan","leftVisibleCellIndex","getFirstColumnIndexToRender","firstColumnIndex","minColumnIndex","columnBuffer","GridPreferencePanelsValue","columnsStateInitializer","_props$initialState","_props$initialState$c","_props$initialState2","_props$columnVisibili","_props$initialState3","_props$initialState3$","isUsingColumnVisibilityModel","columnsTypes","GridDensityTypes","isLeaf","gridColumnGroupsLookupSelector","columnGrouping","recurrentUnwrapGroupingColumnModel","columnGroupNode","parents","unwrappedGroupingModelToComplet","groupId","child","unwrapGroupingColumnModel","columnGroupingModel","unwrappedSubTree","createGroupLookup","groupLookup","groupParam","subTreeLookup","columnGroupsStateInitializer","_props$columnGrouping","groupCollapsedModel","getUpdatedDensityState","newDensity","newHeaderHeight","newRowHeight","newMaxDepth","Compact","floor","Comfortable","densityStateInitializer","maxDepth","unwrappedGroupingColumnModel","_unwrappedGroupingCol","_unwrappedGroupingCol2","isChecked","checkboxElement","rippleRef","getCellElement","_checkboxElement$curr","shiftKey","isSelectable","isRowSelectable","isPinned","gridFocusStateSelector","gridFocusCellSelector","focusState","gridFocusColumnHeaderSelector","gridTabIndexStateSelector","gridTabIndexCellSelector","gridTabIndexColumnHeaderSelector","gridSelectionStateSelector","selectedGridRowsCountSelector","selectedGridRowsSelector","selectedRows","rowsLookup","selectedIdsLookupSelector","gridPaginationSelector","pagination","gridPageSelector","page","gridPageSizeSelector","pageSize","gridPaginationRowRangeSelector","pageCount","visibleSortedTopLevelRowEntries","visibleTopLevelRowCount","topLevelFirstRowIndex","topLevelLastRowIndex","firstRowIndex","lastRowIndex","topLevelFirstRow","topLevelRowsInCurrentPageCount","topLevelRowAdded","gridPaginatedVisibleSortedGridRowEntriesSelector","paginationRange","gridPaginatedVisibleSortedGridRowIdsSelector","visibleSortedRowIds","tabIndexState","visibleRowIds","paginatedVisibleRowIds","filteredSelection","getRow","selectionCandidates","checkboxSelectionVisibleOnly","currentSelectionSize","isIndeterminate","getColumnHeaderElement","handleSelectionChange","p","indeterminate","GRID_CHECKBOX_SELECTION_COL_DEF","disableReorder","valueGetter","renderHeader","serializeCellValue","delimiterCharacter","buildCSV","rowIds","CSVBody","cellParams","serializeRow","getColumnsToExport","fields","allColumns","defaultGetRowsToExport","filteredSortedRowIds","bodyRows","_rowTree$id$position","topPinnedRowsIds","bottomPinnedRowsIds","GridCsvExportMenuItem","exportDataAsCsv","GridPrintExportMenuItem","exportDataAsPrint","useGridCsvExport","_options$getRowsToExp","_options$includeHeade","exportedColumns","getRowsToExport","exportedRowIds","csv","blob","extension","filename","fullName","HTMLAnchorElement","url","URL","createObjectURL","download","click","revokeObjectURL","exportAs","Blob","utf8WithBom","Uint8Array","fileName","addExportMenuButtons","initialValue","_options$csvOptions","csvOptions","disableToolbarButton","gridRowsMetaSelector","rowsMeta","useGridPrintExport","previousGridState","previousColumnVisibility","updateGridColumnsForPrint","exportedColumnFields","setColumnVisibilityModel","buildPrintWindow","iframeEl","handlePrintWindowLoad","printWindow","_querySelector","_querySelector2","normalizeOptions","copyStyles","hideToolbar","printDoc","contentDocument","gridRootElement","gridClone","cloneNode","gridCloneViewport","virtualScroller","chromeVersion","raw","userAgent","getChromeVersion","contain","columnHeaders","columnHeadersInner","gridToolbarElementHeight","toolbarContainer","gridFooterElementHeight","footerContainer","_gridClone$querySelec","_gridClone$querySelec2","currentPageTotalHeight","defaultPageStyle","pageStyle","styleElement","bodyClassName","headStyleElements","querySelectorAll","tagName","newHeadStyleElements","sheet","styleCSS","j","cssRules","attributes","attr","nodeName","nodeValue","contentWindow","print","handlePrintWindowAfterPrint","_previousGridState$cu","_previousGridState$cu2","restoreState","exportState","setPageSize","onload","matchMedia","mql","matches","_options$printOptions","printOptions","GridFeatureModeConstant","GridLinkOperator","getDefaultGridFilterModel","linkOperator","And","quickFilterLogicOperator","useGridRegisterStrategyProcessor","cleanFilterItem","cleanItem","filterModelDisableMultiColumnsFilteringWarning","filterModelMissingItemIdWarning","filterModelMissingItemOperatorWarning","sanitizeFilterModel","disableMultipleColumnsFiltering","hasSeveralItems","hasItemsWithoutIds","hasItemWithoutOperator","mergeStateWithFilterModel","filteringState","getFilterCallbackFromItem","_filterItem$value","parser","x","newFilterItem","applyFilterOnRow","buildAggregatedFilterApplier","isRowMatchingFilterItems","shouldApplyFilter","resultPerItemId","buildAggregatedFilterItemsApplier","isRowMatchingQuickFilter","columnsFields","appliersPerColumnField","sanitizedQuickFilterValues","usedCellParams","columnsFieldsToFilter","quickFilterValueResult","isPassing","_appliersPerColumnFie","_appliersPerColumnFie2","buildAggregatedQuickFilterApplier","passingFilterItems","passingQuickFilterValues","passFilterLogic","allFilterItemResults","allQuickFilterResults","_filterModel$quickFil","_filterModel$linkOper","cleanedFilterItems","cleanedAllFilterItemResults","cleanedAllQuickFilterResults","filterItemPredicate","filterItemResult","quickFilterValuePredicate","filterStateInitializer","_props$filterModel","_props$initialState$f","getVisibleRows","paginationMode","useGridVisibleRows","response","focusStateInitializer","useGridKeyboardNavigation","initialCurrentPageRows","currentPageRows","enrichPageRowsWithPinnedRows","goToCell","colIndex","closestColumnToUse","nextCellColSpanInfo","rightVisibleCellIndex","rowIndexRelativeToAllRows","scrollToIndexes","rowIndex","getVisibleColumns","setCellFocus","goToHeader","setColumnHeaderFocus","getRowIdFromIndex","handleCellNavigationKeyDown","viewportPageSize","unstable_getViewportPageSize","colIndexBefore","getColumnIndex","rowIndexBefore","lastRowIndexInPage","lastColIndex","shouldPreventDefault","nextRowIndex","handleColumnHeaderKeyDown","headerTitleNode","toggleColumnMenu","handleCellKeyDown","cellMode","Edit","getRowIdFromRowModel","rowModel","getRowId","detailErrorMessage","checkGridRowIdIsValid","createRowsInternalCache","rowCount","rowsBeforePartialUpdates","loadingPropBeforePartialUpdates","rowCountPropBeforePartialUpdates","getRowsStateFromCache","previousTree","rowCountProp","loadingProp","_apiRef$current$unsta","cacheForGrouping","groupingResponse","processedGroupingResponse","dataTopLevelRowCount","parent","groupingResponseBeforeRowHydration","getTreeNodeDescendants","parentId","skipAutoGeneratedRows","_tree$parentId","validDescendants","childNode","calculatePinnedRowsHeight","unstable_getRowHeight","defaultPageSize","autoPageSize","mergeStateWithPageSize","getPageCount","ceil","applyValidPage","paginationState","mergeStateWithPage","paginationStateInitializer","_props$initialState$p","_props$page","_props$initialState2$","_props$rowCount","_props$rowCount2","useGridPagination","onPageSizeChange","stateExportPreProcessing","prevState","pageSizeToExport","exportOnlyDirtyModels","stateRestorePreProcessing","_context$stateToResto","stateToRestore","handleUpdateAutoPageSize","pinnedRowsHeight","maximumPageSizeWithoutScrollBar","useGridPageSize","onPageChange","setPage","pageToExport","_context$stateToResto2","useGridPage","gridPreferencePanelStateSelector","preferencePanel","preferencePanelStateInitializer","gridEditRowsStateSelector","editRows","isPromise","promise","then","useCellEditing","_props$experimentalFe2","buildCallback","getCellMode","newEditRowsState","getCellValue","editRowsState","View","_props$experimentalFe","unstable_runPendingEditCellValueMutation","getEditRowsModel","editCellProps","preventCommitWhileValidating","cellProps","isValidating","commitParams","preProcessEditCellProps","newEditCellProps","unstable_setEditCellProps","setCellEditingEditCellValue","unstable_parseValue","newEditCellPropsProcessed","unstable_setCellEditingEditCellValue","isEditable","isEditMode","isCellEnterEditModeKeys","handleCellDoubleClick","commitPropsAndExit","handleCellFocusOut","handleColumnHeaderDragStart","handleCellEditStart","handleCellEditStop","handleCellEditCommit","rowUpdate","valueSetter","updateRows","handleEditCellPropsChange","onCellEditCommit","onCellEditStart","onCellEditStop","editingStateInitializer","_props$experimentalFe4","focusTimeout","nextFocusedCell","setRowMode","getRowMode","commitRowChange","editRowProps","hasFieldWithError","fieldsWithValidator","validatorErrors","errors","setRowEditingEditCellValue","editRow","unstable_setRowEditingEditCellValue","rowParams","_props$experimentalFe3","handleRowEditStart","handleRowEditStop","handleRowEditCommit","handleCellFocusIn","_nextFocusedCell$curr","onRowEditCommit","onRowEditStart","onRowEditStop","useGridRowEditing","debounceMap","editRowsModel","onEditRowsModelChange","isCellEditable","maybeDebounce","runPendingEditCellValueMutation","debouncedField","newParams","parseValue","setEditCellProps","editProps","setEditRowsModel","preventTextSelection","isMoreThanOneClick","detail","onEditCellPropsChange","GridCellEditStartReasons","GridCellEditStopReasons","missingOnProcessRowUpdateErrorWarning","GridRowEditStartReasons","GridRowEditStopReasons","cellModesModel","setCellModesModel","cellModesModelRef","prevCellModesModel","processRowUpdate","onProcessRowUpdateError","cellModesModelProp","onCellModesModelChange","runIfEditModeIsCell","throwIfNotEditable","throwIfNotInMode","cellDoubleClick","cellFocusOut","escapeKeyDown","enterKeyDown","shiftTabKeyDown","tabKeyDown","printableKeyDown","deleteKeyDown","startCellEditModeParams","startsWith","deleteValue","startCellEditMode","cellToFocusAfter","disableIgnoreModificationsIfProcessingProps","editingState","updateCellModesModel","newModel","isNewModelDifferentFromProp","updateFieldInCellModesModel","newProps","_newModel$id","otherFields","updateOrDeleteFieldState","newEditingState","updateStateToStartCellEditMode","updateStateToStopCellEditMode","finishCellEditMode","unstable_moveFocusToRelativeCell","unstable_getRowWithUpdatedValuesFromCellEditing","errorThrown","finalRowUpdate","_editingState$id","_editingState$id$fiel","skipValueParser","hasChanged","getRowWithUpdatedValuesFromCellEditing","copyOfPrevCellModes","_copyOfPrevCellModes$","_copyOfPrevCellModes$2","_idToIdLookup$id","prevMode","originalId","useGridCellEditing","rowModesModel","setRowModesModel","rowModesModelRef","prevRowModesModel","rowModesModelProp","onRowModesModelChange","runIfEditModeIsRow","rowFocusOut","columnFields","startRowEditModeParams","fieldToFocus","startRowEditMode","fieldProps","stopRowEditMode","updateRowModesModel","updateRowInRowModesModel","updateOrDeleteRowState","updateStateToStartRowEditMode","updateStateToStopRowEditMode","focusedField","finishRowEditMode","unstable_getRowWithUpdatedValuesFromRowEditing","promises","otherFieldsProps","processedProps","thisField","fieldColumn","_editingState$id2","getRowWithUpdatedValuesFromRowEditing","copyOfPrevRowModesModel","_copyOfPrevRowModesMo","isCellEditableProp","debounces","runCallback","setEditCellValueToCall","getRowWithUpdatedValues","getEditCellMeta","unstable_getRowWithUpdatedValues","rowsStateInitializer","flatRowTreeCreationMethod","groupingKey","groupingField","findParentElementFromClassName","elem","closest","escapeOperandAttributeSelector","operand","getGridRowElementSelector","useGridParamsApi","getColumnHeaderParams","getCellValueWithDeprecationWarning","getAllColumns","getValue","getBaseCellParams","getRowNode","cellFocus","cellTabIndex","getGridColumnHeaderElement","getRowElement","getGridRowElement","getGridCellElement","getSelectionModelPropValue","selectionModelProp","prevSelectionModel","selectionStateInitializer","_getSelectionModelPro","selectionModel","useGridSelectionPreProcessors","updateSelectionColumn","selectionColumn","cellClassName","headerClassName","shouldHaveSelectionColumn","checkboxSelection","haveSelectionColumn","sortingStateInitializer","_props$sortModel","_props$initialState$s","scrollIntoView","rowsMetaStateInitializer","useDataGridComponent","addHeaderGroups","unwrappedGroupingModel","_unwrappedGroupingMod","_unwrappedGroupingMod2","newGroupPath","lookupElement","groupPath","hasGroupPath","useGridColumnGroupingPreProcessors","useGridRowsPreProcessors","propSelectionModel","lastRowToggled","onSelectionModelChange","disableSelectionOnClick","propIsRowSelectable","canHaveMultipleSelection","expandMouseRowRangeSelection","_lastRowToggled$curre","endId","startId","isSelected","isRowSelected","startIndex","endIndex","selectRowRange","setSelectionModel","selectRow","resetSelection","newSelection","selectRows","selectableIds","selectionLookup","isSelectionValid","allPagesRowIds","start","end","rowsBetweenStartAndEnd","removeOutdatedSelection","keepNonExistentRowsSelected","currentSelection","handleSingleRowSelection","hasCtrlKey","isMultipleSelectionDisabled","handleRowClick","_closest","preventSelectionOnShift","handleRowSelectionCheckboxChange","nativeEvent","handleHeaderSelectionCheckboxChange","rowsToBeSelected","focusCell","isNextRowSelected","newRowIndex","getRowIndexRelativeToVisibleRows","previousRowIndex","getAllRowIds","isStateControlled","currentPageRowsLookup","firstSelectableRow","useGridSelection","_props$initialState5","_props$componentsProp2","previousColumnsProp","previousColumnTypesProp","onColumnVisibilityModelChange","setGridColumnsState","getColumnsMeta","useVisibleColumns","getColumnPosition","updateColumns","updateColumn","setColumnVisibility","isVisible","_columnVisibilityMode","setColumnIndex","targetIndexPosition","oldIndexPosition","updatedColumns","fieldRemoved","targetIndex","oldIndex","setColumnWidth","columnsStateToExport","_props$initialState$c2","_props$initialState4","_props$initialState4$","columnVisibilityModelToExport","colDefDimensions","propertyName","propertyValue","columnVisibilityModelToImport","preferencePanelPreProcessing","_props$componentsProp","ColumnsPanel","columnsPanel","prevInnerWidth","onColumnVisibilityChange","hydrateColumns","useGridColumns","currentPage","lastUpdateMs","now","throttledRowsChange","newCache","throttle","run","throttleRemainingTimeMs","throttleRowsMs","setRows","prevCache","updates","DataGrid","uniqueUpdates","update","deletedRowIds","partialRow","_action","getRowModels","allRows","getRowsCount","setRowChildrenExpansion","isExpanded","currentNode","newNode","childrenExpanded","_gridRowTreeSelector$","getRowGroupChildren","applySorting","applyFiltering","groupNode","sortedRowIds","childId","rowApi","setRowIndex","updatedRows","unstable_replaceRows","newRows","updatedIdRowsLookup","updatedIdToIdLookup","updatedTree","newRowEntries","newRowModel","replacedRowId","rowTreeNodeConfig","newRowsState","groupRows","handleStrategyProcessorChange","handleStrategyActivityChange","applyHydrateRowsProcessor","areNewRowsAlreadyInState","isNewLoadingAlreadyInState","isNewRowCountAlreadyInState","useGridRows","setCellColSpanInfo","columnIndex","sizes","getCellColSpanInfo","_lookup$current$rowId","calculateCellColSpan","minFirstColumnIndex","maxLastColumnIndex","columnsLength","colSpan","nextColumnIndex","calculateColSpan","minFirstColumn","maxLastColumn","unstable_calculateColSpan","handleColumnReorderChange","useGridColumnSpanning","getColumnGroupPath","_columnLookup$field$g","_columnLookup$field","getAllGroupDetails","unstable_getColumnGroupPath","unstable_getAllGroupDetails","_props$columnGrouping2","useGridColumnGrouping","lastClickedCell","publishCellFocusOut","focusedCell","moveFocusToRelativeCell","columnIndexToFocus","rowIndexToFocus","rowToFocus","colSpanInfo","columnToFocus","handleColumnHeaderFocus","handleCellMouseDown","handleDocumentClick","cellElement","handleCellModeChange","handleRowSet","useGridFocus","hideTimeout","immediateTimeout","hidePreferences","preferencePanelState","openedPanelValue","doNotHidePanel","hidePreferencesDelayed","showPreferences","preferencePanelToExport","useGridPreferencesPanel","onFilterModelChange","updateFilteredRows","isRowMatchingFilters","filterMode","filteringResult","applyFilters","upsertFilterItem","setFilterModel","upsertFilterItems","existingItems","deleteFilterItem","itemToDelete","showFilterPanel","targetColumnField","filterItemsWithValue","newFilterItems","filters","hideFilterPanel","setFilterLinkOperator","setQuickFilterValues","unstable_applyFilters","getVisibleRowModels","filterModelToExport","callbacks","FilterPanel","filterPanel","flatFilteringMethod","isRowPassing","handleColumnsChange","filterableColumnsLookup","useGridFilter","onSortModelChange","upsertSortModel","existingIdx","c","newSortModel","createSortItem","directionOverride","_col$sortingOrder2","existing","_col$sortingOrder","nextSort","sortingMode","sortRowList","comparatorList","getSortCellParams","parseSortItem","rowList","compareRows","row1","row2","sortCellParams1","sortCellParams2","buildAggregatedSortingApplier","setSortModel","sortColumn","allowMultipleSorting","getSortModel","getSortedRows","getSortedRowIds","getRowIndex","getRowIdFromRowIndex","sortModelToExport","flatSortingMethod","bodyRowIds","footerRowIds","handleColumnHeaderClick","latestColumns","useGridSorting","_column$groupPath$len","_column$groupPath","setDensity","currentDensityState","newDensityState","useGridDensity","getRowHeight","getRowHeightProp","getRowSpacing","getEstimatedRowHeight","rowsHeightLookup","lastMeasuredRowIndex","hasRowWithAutoHeight","rowHeightFromDensity","hydrateRowsMeta","densityFactor","calculateRowProcessedSizes","baseCenter","isResized","needsFirstMeasurement","baseRowHeight","existingBaseRowHeight","rowHeightFromUser","estimatedRowHeight","existingBaseSizes","initialHeights","_spacing$top","_spacing$bottom","indexRelativeToCurrentPage","isFirstVisible","isLastVisible","spacingTop","spacingBottom","processedSizes","maximumBaseSize","otherSizes","setRowHeight","debouncedHydrateRowsMeta","debounce","storeMeasuredRowHeight","needsHydration","rowHasAutoHeight","_rowsHeightLookup$cur2","getLastMeasuredRowIndex","setLastMeasuredRowIndex","resetRowHeights","unstable_getLastMeasuredRowIndex","unstable_setLastMeasuredRowIndex","unstable_rowHasAutoHeight","unstable_getRowInternalSizes","_rowsHeightLookup$cur","unstable_setRowHeight","unstable_storeRowHeightMeasurement","useGridRowsMeta","colRef","scrollCoordinates","columnPositions","cellWidth","_visibleSortedRows$pa","elementIndex","targetOffsetHeight","topPinnedRowsHeight","bottomPinnedRowsHeight","scroll","getScrollPosition","useGridScroll","showColumnMenu","hideColumnMenu","relatedTarget","columnMenuLostFocus","columnMenuItemLostFocus","useGridColumnMenu","errorShown","rootDimensionsRef","fullDimensionsRef","updateGridDimensionsRef","_apiRef$current$rootE","rootElement","columnsTotalWidth","scrollBarSize","viewportOuterSize","hasScrollX","hasScrollY","scrollbarSize","scrollDiv","scrollInformation","hasScrollXIfNoYScrollBar","hasScrollYIfNoXScrollBar","hasScroll","newFullDimensions","prevDimensions","resize","getViewportPageSize","renderContext","unstable_getRenderContext","debounceResize","isFirstSizing","isJSDOM","useGridDimensions","onColumnHeaderClick","onColumnHeaderDoubleClick","onColumnHeaderOver","onColumnHeaderOut","onColumnHeaderEnter","onColumnHeaderLeave","onColumnOrderChange","onCellClick","onCellDoubleClick","onCellKeyDown","onCellFocusOut","onPreferencePanelClose","onPreferencePanelOpen","onMenuOpen","onMenuClose","onRowDoubleClick","onRowClick","onError","onStateChange","useGridEvents","stateToExport","useGridStatePersistence","GRID_DEFAULT_LOCALE_TEXT","noRowsLabel","noResultsOverlayLabel","errorOverlayDefaultLabel","toolbarDensity","toolbarDensityLabel","toolbarDensityCompact","toolbarDensityStandard","toolbarDensityComfortable","toolbarColumns","toolbarColumnsLabel","toolbarFilters","toolbarFiltersLabel","toolbarFiltersTooltipHide","toolbarFiltersTooltipShow","toolbarFiltersTooltipActive","count","toolbarQuickFilterPlaceholder","toolbarQuickFilterLabel","toolbarQuickFilterDeleteIconLabel","toolbarExport","toolbarExportLabel","toolbarExportCSV","toolbarExportPrint","toolbarExportExcel","columnsPanelTextFieldLabel","columnsPanelTextFieldPlaceholder","columnsPanelDragIconLabel","columnsPanelShowAllButton","columnsPanelHideAllButton","filterPanelAddFilter","filterPanelDeleteIconLabel","filterPanelLinkOperator","filterPanelOperators","filterPanelOperatorAnd","filterPanelOperatorOr","filterPanelColumns","filterPanelInputLabel","filterPanelInputPlaceholder","filterOperatorContains","filterOperatorEquals","filterOperatorStartsWith","filterOperatorEndsWith","filterOperatorIs","filterOperatorNot","filterOperatorAfter","filterOperatorOnOrAfter","filterOperatorBefore","filterOperatorOnOrBefore","filterOperatorIsEmpty","filterOperatorIsNotEmpty","filterOperatorIsAnyOf","filterValueAny","filterValueTrue","filterValueFalse","columnMenuLabel","columnMenuShowColumns","columnMenuFilter","columnMenuHideColumn","columnMenuUnsort","columnMenuSortAsc","columnMenuSortDesc","columnHeaderFiltersTooltipActive","columnHeaderFiltersLabel","columnHeaderSortIconLabel","footerRowSelected","footerTotalRows","footerTotalVisibleRows","visibleCount","totalCount","checkboxSelectionHeaderName","checkboxSelectionSelectAllRows","checkboxSelectionUnselectAllRows","checkboxSelectionSelectRow","checkboxSelectionUnselectRow","booleanCellTrueLabel","booleanCellFalseLabel","actionsCellMore","pinToLeft","pinToRight","unpin","treeDataGroupingHeaderName","treeDataExpand","treeDataCollapse","groupingColumnHeaderName","groupColumn","unGroupColumn","detailPanelToggle","expandDetailPanel","collapseDetailPanel","MuiTablePagination","rowReorderingHeaderName","aggregationMenuItemHeader","aggregationFunctionLabelSum","aggregationFunctionLabelAvg","aggregationFunctionLabelMin","aggregationFunctionLabelMax","aggregationFunctionLabelSize","cachedSupportsPreventScroll","GridIconButtonContainerRoot","labelledby","handleListKeyDown","autoFocus","GridColumnsMenuItem","showColumns","disableColumnSelector","GridFilterMenuItem","showFilter","disableColumnFilter","HideGridColMenuItem","timeoutRef","toggleColumn","SortGridMenuItems","_column$sortingOrder","onSortMenuItemClick","defaultButtons","preProcessedButtons","GridRowCountRoot","GridSelectedRowCountRoot","selectedRowCount","rowSelectedText","GridFooterContainerRoot","borderTop","selectedRowCountElement","hideFooterSelectedRowCount","rowCountElement","hideFooterRowCount","paginationElement","hideFooterPagination","Pagination","PreferencesPanel","preferencesPanel","Toolbar","toolbar","_preferencePanelState","panelContent","Panel","panel","getCircularProgressUtilityClass","_t","_t2","_t3","_t4","_","circularRotateKeyframe","circularDashKeyframe","CircularProgressRoot","CircularProgressSVG","svg","CircularProgressCircle","circle","disableShrink","circleDisableShrink","stroke","strokeDasharray","strokeDashoffset","thickness","circleStyle","rootStyle","circumference","PI","viewBox","cx","cy","fill","strokeWidth","GridOverlay","GridPaginationRoot","TablePagination","tablePaginationClasses","selectLabel","_rootProps$rowsPerPag","lastPage","handlePageSizeChange","newPageSize","handlePageChange","rowsPerPageOptions","rowsPerPage","onRowsPerPageChange","GridPanelContentRoot","GridPanelContent","GridPanelFooterRoot","panelFooter","GridPanelFooter","GridPanelWrapperRoot","panelWrapper","isEnabled","disableEnforceFocus","TrapFocus","GridFilterFormRoot","filterForm","FilterFormDeleteIcon","FormControl","filterFormDeleteIcon","flexShrink","marginBottom","FilterFormLinkOperatorInput","filterFormLinkOperatorInput","FilterFormColumnInput","filterFormColumnInput","FilterFormOperatorInput","filterFormOperatorInput","FilterFormValueInput","filterFormValueInput","getLinkOperatorLocaleKey","Or","getColumnLabel","_rootProps$components4","_rootProps$components5","_currentColumn$filter2","hasMultipleFilters","deleteFilter","applyFilterChanges","multiFilterOperator","showMultiFilterOperators","disableMultiFilterOperator","applyMultiFilterOperatorChanges","linkOperators","columnsSort","deleteIconProps","linkOperatorInputProps","operatorInputProps","columnInputProps","valueInputProps","filterableColumns","columnSelectId","columnSelectLabelId","operatorSelectId","operatorSelectLabelId","deleteIcon","linkOperatorInput","columnInput","operatorInput","valueInput","valueRef","filterSelectorRef","hasLinkOperatorColumn","baseFormControlProps","baseFormControl","isBaseSelectNative","valueInputPropsOther","sortedFilterableColumns","currentOperator","_currentColumn$filter","changeColumn","newOperator","eraseItemValue","changeOperator","changeLinkOperator","_valueRef$current","BaseFormControl","FilterPanelDeleteIcon","InputLabel","labelId","lastFilterRef","filterFormProps","applyFilter","applyFilterLinkOperator","getDefaultItem","firstColumnWithOperator","_colDef$filterOperato","defaultItem","shouldCloseFilterPanel","BaseButton","startIcon","baseButton","GridPanelHeaderRoot","panelHeader","GridPanelHeader","GridColumnsPanelRoot","GridColumnsPanelRowRoot","columnsPanelRow","switchClasses","defaultSearchPredicate","searchValue","gridPanelClasses","GridPanelRoot","GridPaperRoot","GridPanel","_apiRef$current$colum","isPlaced","setIsPlaced","modifiers","enabled","phase","effect","elevation","EmptyCell","refProp","styleProp","renderedColumns","containerWidth","onDoubleClick","onMouseEnter","onMouseLeave","ariaRowIndex","editing","ResizeObserver","resizeObserver","borderBoxSize","blockSize","contentRect","observe","disconnect","publish","propHandler","nodeType","publishClick","getCell","classNames","disableDragEvents","disableColumnReorder","rowReordering","editCellState","_rootProps$classes","_rootProps$classes2","updatedRow","editCellStateRest","getCellClassName","showRightBorder","indexRelativeToAllColumns","numberOfBaseSizes","maximumSize","rowSpacingType","property","rowClassNames","getRowClassName","_currentPage$range","randomNumber","cells","isLastColumn","removeLastBorderRight","disableExtendRowFullWidth","showCellRightBorder","contentWidth","SkeletonCell","emptyCellWidth","eventHandlers","GridColumnUnsortedIcon","nextSortDirection","ColumnSortedAscendingIcon","ColumnSortedDescendingIcon","defaultLabel","DEFAULT_GRID_ICON_SLOTS_COMPONENTS","ColumnMenuIcon","OpenFilterButtonIcon","ColumnFilteredIcon","ColumnSelectorIcon","ColumnUnsortedIcon","ColumnResizeIcon","DensityCompactIcon","DensityStandardIcon","DensityComfortableIcon","ExportIcon","TreeDataCollapseIcon","TreeDataExpandIcon","GroupingCriteriaCollapseIcon","GroupingCriteriaExpandIcon","DetailPanelExpandIcon","DetailPanelCollapseIcon","RowReorderIcon","QuickFilterIcon","QuickFilterClearIcon","DATA_GRID_DEFAULT_SLOTS_COMPONENTS","BaseSwitch","BaseTooltip","onMouseUp","onDragEnter","onDragOver","valueToRender","cellRef","publishMouseUp","publishMouseDown","focusableElement","elementToFocus","scrollPosition","managesOwnFocus","draggableEventHandlers","valueString","renderChildren","Skeleton","ColumnHeaderFilterIconButton","counter","icon","toggleFilter","iconButton","enterDelay","baseTooltip","Badge","badgeContent","ColumnMenu","searchInputRef","setSearchValue","searchPredicate","autoFocusSearchField","sortedColumns","toggleAllColumns","currentModel","handleSearchValueChange","currentColumns","searchValueToCheck","firstSwitchRef","firstHideableColumnFound","isFirstHideableColumn","FormControlLabel","control","baseSwitch","DATA_GRID_FORCED_PROPS","disableColumnResize","keepColumnPositionIfDraggedOutside","DATA_GRID_PROPS_DEFAULT_VALUES","rowBuffer","columnThreshold","rowThreshold","Standard","disableDensitySelector","showColumnRightBorder","VirtualScrollerRoot","VirtualScrollerContentRoot","virtualScrollerContent","overflowedContent","VirtualScrollerRenderZoneRoot","virtualScrollerRenderZone","binarySearch","offset","sliceStart","sliceEnd","pivot","itemOffset","getRenderableIndexes","firstIndex","lastIndex","buffer","minFirstIndex","maxLastIndex","useGridVirtualScroller","_currentPage$range3","_currentPage$range4","onRenderZonePositioning","renderZoneMinColumnIndex","renderZoneMaxColumnIndex","getRowProps","selectedRowsLookup","renderZoneRef","setRenderContext","prevRenderContext","containerDimensions","setContainerDimensions","prevTotalWidth","getNearestIndexToRender","_currentPage$range2","lastMeasuredIndexRelativeToAllRows","allRowsMeasured","lastMeasuredIndexRelativeToCurrentPage","interval","exponentialSearch","computeRenderContext","lastColumnIndex","updateRenderZonePosition","nextRenderContext","initialFirstColumnToRender","updateRenderContext","context1","context2","initialRenderContext","handleScroll","topRowsScrolledSincePreviousRender","bottomRowsScrolledSincePreviousRender","topColumnsScrolledSincePreviousRender","bottomColumnsScrolledSincePreviousRender","shouldSetState","handleWheel","needsHorizontalScrollbar","contentSize","shouldExtendContent","overflowX","overflowY","getRenderContext","getRows","availableSpace","rowIndexOffset","renderedRows","lastColumnToRender","_currentPage$range5","lastVisibleRowIndex","onScroll","onWheel","onTouchMove","getContentProps","getRenderZoneProps","GridColumnHeaderSortIconRaw","iconElement","icons","iconProps","getIcon","ColumnHeaderMenuIcon","columnMenuId","columnMenuButtonId","iconButtonRef","handleMenuIconClick","GridColumnHeaderMenu","ContentComponent","contentComponentProps","GridColumnHeaderTitleRoot","columnHeaderTitle","GridColumnHeaderTitle","columnWidth","titleRef","tooltip","setTooltip","isOver","GridColumnHeaderSeparatorSides","GridColumnHeaderSeparatorRaw","side","Right","resizing","stopClick","GridColumnHeaderSeparator","columnMenuOpen","isResizing","separatorSide","isDraggable","headerComponent","columnMenuIconButton","columnTitleIconButtons","draggableContainerProps","columnHeaderSeparatorProps","disableHeaderSeparator","headerCellRef","showColumnMenuIcon","setShowColumnMenuIcon","ariaSort","columnMenuState","draggableContainer","draggable","titleContainer","titleContainerContent","GridColumnHeaderItem","_column$headerName","filterItemsCounter","extendRowFullWidth","isDragging","isColumnSorted","isColumnFiltered","isColumnNumeric","mouseEventsHandlers","onMouseOver","onMouseOut","onDragStart","onDragEnd","handleExited","columnHeaderFilterIconButton","hideSortIcons","elementId","GridColumnGroupHeader","_columnGroupsLookup$g","columnGroupsLookup","renderHeaderGroup","renderParams","showColumnBorder","GridColumnHeaderRow","columnHeaderRow","GridScrollAreaRawRoot","scrollArea","GridScrollAreaRaw","scrollDirection","dragging","setDragging","handleScrolling","newScrollPosition","handleDragOver","getBoundingClientRect","toggleDragging","prevDragging","GridScrollArea","GridColumnHeadersRoot","borderTopLeftRadius","borderTopRightRadius","GridColumnHeadersInnerRoot","columnHeaderDropZone","DataGridColumnHeaders","getInnerProps","getColumnHeaders","getColumnGroupHeaders","innerRefProp","dragCol","setDragCol","resizeCol","setResizeCol","cellTabIndexState","columnHeaderFocus","filterColumnLookup","sortColumnLookup","handleInnerRef","prevScrollLeft","getFirstColumnIndexToRenderRef","updateInnerPosition","_prevRenderContext$cu","_prevRenderContext$cu2","canUpdateInnerPosition","isUIEvent","handleColumnResizeStart","handleColumnResizeStop","handleColumnReorderStart","handleColumnReorderStop","getColumnsToRender","getParents","path","columnsToRender","isFirstColumn","hasTabbableElement","headerToRender","_visibleColumns$first","_visibleColumns$first2","_visibleColumns$first3","initialHeader","leftOverflow","firstColumnToRenderGroup","firstColumnToRenderGroupParents","_visibleColumns$colum","_visibleColumns$colum2","_column$computedWidth","_column$computedWidth2","_column$computedWidth3","groupParents","depthInfo","aggregated","_column$computedWidth7","lastItem","_column$computedWidth5","_column$computedWidth4","_column$computedWidth6","lastColumnToRenderGroup","_visibleColumns$colum3","_visibleColumns$colum4","_visibleColumns$colum5","_column$computedWidth8","elements","depthIndex","groupIndex","useGridColumnHeaders","DataGridRaw","themedProps","useThemeProps","overrides","mergedComponents","defaultComponent","useDataGridProps","propTypes","bool","arrayOf","isRequired","oneOf","any","warnIfFocusStateIsNotSynced","oneOfType","getDetailPanelContent","_interopRequireDefault","defineProperty","exports","_createSvgIcon","_jsxRuntime","jsx","GridOverlayRoot","StyledGridOverlay","fillOpacity","DefaultDataGridTable","aria-hidden","focusable","fillRule","rx","ry","Box","mt","defaultTheme","themeId"],"mappings":"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","file":"83e3a913443af905f5910e590f1c0202d553cb52-88bffc93abd163446a13.js","sourcesContent":["import * as React from 'react';\nconst GridRootPropsContext = /*#__PURE__*/React.createContext(undefined);\nif (process.env.NODE_ENV !== 'production') {\n  GridRootPropsContext.displayName = 'GridRootPropsContext';\n}\nexport { GridRootPropsContext };","import { generateUtilityClasses, generateUtilityClass } from '@mui/material';\nexport function getDataGridUtilityClass(slot) {\n  return generateUtilityClass('MuiDataGrid', slot);\n}\nexport const gridClasses = generateUtilityClasses('MuiDataGrid', ['actionsCell', 'aggregationColumnHeader', 'aggregationColumnHeader--alignLeft', 'aggregationColumnHeader--alignCenter', 'aggregationColumnHeader--alignRight', 'autoHeight', 'booleanCell', 'cell--editable', 'cell--editing', 'cell--textCenter', 'cell--textLeft', 'cell--textRight', 'cell--withRenderer', 'cell', 'cellContent', 'cellCheckbox', 'cellSkeleton', 'checkboxInput', 'columnHeader--alignCenter', 'columnHeader--alignLeft', 'columnHeader--alignRight', 'columnHeader--dragging', 'columnHeader--moving', 'columnHeader--numeric', 'columnHeader--sortable', 'columnHeader--sorted', 'columnHeader--filtered', 'columnHeader', 'columnHeaderCheckbox', 'columnHeaderDraggableContainer', 'columnHeaderDropZone', 'columnHeaderTitle', 'columnHeaderTitleContainer', 'columnHeaderTitleContainerContent', 'columnGroupHeader', 'columnHeader--filledGroup', 'columnHeader--emptyGroup', 'columnHeader--showColumnBorder', 'columnHeaders', 'columnHeadersInner', 'columnHeadersInner--scrollable', 'columnSeparator--resizable', 'columnSeparator--resizing', 'columnSeparator--sideLeft', 'columnSeparator--sideRight', 'columnSeparator', 'columnsPanel', 'columnsPanelRow', 'detailPanel', 'detailPanels', 'detailPanelToggleCell', 'detailPanelToggleCell--expanded', 'footerCell', 'panel', 'panelHeader', 'panelWrapper', 'panelContent', 'panelFooter', 'paper', 'editBooleanCell', 'editInputCell', 'filterForm', 'filterFormDeleteIcon', 'filterFormLinkOperatorInput', 'filterFormColumnInput', 'filterFormOperatorInput', 'filterFormValueInput', 'filterIcon', 'footerContainer', 'iconButtonContainer', 'iconSeparator', 'main', 'menu', 'menuIcon', 'menuIconButton', 'menuOpen', 'menuList', 'overlay', 'root', 'root--densityStandard', 'root--densityComfortable', 'root--densityCompact', 'row', 'row--editable', 'row--editing', 'row--lastVisible', 'row--dragging', 'row--dynamicHeight', 'row--detailPanelExpanded', 'rowReorderCellPlaceholder', 'rowCount', 'rowReorderCellContainer', 'rowReorderCell', 'rowReorderCell--draggable', 'scrollArea--left', 'scrollArea--right', 'scrollArea', 'selectedRowCount', 'sortIcon', 'toolbarContainer', 'toolbarFilterList', 'virtualScroller', 'virtualScrollerContent', 'virtualScrollerContent--overflowed', 'virtualScrollerRenderZone', 'pinnedColumns', 'pinnedColumns--left', 'pinnedColumns--right', 'pinnedColumnHeaders', 'pinnedColumnHeaders--left', 'pinnedColumnHeaders--right', 'withBorder', 'treeDataGroupingCell', 'treeDataGroupingCellToggle', 'groupingCriteriaCell', 'groupingCriteriaCellToggle', 'pinnedRows', 'pinnedRows--top', 'pinnedRows--bottom', 'pinnedRowsRenderZone']);","function r(e) {\n  var t,\n    f,\n    n = \"\";\n  if (\"string\" == typeof e || \"number\" == typeof e) n += e;else if (\"object\" == typeof e) if (Array.isArray(e)) for (t = 0; t < e.length; t++) e[t] && (f = r(e[t])) && (n && (n += \" \"), n += f);else for (t in e) e[t] && (n && (n += \" \"), n += t);\n  return n;\n}\nexport function clsx() {\n  for (var e, t, f = 0, n = \"\"; f < arguments.length;) (e = arguments[f++]) && (t = r(e)) && (n && (n += \" \"), n += t);\n  return n;\n}\nexport default clsx;","import * as React from 'react';\nimport { GridRootPropsContext } from '../../context/GridRootPropsContext';\nexport const useGridRootProps = () => {\n  const contextValue = React.useContext(GridRootPropsContext);\n  if (!contextValue) {\n    throw new Error('MUI: useGridRootProps should only be used inside the DataGrid, DataGridPro or DataGridPremium component.');\n  }\n  return contextValue;\n};","import React from 'react'\r\nimport Typography from '@mui/material/Typography'\r\nimport Link from '@mui/material/Link'\r\nimport IconButton from '@mui/material/IconButton'\r\nimport TravelExploreIcon from '@mui/icons-material/TravelExplore'\r\n\r\nimport { FinvizUrl, YahooFinanceEnUrl, ShortSummaryRelLink } from './common'\r\nimport { NoMaxWidthTooltip } from './reactUtils'\r\nimport { convertKMBT } from './utils'\r\n\r\n// export const YahooFinanceUrl = NavZhEnUrl(YahooFinanceZhUrl, YahooFinanceEnUrl)\r\nexport const YahooFinanceUrl = YahooFinanceEnUrl\r\n\r\n\r\nexport function PureFieldWithValueCheck(field, headerName, width, valueFixed, hide, description = null, toExponential = false) {\r\n  let output = {\r\n    field: field,\r\n    headerName: headerName,\r\n    width: width,\r\n    type: 'number',\r\n    renderCell: (params) => (\r\n      params.value === \"-\" || params.value === -Number.MAX_VALUE || params.value === Number.MAX_VALUE || params.value === null || params.value === undefined || params.value === \"Infinity\" || params.value === 'NaN' ?\r\n        <span>-</span> : \r\n        toExponential ? \r\n        <span>{params.value.toExponential(valueFixed)}</span> : \r\n        <span>{params.value.toFixed(valueFixed)}</span>\r\n    ),\r\n    hide: hide\r\n  }\r\n\r\n  if (description != null) {\r\n    output['description'] = description\r\n  }\r\n  return output\r\n}\r\n\r\nexport function ColorPosGreenNegRedField(field, headerName, width, hide, description = null){\r\n  let output = {\r\n    field: field,\r\n    headerName: headerName,\r\n    width: width,\r\n    type: 'number',\r\n    renderCell: (params) => (\r\n      params.value === \"-\" || params.value === -Number.MAX_VALUE || params.value === Number.MAX_VALUE || params.value === null || params.value === undefined || params.value === \"Infinity\" || params.value === 'NaN' ?\r\n        <span>-</span> :\r\n        <span style={{ fontWeight: 500, color: Math.sign(parseFloat(params.value)) === 1 ? 'green' : Math.sign(parseFloat(params.value)) === -1 ? 'red' : '' }}>{Math.sign(parseFloat(params.value)) === 1 ? '+' : ''}{params.value}</span>\r\n    ),\r\n    hide: hide\r\n  }\r\n  \r\n  if (description != null) {\r\n    output['description'] = description\r\n  }\r\n  return output\r\n}\r\n\r\nexport function PercentField(field, headerName, width, hide, description = null){\r\n  let output = {\r\n    field: field,\r\n    headerName: headerName,\r\n    width: width,\r\n    type: 'number',\r\n    renderCell: (params) => (\r\n      params.value === \"-\" || params.value === -Number.MAX_VALUE || params.value === Number.MAX_VALUE || params.value === null || params.value === undefined || params.value === \"Infinity\" || params.value === 'NaN'  ?\r\n        <span>-</span> :\r\n        <span>{(params.value * 100).toFixed(2) + \"%\"}</span>\r\n    ),\r\n    hide: hide\r\n  }\r\n  \r\n  if (description != null) {\r\n    output['description'] = description\r\n  }\r\n  return output\r\n}\r\n\r\nexport function KMBTField(field, headerName, width, valueFixed, hide, description = null) {\r\n  let output = {\r\n    field: field,\r\n    headerName: headerName,\r\n    width: width,\r\n    type: 'number',\r\n    renderCell: (params) => (\r\n      params.value === \"-\" || params.value === -Number.MAX_VALUE || params.value === Number.MAX_VALUE || params.value === null || params.value === undefined || params.value === \"Infinity\" || params.value === 'NaN' ?\r\n        <span>-</span> :\r\n        <span>{convertKMBT(params.value, valueFixed)}</span>\r\n    ),\r\n    hide: hide\r\n  }\r\n  \r\n  if (description != null) {\r\n    output['description'] = description\r\n  }\r\n  return output\r\n}\r\n\r\nexport function ColorPercentField(field, headerName, width, valueFixed, hide, fontWeight, description = null, flag=1){\r\n  let output = {\r\n    field: field,\r\n    headerName: headerName,\r\n    width: width,\r\n    type: 'number',\r\n    renderCell: (params) => (\r\n      params.value === '-' || params.value === -Number.MAX_VALUE || params.value === Number.MAX_VALUE || params.value === null || params.value === undefined || params.value === \"Infinity\" || params.value === 'NaN' ?\r\n        <span>-</span> :\r\n        <span style={{ fontWeight: fontWeight, color: Math.sign(parseFloat(params.value)*flag) === 1 ? 'green' : Math.sign(parseFloat(params.value)*flag) === -1 ? 'red' : '' }}>{Math.sign(parseFloat(params.value)) === 1 ? '+' : ''}{(params.value * 100).toFixed(valueFixed) + \"%\"}</span>\r\n    ),\r\n    hide: hide\r\n  }\r\n  \r\n  if (description != null) {\r\n    output['description'] = description\r\n  }\r\n  return output\r\n}\r\n\r\nexport function SymbolNameField(headerName, width, hide, description = null, source=\"\") {\r\n  return SymbolNameWithDetailLinkField(headerName, width, hide, description, source, \"\")\r\n}\r\n\r\nexport function SymbolNameWithDetailLinkField(headerName, width, hide, description = null, source=\"\", detail_link=\"\") {\r\n  let show_detail_link = detail_link !== \"\"\r\n  \r\n  let output = {\r\n    field: \"symbol\",\r\n    headerName: headerName,\r\n    align: show_detail_link ? 'right' : 'left',\r\n    width: width,\r\n    renderCell: (params) => (\r\n      <>\r\n        <Link href={ source==\"yahoo\" ? YahooFinanceUrl + 'quote/' + params.value : FinvizUrl + 'quote.ashx?t=' + params.value} target=\"_blank\" rel=\"noreferrer noopener\">\r\n          <span>{params.value}</span>\r\n        </Link>\r\n        {\r\n          show_detail_link ?       \r\n          <IconButton onClick={() => window.open(detail_link.replace(\"{symbol}\", params.value), \"_blank\")}>\r\n            <TravelExploreIcon color=\"action\"/>\r\n          </IconButton> : <></>   \r\n        }\r\n      </>\r\n    ),\r\n    hide: hide\r\n  }\r\n  \r\n  if (description != null) {\r\n    output['description'] = description\r\n  }\r\n  return output\r\n}\r\n\r\nexport function PriceField(field, headerName, width, hide, description = null, source=\"\") {\r\n  let output = {\r\n    field: field,\r\n    headerName: headerName,\r\n    width: width,\r\n    renderCell: (params) => (\r\n      <Link href={ source==\"yahoo\" ? YahooFinanceUrl + 'quote/' + params.row[\"symbol\"] : FinvizUrl + 'quote.ashx?t=' +  params.row[\"symbol\"] } target=\"_blank\" rel=\"noreferrer noopener\">\r\n        <span>{params.value === '-' || params.value === -Number.MAX_VALUE || params.value === Number.MAX_VALUE || params.value === null || params.value === undefined || params.value === \"Infinity\" || params.value === 'NaN' ? '-' : params.value.toFixed(2)}</span>\r\n      </Link>\r\n    ),\r\n    hide: hide\r\n  }\r\n  \r\n  if (description != null) {\r\n    output['description'] = description\r\n  }\r\n  return output\r\n}\r\n\r\nexport function NameWithLinkField(field, headerName, width, linkKey, hide, align='left', description = null) {\r\n  let output = {\r\n    field: field,\r\n    headerName: headerName,\r\n    width: width,\r\n    align: align,\r\n    renderCell: (params) => (\r\n      linkKey in params.row && params.row[linkKey] != \"\" && params.row[linkKey] != \"-\" ?       \r\n      <Link href={params.row[linkKey]} target=\"_blank\" rel=\"noreferrer noopener\">\r\n        <span>{params.value}</span>\r\n      </Link> : <span>{params.value}</span>\r\n    ),\r\n    hide: hide\r\n  }\r\n  \r\n  if (description != null) {\r\n    output['description'] = description\r\n  }\r\n  return output\r\n}\r\n\r\nexport function ShortFloatLinkWithShowChartField(field, headerName, width, hide, description = null) {\r\n  let output = {\r\n    field: field,\r\n    headerName: headerName,\r\n    width: width,\r\n    type: 'number',\r\n    renderCell: (params) => (\r\n      params.value === \"-\" || params.value === -Number.MAX_VALUE || params.value === Number.MAX_VALUE || params.value === null || params.value === undefined || params.value === \"Infinity\" || params.value === 'NaN'  ?\r\n      <span>-</span> :      \r\n      <Link href={ShortSummaryRelLink + \"?symbol=\" + params.row[\"symbol\"] + \"&showChart=true\"} target=\"_blank\" rel=\"noreferrer noopener\">\r\n        <span>{(params.value * 100).toFixed(2) + \"%\"}</span>\r\n      </Link>\r\n    ),\r\n    hide: hide\r\n  }\r\n  \r\n  if (description != null) {\r\n    output['description'] = description\r\n  }\r\n  return output\r\n}\r\n\r\nexport function ColorNumberWithExtraInfoField(field, headerName, width, valueFixed, hide, description = null) {\r\n  let output = {\r\n    field: field,\r\n    headerName: headerName,\r\n    width: width,\r\n    type: 'number',\r\n    renderCell: (params) => (\r\n      \"extra_info\" in params.row ?\r\n      <NoMaxWidthTooltip arrow title={<span style={{ fontSize: '14px', whiteSpace: 'pre-line', lineHeight: '20px', textAlign: 'center'}}>{params.row[\"extra_info\"]}</span>} >\r\n        <Typography sx={{ fontWeight: 'word_color' in params.row ? 600 : 500, color: 'word_color' in params.row ? params.row['word_color'] : 'unset' }} style={{cursor: 'pointer'}}>{params.value.toFixed(valueFixed)}</Typography>\r\n      </NoMaxWidthTooltip>\r\n      :\r\n      <Typography sx={{ fontWeight: 'word_color' in params.row ? 600 : 500, color: 'word_color' in params.row ? params.row['word_color'] : 'unset' }} >{params.value.toFixed(valueFixed)}</Typography>\r\n    ),\r\n    hide: hide\r\n  }\r\n  \r\n  if (description != null) {\r\n    output['description'] = description\r\n  }\r\n  return output\r\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { darken, lighten, alpha, styled } from '@mui/material/styles';\nimport { gridClasses } from '../../constants/gridClasses';\nexport const GridRootStyles = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'Root',\n  overridesResolver: (props, styles) => [{\n    [`&.${gridClasses.autoHeight}`]: styles.autoHeight\n  }, {\n    [`&.${gridClasses.aggregationColumnHeader}`]: styles.aggregationColumnHeader\n  }, {\n    [`&.${gridClasses['aggregationColumnHeader--alignLeft']}`]: styles['aggregationColumnHeader--alignLeft']\n  }, {\n    [`&.${gridClasses['aggregationColumnHeader--alignCenter']}`]: styles['aggregationColumnHeader--alignCenter']\n  }, {\n    [`&.${gridClasses['aggregationColumnHeader--alignRight']}`]: styles['aggregationColumnHeader--alignRight']\n  }, {\n    [`&.${gridClasses.aggregationColumnHeaderLabel}`]: styles.aggregationColumnHeaderLabel\n  }, {\n    [`& .${gridClasses.editBooleanCell}`]: styles.editBooleanCell\n  }, {\n    [`& .${gridClasses['cell--editing']}`]: styles['cell--editing']\n  }, {\n    [`& .${gridClasses['cell--textCenter']}`]: styles['cell--textCenter']\n  }, {\n    [`& .${gridClasses['cell--textLeft']}`]: styles['cell--textLeft']\n  }, {\n    [`& .${gridClasses['cell--textRight']}`]: styles['cell--textRight']\n  },\n  // TODO v6: Remove\n  {\n    [`& .${gridClasses['cell--withRenderer']}`]: styles['cell--withRenderer']\n  }, {\n    [`& .${gridClasses.cell}`]: styles.cell\n  }, {\n    [`& .${gridClasses.cellContent}`]: styles.cellContent\n  }, {\n    [`& .${gridClasses.cellCheckbox}`]: styles.cellCheckbox\n  }, {\n    [`& .${gridClasses.cellSkeleton}`]: styles.cellSkeleton\n  }, {\n    [`& .${gridClasses.checkboxInput}`]: styles.checkboxInput\n  }, {\n    [`& .${gridClasses['columnHeader--alignCenter']}`]: styles['columnHeader--alignCenter']\n  }, {\n    [`& .${gridClasses['columnHeader--alignLeft']}`]: styles['columnHeader--alignLeft']\n  }, {\n    [`& .${gridClasses['columnHeader--alignRight']}`]: styles['columnHeader--alignRight']\n  }, {\n    [`& .${gridClasses['columnHeader--dragging']}`]: styles['columnHeader--dragging']\n  }, {\n    [`& .${gridClasses['columnHeader--moving']}`]: styles['columnHeader--moving']\n  }, {\n    [`& .${gridClasses['columnHeader--numeric']}`]: styles['columnHeader--numeric']\n  }, {\n    [`& .${gridClasses['columnHeader--sortable']}`]: styles['columnHeader--sortable']\n  }, {\n    [`& .${gridClasses['columnHeader--sorted']}`]: styles['columnHeader--sorted']\n  }, {\n    [`& .${gridClasses.columnHeader}`]: styles.columnHeader\n  }, {\n    [`& .${gridClasses.columnHeaderCheckbox}`]: styles.columnHeaderCheckbox\n  }, {\n    [`& .${gridClasses.columnHeaderDraggableContainer}`]: styles.columnHeaderDraggableContainer\n  }, {\n    [`& .${gridClasses.columnHeaderTitleContainer}`]: styles.columnHeaderTitleContainer\n  }, {\n    [`& .${gridClasses['columnSeparator--resizable']}`]: styles['columnSeparator--resizable']\n  }, {\n    [`& .${gridClasses['columnSeparator--resizing']}`]: styles['columnSeparator--resizing']\n  }, {\n    [`& .${gridClasses.columnSeparator}`]: styles.columnSeparator\n  }, {\n    [`& .${gridClasses.filterIcon}`]: styles.filterIcon\n  }, {\n    [`& .${gridClasses.iconSeparator}`]: styles.iconSeparator\n  }, {\n    [`& .${gridClasses.menuIcon}`]: styles.menuIcon\n  }, {\n    [`& .${gridClasses.menuIconButton}`]: styles.menuIconButton\n  }, {\n    [`& .${gridClasses.menuOpen}`]: styles.menuOpen\n  }, {\n    [`& .${gridClasses.menuList}`]: styles.menuList\n  }, {\n    [`& .${gridClasses['row--editable']}`]: styles['row--editable']\n  }, {\n    [`& .${gridClasses['row--editing']}`]: styles['row--editing']\n  }, {\n    [`& .${gridClasses['row--dragging']}`]: styles['row--dragging']\n  }, {\n    [`& .${gridClasses.row}`]: styles.row\n  }, {\n    [`& .${gridClasses.rowReorderCellPlaceholder}`]: styles.rowReorderCellPlaceholder\n  }, {\n    [`& .${gridClasses.rowReorderCell}`]: styles.rowReorderCell\n  }, {\n    [`& .${gridClasses['rowReorderCell--draggable']}`]: styles['rowReorderCell--draggable']\n  }, {\n    [`& .${gridClasses.sortIcon}`]: styles.sortIcon\n  }, {\n    [`& .${gridClasses.withBorder}`]: styles.withBorder\n  }, {\n    [`& .${gridClasses.treeDataGroupingCell}`]: styles.treeDataGroupingCell\n  }, {\n    [`& .${gridClasses.treeDataGroupingCellToggle}`]: styles.treeDataGroupingCellToggle\n  }, {\n    [`& .${gridClasses.detailPanelToggleCell}`]: styles.detailPanelToggleCell\n  }, {\n    [`& .${gridClasses['detailPanelToggleCell--expanded']}`]: styles['detailPanelToggleCell--expanded']\n  }, styles.root]\n})(_ref => {\n  let {\n    theme\n  } = _ref;\n  const borderColor = theme.palette.mode === 'light' ? lighten(alpha(theme.palette.divider, 1), 0.88) : darken(alpha(theme.palette.divider, 1), 0.68);\n  const gridStyle = _extends({\n    flex: 1,\n    boxSizing: 'border-box',\n    position: 'relative',\n    border: `1px solid ${borderColor}`,\n    borderRadius: theme.shape.borderRadius,\n    color: theme.palette.text.primary\n  }, theme.typography.body2, {\n    outline: 'none',\n    height: '100%',\n    display: 'flex',\n    flexDirection: 'column',\n    [`&.${gridClasses.autoHeight}`]: {\n      height: 'auto',\n      [`& .${gridClasses['row--lastVisible']} .${gridClasses.cell}`]: {\n        borderBottomColor: 'transparent'\n      }\n    },\n    [`& .${gridClasses['virtualScrollerContent--overflowed']} .${gridClasses['row--lastVisible']} .${gridClasses.cell}`]: {\n      borderBottomColor: 'transparent'\n    },\n    [`& .${gridClasses.columnHeader}, & .${gridClasses.cell}`]: {\n      WebkitTapHighlightColor: 'transparent',\n      lineHeight: null,\n      padding: '0 10px',\n      boxSizing: 'border-box'\n    },\n    [`& .${gridClasses.columnHeader}:focus-within, & .${gridClasses.cell}:focus-within`]: {\n      outline: `solid ${alpha(theme.palette.primary.main, 0.5)} 1px`,\n      outlineWidth: 1,\n      outlineOffset: -1\n    },\n    [`& .${gridClasses.columnHeader}:focus, & .${gridClasses.cell}:focus`]: {\n      outline: `solid ${theme.palette.primary.main} 1px`\n    },\n    [`& .${gridClasses.columnHeaderCheckbox}, & .${gridClasses.cellCheckbox}`]: {\n      padding: 0,\n      justifyContent: 'center',\n      alignItems: 'center'\n    },\n    [`& .${gridClasses.columnHeader}`]: {\n      position: 'relative',\n      display: 'flex',\n      alignItems: 'center'\n    },\n    [`& .${gridClasses['columnHeader--sorted']} .${gridClasses.iconButtonContainer}, & .${gridClasses['columnHeader--filtered']} .${gridClasses.iconButtonContainer}`]: {\n      visibility: 'visible',\n      width: 'auto'\n    },\n    [`& .${gridClasses.columnHeader}:not(.${gridClasses['columnHeader--sorted']}) .${gridClasses.sortIcon}`]: {\n      opacity: 0,\n      transition: theme.transitions.create(['opacity'], {\n        duration: theme.transitions.duration.shorter\n      })\n    },\n    [`& .${gridClasses.columnHeader}:not(.${gridClasses['columnHeader--sorted']}):hover .${gridClasses.sortIcon}`]: {\n      opacity: 0.5\n    },\n    [`& .${gridClasses.columnHeaderTitleContainer}`]: {\n      display: 'flex',\n      alignItems: 'center',\n      minWidth: 0,\n      flex: 1,\n      whiteSpace: 'nowrap',\n      overflow: 'hidden'\n    },\n    [`& .${gridClasses.columnHeaderTitleContainerContent}`]: {\n      overflow: 'hidden',\n      display: 'flex',\n      alignItems: 'center'\n    },\n    [`& .${gridClasses['columnHeader--filledGroup']} .${gridClasses.columnHeaderTitleContainer}`]: {\n      borderBottom: `solid ${borderColor} 1px`,\n      boxSizing: 'border-box'\n    },\n    [`& .${gridClasses['columnHeader--filledGroup']}.${gridClasses['columnHeader--showColumnBorder']} .${gridClasses.columnHeaderTitleContainer}`]: {\n      borderBottom: `none`\n    },\n    [`& .${gridClasses['columnHeader--filledGroup']}.${gridClasses['columnHeader--showColumnBorder']}`]: {\n      borderBottom: `solid ${borderColor} 1px`,\n      boxSizing: 'border-box'\n    },\n    [`& .${gridClasses.sortIcon}, & .${gridClasses.filterIcon}`]: {\n      fontSize: 'inherit'\n    },\n    [`& .${gridClasses['columnHeader--sortable']}`]: {\n      cursor: 'pointer'\n    },\n    [`& .${gridClasses['columnHeader--alignCenter']} .${gridClasses.columnHeaderTitleContainer}`]: {\n      justifyContent: 'center'\n    },\n    [`& .${gridClasses['columnHeader--alignRight']} .${gridClasses.columnHeaderDraggableContainer}, & .${gridClasses['columnHeader--alignRight']} .${gridClasses.columnHeaderTitleContainer}`]: {\n      flexDirection: 'row-reverse'\n    },\n    [`& .${gridClasses['columnHeader--alignCenter']} .${gridClasses.menuIcon}, & .${gridClasses['columnHeader--alignRight']} .${gridClasses.menuIcon}`]: {\n      marginRight: 'auto',\n      marginLeft: -6\n    },\n    [`& .${gridClasses['columnHeader--alignRight']} .${gridClasses.menuIcon}, & .${gridClasses['columnHeader--alignRight']} .${gridClasses.menuIcon}`]: {\n      marginRight: 'auto',\n      marginLeft: -10\n    },\n    [`& .${gridClasses['columnHeader--moving']}`]: {\n      backgroundColor: theme.palette.action.hover\n    },\n    [`& .${gridClasses.columnSeparator}`]: {\n      position: 'absolute',\n      zIndex: 100,\n      display: 'flex',\n      flexDirection: 'column',\n      justifyContent: 'center',\n      color: borderColor\n    },\n    [`& .${gridClasses['columnSeparator--sideLeft']}`]: {\n      left: -12\n    },\n    [`& .${gridClasses['columnSeparator--sideRight']}`]: {\n      right: -12\n    },\n    [`& .${gridClasses['columnSeparator--resizable']}`]: {\n      cursor: 'col-resize',\n      touchAction: 'none',\n      '&:hover': {\n        color: theme.palette.text.primary,\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          color: borderColor\n        }\n      },\n      [`&.${gridClasses['columnSeparator--resizing']}`]: {\n        color: theme.palette.text.primary\n      },\n      '& svg': {\n        pointerEvents: 'none'\n      }\n    },\n    [`& .${gridClasses.iconSeparator}`]: {\n      color: 'inherit'\n    },\n    [`& .${gridClasses.menuIcon}`]: {\n      width: 0,\n      visibility: 'hidden',\n      fontSize: 20,\n      marginRight: -10,\n      display: 'flex',\n      alignItems: 'center'\n    },\n    [`& .${gridClasses.columnHeader}:hover`]: {\n      [`& .${gridClasses.iconButtonContainer}`]: {\n        visibility: 'visible',\n        width: 'auto'\n      },\n      [`& .${gridClasses.menuIcon}`]: {\n        width: 'auto',\n        visibility: 'visible'\n      }\n    },\n    [`.${gridClasses.menuOpen}`]: {\n      visibility: 'visible',\n      width: 'auto'\n    },\n    [`& .${gridClasses.row}`]: {\n      display: 'flex',\n      width: 'fit-content',\n      breakInside: 'avoid',\n      // Avoid the row to be broken in two different print pages.\n      '&:hover, &.Mui-hovered': {\n        backgroundColor: theme.palette.action.hover,\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        }\n      },\n      '&.Mui-selected': {\n        backgroundColor: alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity),\n        '&:hover, &.Mui-hovered': {\n          backgroundColor: alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity + theme.palette.action.hoverOpacity),\n          // Reset on touch devices, it doesn't add specificity\n          '@media (hover: none)': {\n            backgroundColor: alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity)\n          }\n        }\n      }\n    },\n    [`& .${gridClasses.cell}`]: {\n      display: 'flex',\n      alignItems: 'center',\n      borderBottom: `1px solid ${borderColor}`\n    },\n    [`& .${gridClasses.row}:not(.${gridClasses['row--dynamicHeight']}) > .${gridClasses.cell}`]: {\n      overflow: 'hidden',\n      whiteSpace: 'nowrap'\n    },\n    [`& .${gridClasses.cellContent}`]: {\n      overflow: 'hidden',\n      textOverflow: 'ellipsis'\n    },\n    [`& .${gridClasses.cell}.${gridClasses['cell--editing']}`]: {\n      padding: 1,\n      display: 'flex',\n      boxShadow: theme.shadows[2],\n      backgroundColor: theme.palette.background.paper,\n      '&:focus-within': {\n        outline: `solid ${theme.palette.primary.main} 1px`,\n        outlineOffset: '-1px'\n      }\n    },\n    [`& .${gridClasses['row--editing']}`]: {\n      boxShadow: theme.shadows[2]\n    },\n    [`& .${gridClasses['row--editing']} .${gridClasses.cell}`]: {\n      boxShadow: theme.shadows[0],\n      backgroundColor: theme.palette.background.paper\n    },\n    [`& .${gridClasses.editBooleanCell}`]: {\n      display: 'flex',\n      height: '100%',\n      width: '100%',\n      alignItems: 'center',\n      justifyContent: 'center'\n    },\n    [`& .${gridClasses.booleanCell}[data-value=\"true\"]`]: {\n      color: theme.palette.text.secondary\n    },\n    [`& .${gridClasses.booleanCell}[data-value=\"false\"]`]: {\n      color: theme.palette.text.disabled\n    },\n    [`& .${gridClasses.actionsCell}`]: {\n      display: 'inline-flex',\n      alignItems: 'center',\n      gridGap: theme.spacing(1)\n    },\n    [`& .${gridClasses.rowReorderCell}`]: {\n      display: 'inline-flex',\n      flex: 1,\n      alignItems: 'center',\n      justifyContent: 'center',\n      opacity: theme.palette.action.disabledOpacity\n    },\n    [`& .${gridClasses['rowReorderCell--draggable']}`]: {\n      cursor: 'move',\n      opacity: 1\n    },\n    [`& .${gridClasses.rowReorderCellContainer}`]: {\n      padding: 0,\n      alignItems: 'stretch'\n    },\n    [`& .${gridClasses.withBorder}`]: {\n      borderRight: `1px solid ${borderColor}`\n    },\n    [`& .${gridClasses['cell--textLeft']}`]: {\n      justifyContent: 'flex-start'\n    },\n    [`& .${gridClasses['cell--textRight']}`]: {\n      justifyContent: 'flex-end'\n    },\n    [`& .${gridClasses['cell--textCenter']}`]: {\n      justifyContent: 'center'\n    },\n    [`& .${gridClasses.columnHeaderDraggableContainer}`]: {\n      display: 'flex',\n      width: '100%',\n      height: '100%'\n    },\n    [`& .${gridClasses.rowReorderCellPlaceholder}`]: {\n      display: 'none'\n    },\n    [`& .${gridClasses['columnHeader--dragging']}, & .${gridClasses['row--dragging']}`]: {\n      background: theme.palette.background.paper,\n      padding: '0 12px',\n      borderRadius: theme.shape.borderRadius,\n      opacity: theme.palette.action.disabledOpacity\n    },\n    [`& .${gridClasses['row--dragging']}`]: {\n      background: theme.palette.background.paper,\n      padding: '0 12px',\n      borderRadius: theme.shape.borderRadius,\n      opacity: theme.palette.action.disabledOpacity,\n      [`& .${gridClasses.rowReorderCellPlaceholder}`]: {\n        display: 'flex'\n      }\n    },\n    [`& .${gridClasses.treeDataGroupingCell}`]: {\n      display: 'flex',\n      alignItems: 'center',\n      width: '100%'\n    },\n    [`& .${gridClasses.treeDataGroupingCellToggle}`]: {\n      flex: '0 0 28px',\n      alignSelf: 'stretch',\n      marginRight: theme.spacing(2)\n    },\n    [`& .${gridClasses.groupingCriteriaCell}`]: {\n      display: 'flex',\n      alignItems: 'center',\n      width: '100%'\n    },\n    [`& .${gridClasses.groupingCriteriaCellToggle}`]: {\n      flex: '0 0 28px',\n      alignSelf: 'stretch',\n      marginRight: theme.spacing(2)\n    }\n  });\n  return gridStyle;\n});","// Cache implementation based on Erik Rasmussen's `lru-memoize`:\n// https://github.com/erikras/lru-memoize\nvar NOT_FOUND = 'NOT_FOUND';\nfunction createSingletonCache(equals) {\n  var entry;\n  return {\n    get: function get(key) {\n      if (entry && equals(entry.key, key)) {\n        return entry.value;\n      }\n      return NOT_FOUND;\n    },\n    put: function put(key, value) {\n      entry = {\n        key: key,\n        value: value\n      };\n    },\n    getEntries: function getEntries() {\n      return entry ? [entry] : [];\n    },\n    clear: function clear() {\n      entry = undefined;\n    }\n  };\n}\nfunction createLruCache(maxSize, equals) {\n  var entries = [];\n  function get(key) {\n    var cacheIndex = entries.findIndex(function (entry) {\n      return equals(key, entry.key);\n    }); // We found a cached entry\n\n    if (cacheIndex > -1) {\n      var entry = entries[cacheIndex]; // Cached entry not at top of cache, move it to the top\n\n      if (cacheIndex > 0) {\n        entries.splice(cacheIndex, 1);\n        entries.unshift(entry);\n      }\n      return entry.value;\n    } // No entry found in cache, return sentinel\n\n    return NOT_FOUND;\n  }\n  function put(key, value) {\n    if (get(key) === NOT_FOUND) {\n      // TODO Is unshift slow?\n      entries.unshift({\n        key: key,\n        value: value\n      });\n      if (entries.length > maxSize) {\n        entries.pop();\n      }\n    }\n  }\n  function getEntries() {\n    return entries;\n  }\n  function clear() {\n    entries = [];\n  }\n  return {\n    get: get,\n    put: put,\n    getEntries: getEntries,\n    clear: clear\n  };\n}\nexport var defaultEqualityCheck = function defaultEqualityCheck(a, b) {\n  return a === b;\n};\nexport function createCacheKeyComparator(equalityCheck) {\n  return function areArgumentsShallowlyEqual(prev, next) {\n    if (prev === null || next === null || prev.length !== next.length) {\n      return false;\n    } // Do this in a for loop (and not a `forEach` or an `every`) so we can determine equality as fast as possible.\n\n    var length = prev.length;\n    for (var i = 0; i < length; i++) {\n      if (!equalityCheck(prev[i], next[i])) {\n        return false;\n      }\n    }\n    return true;\n  };\n}\n// defaultMemoize now supports a configurable cache size with LRU behavior,\n// and optional comparison of the result value with existing values\nexport function defaultMemoize(func, equalityCheckOrOptions) {\n  var providedOptions = typeof equalityCheckOrOptions === 'object' ? equalityCheckOrOptions : {\n    equalityCheck: equalityCheckOrOptions\n  };\n  var _providedOptions$equa = providedOptions.equalityCheck,\n    equalityCheck = _providedOptions$equa === void 0 ? defaultEqualityCheck : _providedOptions$equa,\n    _providedOptions$maxS = providedOptions.maxSize,\n    maxSize = _providedOptions$maxS === void 0 ? 1 : _providedOptions$maxS,\n    resultEqualityCheck = providedOptions.resultEqualityCheck;\n  var comparator = createCacheKeyComparator(equalityCheck);\n  var cache = maxSize === 1 ? createSingletonCache(comparator) : createLruCache(maxSize, comparator); // we reference arguments instead of spreading them for performance reasons\n\n  function memoized() {\n    var value = cache.get(arguments);\n    if (value === NOT_FOUND) {\n      // @ts-ignore\n      value = func.apply(null, arguments);\n      if (resultEqualityCheck) {\n        var entries = cache.getEntries();\n        var matchingEntry = entries.find(function (entry) {\n          return resultEqualityCheck(entry.value, value);\n        });\n        if (matchingEntry) {\n          value = matchingEntry.value;\n        }\n      }\n      cache.put(arguments, value);\n    }\n    return value;\n  }\n  memoized.clearCache = function () {\n    return cache.clear();\n  };\n  return memoized;\n}","import { defaultMemoize, defaultEqualityCheck } from './defaultMemoize';\nexport { defaultMemoize, defaultEqualityCheck };\nfunction getDependencies(funcs) {\n  var dependencies = Array.isArray(funcs[0]) ? funcs[0] : funcs;\n  if (!dependencies.every(function (dep) {\n    return typeof dep === 'function';\n  })) {\n    var dependencyTypes = dependencies.map(function (dep) {\n      return typeof dep === 'function' ? \"function \" + (dep.name || 'unnamed') + \"()\" : typeof dep;\n    }).join(', ');\n    throw new Error(\"createSelector expects all input-selectors to be functions, but received the following types: [\" + dependencyTypes + \"]\");\n  }\n  return dependencies;\n}\nexport function createSelectorCreator(memoize) {\n  for (var _len = arguments.length, memoizeOptionsFromArgs = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    memoizeOptionsFromArgs[_key - 1] = arguments[_key];\n  }\n  var createSelector = function createSelector() {\n    for (var _len2 = arguments.length, funcs = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      funcs[_key2] = arguments[_key2];\n    }\n    var _recomputations = 0;\n    var _lastResult; // Due to the intricacies of rest params, we can't do an optional arg after `...funcs`.\n    // So, start by declaring the default value here.\n    // (And yes, the words 'memoize' and 'options' appear too many times in this next sequence.)\n\n    var directlyPassedOptions = {\n      memoizeOptions: undefined\n    }; // Normally, the result func or \"output selector\" is the last arg\n\n    var resultFunc = funcs.pop(); // If the result func is actually an _object_, assume it's our options object\n\n    if (typeof resultFunc === 'object') {\n      directlyPassedOptions = resultFunc; // and pop the real result func off\n\n      resultFunc = funcs.pop();\n    }\n    if (typeof resultFunc !== 'function') {\n      throw new Error(\"createSelector expects an output function after the inputs, but received: [\" + typeof resultFunc + \"]\");\n    } // Determine which set of options we're using. Prefer options passed directly,\n    // but fall back to options given to createSelectorCreator.\n\n    var _directlyPassedOption = directlyPassedOptions,\n      _directlyPassedOption2 = _directlyPassedOption.memoizeOptions,\n      memoizeOptions = _directlyPassedOption2 === void 0 ? memoizeOptionsFromArgs : _directlyPassedOption2; // Simplifying assumption: it's unlikely that the first options arg of the provided memoizer\n    // is an array. In most libs I've looked at, it's an equality function or options object.\n    // Based on that, if `memoizeOptions` _is_ an array, we assume it's a full\n    // user-provided array of options. Otherwise, it must be just the _first_ arg, and so\n    // we wrap it in an array so we can apply it.\n\n    var finalMemoizeOptions = Array.isArray(memoizeOptions) ? memoizeOptions : [memoizeOptions];\n    var dependencies = getDependencies(funcs);\n    var memoizedResultFunc = memoize.apply(void 0, [function recomputationWrapper() {\n      _recomputations++; // apply arguments instead of spreading for performance.\n\n      return resultFunc.apply(null, arguments);\n    }].concat(finalMemoizeOptions)); // If a selector is called with the exact same arguments we don't need to traverse our dependencies again.\n\n    var selector = memoize(function dependenciesChecker() {\n      var params = [];\n      var length = dependencies.length;\n      for (var i = 0; i < length; i++) {\n        // apply arguments instead of spreading and mutate a local list of params for performance.\n        // @ts-ignore\n        params.push(dependencies[i].apply(null, arguments));\n      } // apply arguments instead of spreading for performance.\n\n      _lastResult = memoizedResultFunc.apply(null, params);\n      return _lastResult;\n    });\n    Object.assign(selector, {\n      resultFunc: resultFunc,\n      memoizedResultFunc: memoizedResultFunc,\n      dependencies: dependencies,\n      lastResult: function lastResult() {\n        return _lastResult;\n      },\n      recomputations: function recomputations() {\n        return _recomputations;\n      },\n      resetRecomputations: function resetRecomputations() {\n        return _recomputations = 0;\n      }\n    });\n    return selector;\n  }; // @ts-ignore\n\n  return createSelector;\n}\nexport var createSelector = /* #__PURE__ */createSelectorCreator(defaultMemoize);\n// Manual definition of state and output arguments\nexport var createStructuredSelector = function createStructuredSelector(selectors, selectorCreator) {\n  if (selectorCreator === void 0) {\n    selectorCreator = createSelector;\n  }\n  if (typeof selectors !== 'object') {\n    throw new Error('createStructuredSelector expects first argument to be an object ' + (\"where each property is a selector, instead received a \" + typeof selectors));\n  }\n  var objectKeys = Object.keys(selectors);\n  var resultSelector = selectorCreator(\n  // @ts-ignore\n  objectKeys.map(function (key) {\n    return selectors[key];\n  }), function () {\n    for (var _len3 = arguments.length, values = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      values[_key3] = arguments[_key3];\n    }\n    return values.reduce(function (composition, value, index) {\n      composition[objectKeys[index]] = value;\n      return composition;\n    }, {});\n  });\n  return resultSelector;\n};","export const buildWarning = function (message) {\n  let gravity = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'warning';\n  let alreadyWarned = false;\n  const cleanMessage = Array.isArray(message) ? message.join('\\n') : message;\n  return () => {\n    if (!alreadyWarned) {\n      alreadyWarned = true;\n      if (gravity === 'error') {\n        console.error(cleanMessage);\n      } else {\n        console.warn(cleanMessage);\n      }\n    }\n  };\n};\nexport const wrapWithWarningOnCall = (method, message) => {\n  if (process.env.NODE_ENV === 'production') {\n    return method;\n  }\n  const warning = buildWarning(message);\n  return function () {\n    warning();\n    return method(...arguments);\n  };\n};","import { createSelector as reselectCreateSelector } from 'reselect';\nimport { buildWarning } from './warning';\nconst cacheContainer = {\n  cache: null\n};\nconst missingInstanceIdWarning = buildWarning(['MUI: A selector was called without passing the instance ID, which may impact the performance of the grid.', 'To fix, call it with `apiRef`, e.g. `mySelector(apiRef)`, or pass the instance ID explicitly, e.g `mySelector(state, apiRef.current.instanceId)`.']);\nexport const createSelector = function () {\n  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n  if (cacheContainer.cache === null) {\n    cacheContainer.cache = {};\n  }\n  const selector = function () {\n    for (var _len2 = arguments.length, selectorArgs = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      selectorArgs[_key2] = arguments[_key2];\n    }\n    const [stateOrApiRef, instanceId] = selectorArgs;\n    const isApiRef = !!stateOrApiRef.current;\n    const cacheKey = isApiRef ? stateOrApiRef.current.instanceId : instanceId != null ? instanceId : 'default';\n    const state = isApiRef ? stateOrApiRef.current.state : stateOrApiRef;\n    if (process.env.NODE_ENV !== 'production') {\n      if (cacheKey === 'default') {\n        missingInstanceIdWarning();\n      }\n    }\n    if (cacheContainer.cache === null) {\n      cacheContainer.cache = {};\n    }\n    const {\n      cache\n    } = cacheContainer;\n    if (cache[cacheKey] && cache[cacheKey].get(args)) {\n      // We pass the cache key because the called selector might have as\n      // dependency another selector created with this `createSelector`.\n      return cache[cacheKey].get(args)(state, cacheKey);\n    }\n    const newSelector = reselectCreateSelector(...args);\n    if (!cache[cacheKey]) {\n      cache[cacheKey] = new Map();\n    }\n    cache[cacheKey].set(args, newSelector);\n    return newSelector(state, cacheKey);\n  }; // We use this property to detect if the selector was created with createSelector\n  // or it's only a simple function the receives the state and returns part of it.\n\n  selector.acceptsApiRef = true;\n  return selector;\n}; // eslint-disable-next-line @typescript-eslint/naming-convention\n\nexport const unstable_resetCreateSelectorCache = cacheKey => {\n  if (typeof cacheKey !== 'undefined') {\n    if (cacheContainer.cache && cacheContainer.cache[cacheKey]) {\n      delete cacheContainer.cache[cacheKey];\n    }\n  } else {\n    cacheContainer.cache = null;\n  }\n};","import { createSelector } from '../../../utils/createSelector';\nimport { wrapWithWarningOnCall } from '../../../utils/warning';\n/**\n * @category Columns\n * @deprecated Use the selector returning exactly the value you are looking for.\n * @ignore - do not document.\n * TODO v6: Rename `gridColumnsStateSelector`\n */\n\nexport const gridColumnsSelector = state => state.columns;\n/**\n * Get the field of each column.\n * @category Columns\n */\n\nexport const gridColumnFieldsSelector = createSelector(gridColumnsSelector, columnsState => columnsState.all);\n/**\n * Get the columns as a lookup (an object containing the field for keys and the definition for values).\n * @category Columns\n */\n\nexport const gridColumnLookupSelector = createSelector(gridColumnsSelector, columnsState => columnsState.lookup);\n/**\n * Get the columns as an array.\n * @category Columns\n */\n\nexport const gridColumnDefinitionsSelector = createSelector(gridColumnFieldsSelector, gridColumnLookupSelector, (allFields, lookup) => allFields.map(field => lookup[field]));\n/**\n * Get the column visibility model, containing the visibility status of each column.\n * If a column is not registered in the model, it is visible.\n * @category Visible Columns\n */\n\nexport const gridColumnVisibilityModelSelector = createSelector(gridColumnsSelector, columnsState => columnsState.columnVisibilityModel);\n/**\n * Get the visible columns as a lookup (an object containing the field for keys and the definition for values).\n * @category Visible Columns\n */\n\nexport const gridVisibleColumnDefinitionsSelector = createSelector(gridColumnDefinitionsSelector, gridColumnVisibilityModelSelector, (columns, columnVisibilityModel) => columns.filter(column => columnVisibilityModel[column.field] !== false));\n/**\n * Get the field of each visible column.\n * @category Visible Columns\n */\n\nexport const gridVisibleColumnFieldsSelector = createSelector(gridVisibleColumnDefinitionsSelector, visibleColumns => visibleColumns.map(column => column.field));\n/**\n * Get the left position in pixel of each visible columns relative to the left of the first column.\n * @category Visible Columns\n */\n\nexport const gridColumnPositionsSelector = createSelector(gridVisibleColumnDefinitionsSelector, visibleColumns => {\n  const positions = [];\n  let currentPosition = 0;\n  for (let i = 0; i < visibleColumns.length; i += 1) {\n    positions.push(currentPosition);\n    currentPosition += visibleColumns[i].computedWidth;\n  }\n  return positions;\n});\n/**\n * Get the summed width of all the visible columns.\n * @category Visible Columns\n */\n\nexport const gridColumnsTotalWidthSelector = createSelector(gridVisibleColumnDefinitionsSelector, gridColumnPositionsSelector, (visibleColumns, positions) => {\n  const colCount = visibleColumns.length;\n  if (colCount === 0) {\n    return 0;\n  }\n  return positions[colCount - 1] + visibleColumns[colCount - 1].computedWidth;\n});\n/**\n * Get the filterable columns as an array.\n * @category Columns\n */\n\nexport const gridFilterableColumnDefinitionsSelector = createSelector(gridColumnDefinitionsSelector, columns => columns.filter(col => col.filterable));\n/**\n * Get the filterable columns as a lookup (an object containing the field for keys and the definition for values).\n * @category Columns\n */\n\nexport const gridFilterableColumnLookupSelector = createSelector(gridColumnDefinitionsSelector, columns => columns.reduce((acc, col) => {\n  if (col.filterable) {\n    acc[col.field] = col;\n  }\n  return acc;\n}, {}));\n/**\n * @category Columns\n * @deprecated Use `gridColumnFieldsSelector` instead.\n * @ignore - do not document.\n */\n\nexport const allGridColumnsFieldsSelector = wrapWithWarningOnCall(gridColumnFieldsSelector, ['MUI: The method allGridColumnsFieldsSelector is deprecated and will be removed in the next major version.', 'Use gridColumnFieldsSelector instead']);\n/**\n * @category Columns\n * @deprecated Use `gridColumnDefinitionsSelector` instead.\n * @ignore - do not document.\n */\n\nexport const allGridColumnsSelector = wrapWithWarningOnCall(gridColumnDefinitionsSelector, ['MUI: The method allGridColumnsSelector is deprecated and will be removed in the next major version.', 'Use gridColumnDefinitionsSelector instead']);\n/**\n * @category Visible Columns\n * @deprecated Use `gridVisibleColumnDefinitionsSelector` instead.\n * @ignore - do not document.\n */\n\nexport const visibleGridColumnsSelector = wrapWithWarningOnCall(gridVisibleColumnDefinitionsSelector, ['MUI: The method visibleGridColumnsSelector is deprecated and will be removed in the next major version.', 'Use gridVisibleColumnDefinitionsSelector instead']);\n/**\n * @category Columns\n * @deprecated Use `gridFilterableColumnDefinitionsSelector` instead.\n * @ignore - do not document.\n */\n\nexport const filterableGridColumnsSelector = wrapWithWarningOnCall(gridFilterableColumnDefinitionsSelector, ['MUI: The method filterableGridColumnsSelector is deprecated and will be removed in the next major version.', 'Use gridFilterableColumnDefinitionsSelector instead']);\n/**\n * @category Columns\n * @deprecated Use `gridFilterableColumnLookupSelector` instead (not the same return format).\n * @ignore - do not document.\n */\n\nexport const filterableGridColumnsIdsSelector = wrapWithWarningOnCall(createSelector(gridFilterableColumnDefinitionsSelector, columns => columns.map(col => col.field)), ['MUI: The method filterableGridColumnsIdsSelector is deprecated and will be removed in the next major version.', 'Use gridFilterableColumnDefinitionsSelector instead.', 'The return format is now a lookup, if you want to get the same output as before, use the following code:', '', 'const lookup = gridFilterableColumnLookupSelector(apiRef);', 'const fields = gridColumnFieldsSelector(apiRef).filter(field => lookup[field]);']);\n/**\n * Get the amount of visible columns.\n * @category Visible Columns\n * @deprecated Use the length of the array returned by `gridVisibleColumnDefinitionsSelector` instead.\n * @ignore - do not document.\n */\n\nexport const visibleGridColumnsLengthSelector = wrapWithWarningOnCall(createSelector(gridVisibleColumnDefinitionsSelector, visibleColumns => visibleColumns.length), ['MUI: The method visibleGridColumnsLengthSelector is deprecated and will be removed in the next major version.', 'Use the length of the array returned by gridVisibleColumnDefinitionsSelector instead.']);\n/**\n * @category Visible Columns\n * @deprecated Use `gridColumnsTotalWidthSelector` or `gridColumnPositionsSelector` instead.\n * @ignore - do not document.\n */\n\nexport const gridColumnsMetaSelector = wrapWithWarningOnCall(createSelector(gridColumnPositionsSelector, gridColumnsTotalWidthSelector, (positions, totalWidth) => ({\n  totalWidth,\n  positions\n})), ['MUI: The method gridColumnsMetaSelector is deprecated and will be removed in the next major version.', 'Use gridColumnsTotalWidthSelector or gridColumnPositionsSelector instead']);","import { buildWarning } from '../../utils/warning';\nfunction isOutputSelector(selector) {\n  return selector.acceptsApiRef;\n}\nconst stateNotInitializedWarning = buildWarning(['MUI: `useGridSelector` has been called before the initialization of the state.', 'This hook can only be used inside the context of the grid.']);\nexport const useGridSelector = (apiRef, selector) => {\n  if (process.env.NODE_ENV !== 'production') {\n    if (!apiRef.current.state) {\n      stateNotInitializedWarning();\n    }\n  }\n  if (isOutputSelector(selector)) {\n    return selector(apiRef);\n  }\n  return selector(apiRef.current.state);\n};","import * as React from 'react';\nexport const GridApiContext = /*#__PURE__*/React.createContext(undefined);\nif (process.env.NODE_ENV !== 'production') {\n  GridApiContext.displayName = 'GridApiContext';\n}","import * as React from 'react';\nimport { GridApiContext } from '../../components/GridApiContext';\nexport function useGridApiContext() {\n  const apiRef = React.useContext(GridApiContext);\n  if (apiRef === undefined) {\n    throw new Error(['MUI: Could not find the data grid context.', 'It looks like you rendered your component outside of a DataGrid, DataGridPro or DataGridPremium parent component.', 'This can also happen if you are bundling multiple versions of the data grid.'].join('\\n'));\n  }\n  return apiRef;\n}","import { createSelector } from '../../../utils/createSelector';\nexport const gridDensitySelector = state => state.density;\nexport const gridDensityValueSelector = createSelector(gridDensitySelector, density => density.value);\nexport const gridDensityRowHeightSelector = createSelector(gridDensitySelector, density => density.rowHeight);\nexport const gridDensityHeaderHeightSelector = createSelector(gridDensitySelector, density => density.headerHeight);\nexport const gridDensityHeaderGroupingMaxDepthSelector = createSelector(gridDensitySelector, density => density.headerGroupingMaxDepth);\nexport const gridDensityFactorSelector = createSelector(gridDensitySelector, density => density.factor);\nexport const gridDensityTotalHeaderHeightSelector = createSelector(gridDensitySelector, density => density.headerHeight * (1 + density.headerGroupingMaxDepth));","import { createSelector } from '../../../utils/createSelector';\nexport const gridRowsStateSelector = state => state.rows;\nexport const gridRowCountSelector = createSelector(gridRowsStateSelector, rows => rows.totalRowCount);\nexport const gridRowsLoadingSelector = createSelector(gridRowsStateSelector, rows => rows.loading);\nexport const gridTopLevelRowCountSelector = createSelector(gridRowsStateSelector, rows => rows.totalTopLevelRowCount);\nexport const gridRowsLookupSelector = createSelector(gridRowsStateSelector, rows => rows.idRowsLookup);\nexport const gridRowsIdToIdLookupSelector = createSelector(gridRowsStateSelector, rows => rows.idToIdLookup);\nexport const gridRowTreeSelector = createSelector(gridRowsStateSelector, rows => rows.tree);\nexport const gridRowGroupingNameSelector = createSelector(gridRowsStateSelector, rows => rows.groupingName);\nexport const gridRowTreeDepthSelector = createSelector(gridRowsStateSelector, rows => rows.treeDepth);\nexport const gridRowIdsSelector = createSelector(gridRowsStateSelector, rows => rows.ids);\n/**\n * @ignore - do not document.\n */\n\nexport const gridAdditionalRowGroupsSelector = createSelector(gridRowsStateSelector, rows => rows == null ? void 0 : rows.additionalRowGroups);\n/**\n * @ignore - do not document.\n */\n\nexport const gridPinnedRowsSelector = createSelector(gridAdditionalRowGroupsSelector, additionalRowGroups => additionalRowGroups == null ? void 0 : additionalRowGroups.pinnedRows);\n/**\n * @ignore - do not document.\n */\n\nexport const gridPinnedRowsCountSelector = createSelector(gridPinnedRowsSelector, pinnedRows => {\n  var _pinnedRows$top, _pinnedRows$bottom;\n  return ((pinnedRows == null ? void 0 : (_pinnedRows$top = pinnedRows.top) == null ? void 0 : _pinnedRows$top.length) || 0) + ((pinnedRows == null ? void 0 : (_pinnedRows$bottom = pinnedRows.bottom) == null ? void 0 : _pinnedRows$bottom.length) || 0);\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"children\", \"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { useForkRef, unstable_useEnhancedEffect as useEnhancedEffect, capitalize } from '@mui/material/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/material';\nimport { GridRootStyles } from './GridRootStyles';\nimport { gridVisibleColumnDefinitionsSelector } from '../../hooks/features/columns/gridColumnsSelector';\nimport { useGridSelector } from '../../hooks/utils/useGridSelector';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { gridDensityHeaderGroupingMaxDepthSelector, gridDensityValueSelector } from '../../hooks/features/density/densitySelector';\nimport { gridPinnedRowsCountSelector, gridRowCountSelector } from '../../hooks/features/rows/gridRowsSelector';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    autoHeight,\n    density,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root', autoHeight && 'autoHeight', `root--density${capitalize(density)}`]\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridRoot = /*#__PURE__*/React.forwardRef(function GridRoot(props, ref) {\n  const rootProps = useGridRootProps();\n  const {\n      children,\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridApiContext();\n  const visibleColumns = useGridSelector(apiRef, gridVisibleColumnDefinitionsSelector);\n  const totalRowCount = useGridSelector(apiRef, gridRowCountSelector);\n  const densityValue = useGridSelector(apiRef, gridDensityValueSelector);\n  const headerGroupingMaxDepth = useGridSelector(apiRef, gridDensityHeaderGroupingMaxDepthSelector);\n  const rootContainerRef = React.useRef(null);\n  const handleRef = useForkRef(rootContainerRef, ref);\n  const pinnedRowsCount = useGridSelector(apiRef, gridPinnedRowsCountSelector);\n  const ownerState = _extends({}, rootProps, {\n    density: densityValue\n  });\n  const classes = useUtilityClasses(ownerState);\n  apiRef.current.rootElementRef = rootContainerRef; // Our implementation of <NoSsr />\n\n  const [mountedState, setMountedState] = React.useState(false);\n  useEnhancedEffect(() => {\n    setMountedState(true);\n  }, []);\n  useEnhancedEffect(() => {\n    if (mountedState) {\n      apiRef.current.unstable_updateGridDimensionsRef();\n    }\n  }, [apiRef, mountedState]);\n  if (!mountedState) {\n    return null;\n  }\n  return /*#__PURE__*/_jsx(GridRootStyles, _extends({\n    ref: handleRef,\n    className: clsx(className, classes.root),\n    ownerState: ownerState,\n    role: \"grid\",\n    \"aria-colcount\": visibleColumns.length,\n    \"aria-rowcount\": headerGroupingMaxDepth + 1 + pinnedRowsCount + totalRowCount,\n    \"aria-multiselectable\": !rootProps.disableMultipleSelection,\n    \"aria-label\": rootProps['aria-label'],\n    \"aria-labelledby\": rootProps['aria-labelledby']\n  }, other, {\n    children: children\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridRoot.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport { GridRoot };","import * as React from 'react';\nexport function useGridLogger(apiRef, name) {\n  const logger = React.useRef(null);\n  if (logger.current) {\n    return logger.current;\n  }\n  const newLogger = apiRef.current.getLogger(name);\n  logger.current = newLogger;\n  return newLogger;\n}","import * as React from 'react';\nimport { unstable_composeClasses as composeClasses } from '@mui/material';\nimport { styled } from '@mui/material/styles';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['main']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridMainContainerRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'Main',\n  overridesResolver: (props, styles) => styles.main\n})(() => ({\n  position: 'relative',\n  flexGrow: 1,\n  display: 'flex',\n  flexDirection: 'column',\n  overflow: 'hidden'\n}));\nexport function GridMainContainer(props) {\n  const rootProps = useGridRootProps();\n  const classes = useUtilityClasses(rootProps);\n  return /*#__PURE__*/_jsx(GridMainContainerRoot, {\n    className: classes.root,\n    ownerState: rootProps,\n    children: props.children\n  });\n}","import * as React from 'react';\nexport class ErrorBoundary extends React.Component {\n  static getDerivedStateFromError(error) {\n    // Update state so the next render will show the fallback UI.\n    return {\n      hasError: true,\n      error\n    };\n  }\n  componentDidCatch(error, errorInfo) {\n    if (this.props.api.current) {\n      this.logError(error); // Allows to trigger the Error event and all listener can run on Error\n\n      this.props.api.current.showError({\n        error,\n        errorInfo\n      });\n    }\n  }\n  logError(error, errorInfo) {\n    this.props.logger.error(`An unexpected error occurred. Error: ${error && error.message}. `, error, errorInfo);\n  }\n  render() {\n    var _this$state;\n    if (this.props.hasError || (_this$state = this.state) != null && _this$state.hasError) {\n      // You can render any custom fallback UI\n      return this.props.render(this.state);\n    }\n    return this.props.children;\n  }\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { useGridLogger } from '../../hooks/utils/useGridLogger';\nimport { GridMainContainer } from '../containers/GridMainContainer';\nimport { ErrorBoundary } from '../ErrorBoundary';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction GridErrorHandler(props) {\n  const {\n    children\n  } = props;\n  const apiRef = useGridApiContext();\n  const logger = useGridLogger(apiRef, 'GridErrorHandler');\n  const rootProps = useGridRootProps();\n  const errorState = apiRef.current.state.error;\n  return /*#__PURE__*/_jsx(ErrorBoundary, {\n    hasError: errorState != null,\n    api: apiRef,\n    logger: logger,\n    render: errorProps => {\n      var _rootProps$components;\n      return /*#__PURE__*/_jsx(GridMainContainer, {\n        children: /*#__PURE__*/_jsx(rootProps.components.ErrorOverlay, _extends({}, errorProps, errorState, (_rootProps$components = rootProps.componentsProps) == null ? void 0 : _rootProps$components.errorOverlay))\n      });\n    },\n    children: children\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? GridErrorHandler.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  children: PropTypes.node\n} : void 0;\nexport { GridErrorHandler };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function GridHeaderPlaceholder() {\n  var _rootProps$components;\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const headerRef = React.useRef(null);\n  apiRef.current.headerRef = headerRef;\n  return /*#__PURE__*/_jsx(\"div\", {\n    ref: headerRef,\n    children: /*#__PURE__*/_jsx(rootProps.components.Header, _extends({}, (_rootProps$components = rootProps.componentsProps) == null ? void 0 : _rootProps$components.header))\n  });\n}","/**\n * Detect Element Resize.\n * https://github.com/sdecima/javascript-detect-element-resize\n * Sebastian Decima\n *\n * Forked from version 0.5.3; includes the following modifications:\n * 1) Guard against unsafe 'window' and 'document' references (to support SSR).\n * 2) Defer initialization code via a top-level function wrapper (to support SSR).\n * 3) Avoid unnecessary reflows by not measuring size for scroll events bubbling from children.\n * 4) Add nonce for style element.\n *\n * TODO replace with https://developer.mozilla.org/en-US/docs/Web/API/ResizeObserver\n * once browser support allows it.\n **/\nexport default function createDetectElementResize(nonce, hostWindow) {\n  var resetTriggers = function resetTriggers(element) {\n    var triggers = element.__resizeTriggers__,\n      expand = triggers.firstElementChild,\n      contract = triggers.lastElementChild,\n      expandChild = expand.firstElementChild;\n    contract.scrollLeft = contract.scrollWidth;\n    contract.scrollTop = contract.scrollHeight;\n    expandChild.style.width = expand.offsetWidth + 1 + 'px';\n    expandChild.style.height = expand.offsetHeight + 1 + 'px';\n    expand.scrollLeft = expand.scrollWidth;\n    expand.scrollTop = expand.scrollHeight;\n  };\n  var checkTriggers = function checkTriggers(element) {\n    return element.offsetWidth != element.__resizeLast__.width || element.offsetHeight != element.__resizeLast__.height;\n  };\n  var scrollListener = function scrollListener(e) {\n    // Don't measure (which forces) reflow for scrolls that happen inside of children!\n    if (e.target.className.indexOf('contract-trigger') < 0 && e.target.className.indexOf('expand-trigger') < 0) {\n      return;\n    }\n    var element = this;\n    resetTriggers(this);\n    if (this.__resizeRAF__) {\n      hostWindow.cancelAnimationFrame(this.__resizeRAF__);\n    }\n    this.__resizeRAF__ = hostWindow.requestAnimationFrame(function () {\n      if (checkTriggers(element)) {\n        element.__resizeLast__.width = element.offsetWidth;\n        element.__resizeLast__.height = element.offsetHeight;\n        element.__resizeListeners__.forEach(function (fn) {\n          fn.call(element, e);\n        });\n      }\n    });\n  };\n  /* Detect CSS Animations support to detect element display/re-attach */\n\n  var animation = false,\n    keyframeprefix = '',\n    animationstartevent = 'animationstart',\n    domPrefixes = 'Webkit Moz O ms'.split(' '),\n    startEvents = 'webkitAnimationStart animationstart oAnimationStart MSAnimationStart'.split(' '),\n    pfx = '';\n  {\n    var elm = document.createElement('fakeelement');\n    if (elm.style.animationName !== undefined) {\n      animation = true;\n    }\n    if (animation === false) {\n      for (var i = 0; i < domPrefixes.length; i++) {\n        if (elm.style[domPrefixes[i] + 'AnimationName'] !== undefined) {\n          pfx = domPrefixes[i];\n          keyframeprefix = '-' + pfx.toLowerCase() + '-';\n          animationstartevent = startEvents[i];\n          animation = true;\n          break;\n        }\n      }\n    }\n  }\n  var animationName = 'resizeanim';\n  var animationKeyframes = '@' + keyframeprefix + 'keyframes ' + animationName + ' { from { opacity: 0; } to { opacity: 0; } } ';\n  var animationStyle = keyframeprefix + 'animation: 1ms ' + animationName + '; ';\n  var createStyles = function createStyles(doc, root) {\n    if (!root.getElementById('muiDetectElementResize')) {\n      //opacity:0 works around a chrome bug https://code.google.com/p/chromium/issues/detail?id=286360\n      var css = (animationKeyframes ? animationKeyframes : '') + '.Mui-resizeTriggers { ' + (animationStyle ? animationStyle : '') + 'visibility: hidden; opacity: 0; } ' + '.Mui-resizeTriggers, .Mui-resizeTriggers > div, .contract-trigger:before { content: \" \"; display: block; position: absolute; top: 0; left: 0; height: 100%; width: 100%; overflow: hidden; z-index: -1; } .Mui-resizeTriggers > div { background: #eee; overflow: auto; } .contract-trigger:before { width: 200%; height: 200%; }',\n        container = root.constructor.name === 'ShadowRoot' ? root : doc.head || doc.getElementsByTagName('head')[0],\n        style = doc.createElement('style');\n      style.id = 'muiDetectElementResize';\n      style.type = 'text/css';\n      if (nonce != null) {\n        style.setAttribute('nonce', nonce);\n      }\n      if (style.styleSheet) {\n        style.styleSheet.cssText = css;\n      } else {\n        style.appendChild(doc.createTextNode(css));\n      }\n      container.appendChild(style);\n    }\n  };\n  var addResizeListener = function addResizeListener(element, fn) {\n    if (!element.__resizeTriggers__) {\n      var doc = element.ownerDocument;\n      var elementStyle = hostWindow.getComputedStyle(element);\n      if (elementStyle && elementStyle.position == 'static') {\n        element.style.position = 'relative';\n      }\n      createStyles(doc, element.getRootNode());\n      element.__resizeLast__ = {};\n      element.__resizeListeners__ = [];\n      (element.__resizeTriggers__ = doc.createElement('div')).className = 'Mui-resizeTriggers';\n      element.__resizeTriggers__.innerHTML = '<div class=\"expand-trigger\"><div></div></div>' + '<div class=\"contract-trigger\"></div>';\n      element.appendChild(element.__resizeTriggers__);\n      resetTriggers(element);\n      element.addEventListener('scroll', scrollListener, true);\n      /* Listen for a css animation to detect element display/re-attach */\n\n      if (animationstartevent) {\n        element.__resizeTriggers__.__animationListener__ = function animationListener(e) {\n          if (e.animationName == animationName) {\n            resetTriggers(element);\n          }\n        };\n        element.__resizeTriggers__.addEventListener(animationstartevent, element.__resizeTriggers__.__animationListener__);\n      }\n    }\n    element.__resizeListeners__.push(fn);\n  };\n  var removeResizeListener = function removeResizeListener(element, fn) {\n    element.__resizeListeners__.splice(element.__resizeListeners__.indexOf(fn), 1);\n    if (!element.__resizeListeners__.length) {\n      element.removeEventListener('scroll', scrollListener, true);\n      if (element.__resizeTriggers__.__animationListener__) {\n        element.__resizeTriggers__.removeEventListener(animationstartevent, element.__resizeTriggers__.__animationListener__);\n        element.__resizeTriggers__.__animationListener__ = null;\n      }\n      try {\n        element.__resizeTriggers__ = !element.removeChild(element.__resizeTriggers__);\n      } catch (e) {// Preact compat; see developit/preact-compat/issues/228\n      }\n    }\n  };\n  return {\n    addResizeListener,\n    removeResizeListener\n  };\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"children\", \"defaultHeight\", \"defaultWidth\", \"disableHeight\", \"disableWidth\", \"nonce\", \"onResize\", \"style\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { useForkRef, ownerWindow, useEventCallback, unstable_useEnhancedEffect as useEnhancedEffect } from '@mui/material/utils';\nimport createDetectElementResize from '../lib/createDetectElementResize'; // TODO replace with https://caniuse.com/resizeobserver.\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst GridAutoSizer = /*#__PURE__*/React.forwardRef(function AutoSizer(props, ref) {\n  const {\n      children,\n      defaultHeight = null,\n      defaultWidth = null,\n      disableHeight = false,\n      disableWidth = false,\n      nonce,\n      onResize,\n      style\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const [state, setState] = React.useState({\n    height: defaultHeight,\n    width: defaultWidth\n  });\n  const rootRef = React.useRef(null);\n  const parentElement = React.useRef(null);\n  const handleResize = useEventCallback(() => {\n    // Guard against AutoSizer component being removed from the DOM immediately after being added.\n    // This can result in invalid style values which can result in NaN values if we don't handle them.\n    // See issue #150 for more context.\n    if (parentElement.current) {\n      const height = parentElement.current.offsetHeight || 0;\n      const width = parentElement.current.offsetWidth || 0;\n      const win = ownerWindow(parentElement.current);\n      const computedStyle = win.getComputedStyle(parentElement.current);\n      const paddingLeft = parseInt(computedStyle.paddingLeft, 10) || 0;\n      const paddingRight = parseInt(computedStyle.paddingRight, 10) || 0;\n      const paddingTop = parseInt(computedStyle.paddingTop, 10) || 0;\n      const paddingBottom = parseInt(computedStyle.paddingBottom, 10) || 0;\n      const newHeight = height - paddingTop - paddingBottom;\n      const newWidth = width - paddingLeft - paddingRight;\n      if (!disableHeight && state.height !== newHeight || !disableWidth && state.width !== newWidth) {\n        setState({\n          height: newHeight,\n          width: newWidth\n        });\n        if (onResize) {\n          onResize({\n            height: newHeight,\n            width: newWidth\n          });\n        }\n      }\n    }\n  });\n  useEnhancedEffect(() => {\n    var _parentElement$curren;\n    parentElement.current = rootRef.current.parentElement;\n    if (!parentElement) {\n      return undefined;\n    }\n    const win = ownerWindow((_parentElement$curren = parentElement.current) != null ? _parentElement$curren : undefined);\n    const detectElementResize = createDetectElementResize(nonce, win);\n    detectElementResize.addResizeListener(parentElement.current, handleResize);\n    handleResize();\n    return () => {\n      detectElementResize.removeResizeListener(parentElement.current, handleResize);\n    };\n  }, [nonce, handleResize]); // Outer div should not force width/height since that may prevent containers from shrinking.\n  // Inner component should overflow and use calculated width/height.\n  // See issue #68 for more information.\n\n  const outerStyle = {\n    overflow: 'visible'\n  };\n  const childParams = {};\n  if (!disableHeight) {\n    outerStyle.height = 0;\n    childParams.height = state.height;\n  }\n  if (!disableWidth) {\n    outerStyle.width = 0;\n    childParams.width = state.width;\n  }\n  const handleRef = useForkRef(rootRef, ref);\n  return /*#__PURE__*/_jsx(\"div\", _extends({\n    ref: handleRef,\n    style: _extends({}, outerStyle, style)\n  }, other, {\n    children: state.height === null && state.width === null ? null : children(childParams)\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridAutoSizer.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n\n  /**\n   * Function responsible for rendering children.\n   * @param {AutoSizerSize} size The grid's size.\n   * @returns {React.ReactNode} The children to render.\n   */\n  children: PropTypes.func.isRequired,\n  /**\n   * Default height to use for initial render; useful for SSR.\n   * @default null\n   */\n  defaultHeight: PropTypes.number,\n  /**\n   * Default width to use for initial render; useful for SSR.\n   * @default null\n   */\n  defaultWidth: PropTypes.number,\n  /**\n   * If `true`, disable dynamic :height property.\n   * @default false\n   */\n  disableHeight: PropTypes.bool,\n  /**\n   * If `true`, disable dynamic :width property.\n   * @default false\n   */\n  disableWidth: PropTypes.bool,\n  /**\n   * Nonce of the inlined stylesheet for Content Security Policy.\n   */\n  nonce: PropTypes.string,\n  /**\n   * Callback to be invoked on-resize.\n   * @param {AutoSizerSize} size The grid's size.\n   */\n  onResize: PropTypes.func\n} : void 0;\nexport { GridAutoSizer };","import { createSelector } from '../../../utils/createSelector';\nimport { gridRowsLookupSelector } from '../rows/gridRowsSelector';\n/**\n * @category Sorting\n * @ignore - do not document.\n */\n\nexport const gridSortingStateSelector = state => state.sorting;\n/**\n * Get the id of the rows after the sorting process.\n * @category Sorting\n */\n\nexport const gridSortedRowIdsSelector = createSelector(gridSortingStateSelector, sortingState => sortingState.sortedRows);\n/**\n * Get the id and the model of the rows after the sorting process.\n * @category Sorting\n */\n\nexport const gridSortedRowEntriesSelector = createSelector(gridSortedRowIdsSelector, gridRowsLookupSelector, (sortedIds, idRowsLookup) => sortedIds.map(id => ({\n  id,\n  model: idRowsLookup[id]\n})));\n/**\n * Get the current sorting model.\n * @category Sorting\n */\n\nexport const gridSortModelSelector = createSelector(gridSortingStateSelector, sorting => sorting.sortModel);\n\n/**\n * @category Sorting\n * @ignore - do not document.\n */\nexport const gridSortColumnLookupSelector = createSelector(gridSortModelSelector, sortModel => {\n  const result = sortModel.reduce((res, sortItem, index) => {\n    res[sortItem.field] = {\n      sortDirection: sortItem.sort,\n      sortIndex: sortModel.length > 1 ? index + 1 : undefined\n    };\n    return res;\n  }, {});\n  return result;\n});","import { createSelector } from '../../../utils/createSelector';\nimport { gridSortedRowEntriesSelector } from '../sorting/gridSortingSelector';\nimport { gridColumnLookupSelector } from '../columns/gridColumnsSelector';\nimport { gridRowTreeDepthSelector, gridRowTreeSelector } from '../rows/gridRowsSelector';\n/**\n * @category Filtering\n */\n\nexport const gridFilterStateSelector = state => state.filter;\n/**\n * Get the current filter model.\n * @category Filtering\n */\n\nexport const gridFilterModelSelector = createSelector(gridFilterStateSelector, filterState => filterState.filterModel);\n/**\n * Get the current quick filter values.\n * @category Filtering\n */\n\nexport const gridQuickFilterValuesSelector = createSelector(gridFilterModelSelector, filterModel => filterModel.quickFilterValues);\n/**\n * @category Filtering\n * @ignore - do not document.\n */\n\nexport const gridVisibleRowsLookupSelector = createSelector(gridFilterStateSelector, filterState => filterState.visibleRowsLookup);\n/**\n * @category Filtering\n * @ignore - do not document.\n */\n\nexport const gridFilteredRowsLookupSelector = createSelector(gridFilterStateSelector, filterState => filterState.filteredRowsLookup);\n/**\n * @category Filtering\n * @ignore - do not document.\n */\n\nexport const gridFilteredDescendantCountLookupSelector = createSelector(gridFilterStateSelector, filterState => filterState.filteredDescendantCountLookup);\n/**\n * Get the id and the model of the rows accessible after the filtering process.\n * Does not contain the collapsed children.\n * @category Filtering\n */\n\nexport const gridVisibleSortedRowEntriesSelector = createSelector(gridVisibleRowsLookupSelector, gridSortedRowEntriesSelector, (visibleRowsLookup, sortedRows) => sortedRows.filter(row => visibleRowsLookup[row.id] !== false));\n/**\n * Get the id of the rows accessible after the filtering process.\n * Does not contain the collapsed children.\n * @category Filtering\n */\n\nexport const gridVisibleSortedRowIdsSelector = createSelector(gridVisibleSortedRowEntriesSelector, visibleSortedRowEntries => visibleSortedRowEntries.map(row => row.id));\n/**\n * Get the id and the model of the rows accessible after the filtering process.\n * Contains the collapsed children.\n * @category Filtering\n */\n\nexport const gridFilteredSortedRowEntriesSelector = createSelector(gridFilteredRowsLookupSelector, gridSortedRowEntriesSelector, (filteredRowsLookup, sortedRows) => sortedRows.filter(row => filteredRowsLookup[row.id] !== false));\n/**\n * Get the id of the rows accessible after the filtering process.\n * Contains the collapsed children.\n * @category Filtering\n */\n\nexport const gridFilteredSortedRowIdsSelector = createSelector(gridFilteredSortedRowEntriesSelector, filteredSortedRowEntries => filteredSortedRowEntries.map(row => row.id));\n/**\n * @category Filtering\n * @deprecated Use `gridVisibleSortedRowIdsSelector` instead\n * @ignore - do not document.\n * TODO: Add deprecation warning once we have the new selectors without the \"visible\" keyword.\n */\n\nexport const gridVisibleRowsSelector = gridVisibleSortedRowIdsSelector;\n/**\n * Get the id and the model of the top level rows accessible after the filtering process.\n * @category Filtering\n */\n\nexport const gridVisibleSortedTopLevelRowEntriesSelector = createSelector(gridVisibleSortedRowEntriesSelector, gridRowTreeSelector, gridRowTreeDepthSelector, (visibleSortedRows, rowTree, rowTreeDepth) => {\n  if (rowTreeDepth < 2) {\n    return visibleSortedRows;\n  }\n  return visibleSortedRows.filter(row => {\n    var _rowTree$row$id;\n    return ((_rowTree$row$id = rowTree[row.id]) == null ? void 0 : _rowTree$row$id.depth) === 0;\n  });\n});\n/**\n * Get the amount of rows accessible after the filtering process.\n * @category Filtering\n */\n\nexport const gridVisibleRowCountSelector = createSelector(gridVisibleSortedRowEntriesSelector, visibleSortedRows => visibleSortedRows.length);\n/**\n * Get the amount of top level rows accessible after the filtering process.\n * @category Filtering\n */\n\nexport const gridVisibleTopLevelRowCountSelector = createSelector(gridVisibleSortedTopLevelRowEntriesSelector, visibleSortedTopLevelRows => visibleSortedTopLevelRows.length);\n/**\n * @category Filtering\n * @ignore - do not document.\n */\n\nexport const gridFilterActiveItemsSelector = createSelector(gridFilterModelSelector, gridColumnLookupSelector, (filterModel, columnLookup) => {\n  var _filterModel$items;\n  return (_filterModel$items = filterModel.items) == null ? void 0 : _filterModel$items.filter(item => {\n    var _column$filterOperato, _item$value;\n    if (!item.columnField) {\n      return false;\n    }\n    const column = columnLookup[item.columnField];\n    if (!(column != null && column.filterOperators) || (column == null ? void 0 : (_column$filterOperato = column.filterOperators) == null ? void 0 : _column$filterOperato.length) === 0) {\n      return false;\n    }\n    const filterOperator = column.filterOperators.find(operator => operator.value === item.operatorValue);\n    if (!filterOperator) {\n      return false;\n    }\n    return !filterOperator.InputComponent || item.value != null && ((_item$value = item.value) == null ? void 0 : _item$value.toString()) !== '';\n  });\n});\n\n/**\n * @category Filtering\n * @ignore - do not document.\n */\nexport const gridFilterActiveItemsLookupSelector = createSelector(gridFilterActiveItemsSelector, activeFilters => {\n  const result = activeFilters.reduce((res, filterItem) => {\n    if (!res[filterItem.columnField]) {\n      res[filterItem.columnField] = [filterItem];\n    } else {\n      res[filterItem.columnField].push(filterItem);\n    }\n    return res;\n  }, {});\n  return result;\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { unstable_useEnhancedEffect as useEnhancedEffect } from '@mui/material/utils';\nimport { useGridSelector } from '../../hooks/utils/useGridSelector';\nimport { gridVisibleRowCountSelector } from '../../hooks/features/filter/gridFilterSelector';\nimport { gridRowCountSelector, gridRowsLoadingSelector } from '../../hooks/features/rows/gridRowsSelector';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { gridDensityTotalHeaderHeightSelector } from '../../hooks/features/density/densitySelector';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction GridOverlayWrapper(props) {\n  var _viewportInnerSize$he, _viewportInnerSize$wi;\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const totalHeaderHeight = useGridSelector(apiRef, gridDensityTotalHeaderHeightSelector);\n  const [viewportInnerSize, setViewportInnerSize] = React.useState(() => {\n    var _apiRef$current$getRo, _apiRef$current$getRo2;\n    return (_apiRef$current$getRo = (_apiRef$current$getRo2 = apiRef.current.getRootDimensions()) == null ? void 0 : _apiRef$current$getRo2.viewportInnerSize) != null ? _apiRef$current$getRo : null;\n  });\n  const handleViewportSizeChange = React.useCallback(() => {\n    var _apiRef$current$getRo3, _apiRef$current$getRo4;\n    setViewportInnerSize((_apiRef$current$getRo3 = (_apiRef$current$getRo4 = apiRef.current.getRootDimensions()) == null ? void 0 : _apiRef$current$getRo4.viewportInnerSize) != null ? _apiRef$current$getRo3 : null);\n  }, [apiRef]);\n  useEnhancedEffect(() => {\n    return apiRef.current.subscribeEvent('viewportInnerSizeChange', handleViewportSizeChange);\n  }, [apiRef, handleViewportSizeChange]);\n  let height = (_viewportInnerSize$he = viewportInnerSize == null ? void 0 : viewportInnerSize.height) != null ? _viewportInnerSize$he : 0;\n  if (rootProps.autoHeight && height === 0) {\n    height = 'auto';\n  }\n  if (!viewportInnerSize) {\n    return null;\n  }\n  return /*#__PURE__*/_jsx(\"div\", _extends({\n    style: {\n      height,\n      width: (_viewportInnerSize$wi = viewportInnerSize == null ? void 0 : viewportInnerSize.width) != null ? _viewportInnerSize$wi : 0,\n      position: 'absolute',\n      top: totalHeaderHeight,\n      bottom: height === 'auto' ? 0 : undefined\n    }\n  }, props));\n}\nexport function GridOverlays() {\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const totalRowCount = useGridSelector(apiRef, gridRowCountSelector);\n  const visibleRowCount = useGridSelector(apiRef, gridVisibleRowCountSelector);\n  const loading = useGridSelector(apiRef, gridRowsLoadingSelector);\n  const showNoRowsOverlay = !loading && totalRowCount === 0;\n  const showNoResultsOverlay = !loading && totalRowCount > 0 && visibleRowCount === 0;\n  let overlay = null;\n  if (showNoRowsOverlay) {\n    var _rootProps$components;\n    overlay = /*#__PURE__*/_jsx(rootProps.components.NoRowsOverlay, _extends({}, (_rootProps$components = rootProps.componentsProps) == null ? void 0 : _rootProps$components.noRowsOverlay));\n  }\n  if (showNoResultsOverlay) {\n    var _rootProps$components2;\n    overlay = /*#__PURE__*/_jsx(rootProps.components.NoResultsOverlay, _extends({}, (_rootProps$components2 = rootProps.componentsProps) == null ? void 0 : _rootProps$components2.noResultsOverlay));\n  }\n  if (loading) {\n    var _rootProps$components3;\n    overlay = /*#__PURE__*/_jsx(rootProps.components.LoadingOverlay, _extends({}, (_rootProps$components3 = rootProps.componentsProps) == null ? void 0 : _rootProps$components3.loadingOverlay));\n  }\n  if (overlay === null) {\n    return null;\n  }\n  return /*#__PURE__*/_jsx(GridOverlayWrapper, {\n    children: overlay\n  });\n}","import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { GridMainContainer } from '../containers/GridMainContainer';\nimport { GridAutoSizer } from '../GridAutoSizer';\nimport { GridOverlays } from './GridOverlays';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { useGridSelector } from '../../hooks/utils/useGridSelector';\nimport { gridDensityTotalHeaderHeightSelector } from '../../hooks/features/density/densitySelector';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction GridBody(props) {\n  const {\n    children,\n    VirtualScrollerComponent,\n    ColumnHeadersComponent\n  } = props;\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const totalHeaderHeight = useGridSelector(apiRef, gridDensityTotalHeaderHeightSelector);\n  const [isVirtualizationDisabled, setIsVirtualizationDisabled] = React.useState(rootProps.disableVirtualization);\n  const disableVirtualization = React.useCallback(() => {\n    setIsVirtualizationDisabled(true);\n  }, []);\n  const enableVirtualization = React.useCallback(() => {\n    setIsVirtualizationDisabled(false);\n  }, []);\n  React.useEffect(() => {\n    setIsVirtualizationDisabled(rootProps.disableVirtualization);\n  }, [rootProps.disableVirtualization]); // The `useGridApiMethod` hook can't be used here, because it only installs the\n  // method if it doesn't exist yet. Once installed, it's never updated again.\n  // This break the methods above, since their closure comes from the first time\n  // they were installed. Which means that calling `setIsVirtualizationDisabled`\n  // will trigger a re-render, but it won't update the state. That can be solved\n  // by migrating the virtualization status to the global state.\n\n  apiRef.current.unstable_disableVirtualization = disableVirtualization;\n  apiRef.current.unstable_enableVirtualization = enableVirtualization;\n  const columnHeadersRef = React.useRef(null);\n  const columnsContainerRef = React.useRef(null);\n  const windowRef = React.useRef(null);\n  const renderingZoneRef = React.useRef(null);\n  apiRef.current.columnHeadersContainerElementRef = columnsContainerRef;\n  apiRef.current.columnHeadersElementRef = columnHeadersRef;\n  apiRef.current.windowRef = windowRef; // TODO rename, it's not attached to the window anymore\n\n  apiRef.current.renderingZoneRef = renderingZoneRef; // TODO remove, nobody should have access to internal parts of the virtualization\n\n  const handleResize = React.useCallback(size => {\n    apiRef.current.publishEvent('resize', size);\n  }, [apiRef]);\n  return /*#__PURE__*/_jsxs(GridMainContainer, {\n    children: [/*#__PURE__*/_jsx(GridOverlays, {}), /*#__PURE__*/_jsx(ColumnHeadersComponent, {\n      ref: columnsContainerRef,\n      innerRef: columnHeadersRef\n    }), /*#__PURE__*/_jsx(GridAutoSizer, {\n      nonce: rootProps.nonce,\n      disableHeight: rootProps.autoHeight,\n      onResize: handleResize,\n      children: size => {\n        const style = {\n          width: size.width,\n          // If `autoHeight` is on, there will be no height value.\n          // In this case, let the container to grow whatever it needs.\n          height: size.height ? size.height - totalHeaderHeight : 'auto',\n          marginTop: totalHeaderHeight\n        };\n        return /*#__PURE__*/_jsx(VirtualScrollerComponent, {\n          ref: windowRef,\n          style: style,\n          disableVirtualization: isVirtualizationDisabled\n        });\n      }\n    }), children]\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? GridBody.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  children: PropTypes.node,\n  ColumnHeadersComponent: PropTypes.elementType.isRequired,\n  VirtualScrollerComponent: PropTypes.elementType.isRequired\n} : void 0;\nexport { GridBody };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function GridFooterPlaceholder() {\n  var _rootProps$components;\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const footerRef = React.useRef(null);\n  apiRef.current.footerRef = footerRef;\n  if (rootProps.hideFooter) {\n    return null;\n  }\n  return /*#__PURE__*/_jsx(\"div\", {\n    ref: footerRef,\n    children: /*#__PURE__*/_jsx(rootProps.components.Footer, _extends({}, (_rootProps$components = rootProps.componentsProps) == null ? void 0 : _rootProps$components.footer))\n  });\n}","import * as React from 'react';\nimport { GridApiContext } from '../components/GridApiContext';\nimport { GridRootPropsContext } from './GridRootPropsContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const GridContextProvider = _ref => {\n  let {\n    apiRef,\n    props,\n    children\n  } = _ref;\n  return /*#__PURE__*/_jsx(GridRootPropsContext.Provider, {\n    value: props,\n    children: /*#__PURE__*/_jsx(GridApiContext.Provider, {\n      value: apiRef,\n      children: children\n    })\n  });\n};","import \"core-js/modules/es.regexp.flags.js\";\nexport function isNumber(value) {\n  return typeof value === 'number';\n}\nexport function isFunction(value) {\n  return typeof value === 'function';\n}\nexport function isObject(value) {\n  return typeof value === 'object' && value !== null;\n}\nexport function localStorageAvailable() {\n  try {\n    // Incognito mode might reject access to the localStorage for security reasons.\n    // window isn't defined on Node.js\n    // https://stackoverflow.com/questions/16427636/check-if-localstorage-is-available\n    const key = '__some_random_key_you_are_not_going_to_use__';\n    window.localStorage.setItem(key, key);\n    window.localStorage.removeItem(key);\n    return true;\n  } catch (err) {\n    return false;\n  }\n}\nexport function escapeRegExp(value) {\n  return value.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, '\\\\$&');\n}\n/**\n * Follows the CSS specification behavior for min and max\n * If min > max, then the min have priority\n */\n\nexport const clamp = (value, min, max) => Math.max(min, Math.min(max, value));\n/**\n * Based on `fast-deep-equal`\n *\n *  MIT License\n *\n * Copyright (c) 2017 Evgeny Poberezkin\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n * We only type the public interface to avoid dozens of `as` in the function.\n */\n\nexport function isDeepEqual(a, b) {\n  if (a === b) {\n    return true;\n  }\n  if (a && b && typeof a === 'object' && typeof b === 'object') {\n    if (a.constructor !== b.constructor) {\n      return false;\n    }\n    if (Array.isArray(a)) {\n      const length = a.length;\n      if (length !== b.length) {\n        return false;\n      }\n      for (let i = 0; i < length; i += 1) {\n        if (!isDeepEqual(a[i], b[i])) {\n          return false;\n        }\n      }\n      return true;\n    }\n    if (a instanceof Map && b instanceof Map) {\n      if (a.size !== b.size) {\n        return false;\n      }\n      const entriesA = Array.from(a.entries());\n      for (let i = 0; i < entriesA.length; i += 1) {\n        if (!b.has(entriesA[i][0])) {\n          return false;\n        }\n      }\n      for (let i = 0; i < entriesA.length; i += 1) {\n        const entryA = entriesA[i];\n        if (!isDeepEqual(entryA[1], b.get(entryA[0]))) {\n          return false;\n        }\n      }\n      return true;\n    }\n    if (a instanceof Set && b instanceof Set) {\n      if (a.size !== b.size) {\n        return false;\n      }\n      const entries = Array.from(a.entries());\n      for (let i = 0; i < entries.length; i += 1) {\n        if (!b.has(entries[i][0])) {\n          return false;\n        }\n      }\n      return true;\n    }\n    if (ArrayBuffer.isView(a) && ArrayBuffer.isView(b)) {\n      const length = a.length;\n      if (length !== b.length) {\n        return false;\n      }\n      for (let i = 0; i < length; i += 1) {\n        if (a[i] !== b[i]) {\n          return false;\n        }\n      }\n      return true;\n    }\n    if (a.constructor === RegExp) {\n      return a.source === b.source && a.flags === b.flags;\n    }\n    if (a.valueOf !== Object.prototype.valueOf) {\n      return a.valueOf() === b.valueOf();\n    }\n    if (a.toString !== Object.prototype.toString) {\n      return a.toString() === b.toString();\n    }\n    const keys = Object.keys(a);\n    const length = keys.length;\n    if (length !== Object.keys(b).length) {\n      return false;\n    }\n    for (let i = 0; i < length; i += 1) {\n      if (!Object.prototype.hasOwnProperty.call(b, keys[i])) {\n        return false;\n      }\n    }\n    for (let i = 0; i < length; i += 1) {\n      const key = keys[i];\n      if (!isDeepEqual(a[key], b[key])) {\n        return false;\n      }\n    }\n    return true;\n  } // true if both NaN, false otherwise\n  // eslint-disable-next-line no-self-compare\n\n  return a !== a && b !== b;\n} // Pseudo random number. See https://stackoverflow.com/a/47593316\n\nfunction mulberry32(a) {\n  return () => {\n    /* eslint-disable */\n    let t = a += 0x6d2b79f5;\n    t = Math.imul(t ^ t >>> 15, t | 1);\n    t ^= t + Math.imul(t ^ t >>> 7, t | 61);\n    return ((t ^ t >>> 14) >>> 0) / 4294967296;\n    /* eslint-enable */\n  };\n}\nexport function randomNumberBetween(seed, min, max) {\n  const random = mulberry32(seed);\n  return () => min + (max - min) * random();\n}\nexport function deepClone(obj) {\n  if (typeof structuredClone === 'function') {\n    return structuredClone(obj);\n  }\n  return JSON.parse(JSON.stringify(obj));\n}","import * as React from 'react';\nimport { localStorageAvailable } from '../../utils/utils';\nconst forceDebug = localStorageAvailable() && window.localStorage.getItem('DEBUG') != null;\nconst noop = () => {};\nconst noopLogger = {\n  debug: noop,\n  info: noop,\n  warn: noop,\n  error: noop\n};\nconst LOG_LEVELS = ['debug', 'info', 'warn', 'error'];\nfunction getAppender(name, logLevel) {\n  let appender = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : console;\n  const minLogLevelIdx = LOG_LEVELS.indexOf(logLevel);\n  if (minLogLevelIdx === -1) {\n    throw new Error(`MUI: Log level ${logLevel} not recognized.`);\n  }\n  const logger = LOG_LEVELS.reduce((loggerObj, method, idx) => {\n    if (idx >= minLogLevelIdx) {\n      loggerObj[method] = function () {\n        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n          args[_key] = arguments[_key];\n        }\n        const [message, ...other] = args;\n        appender[method](`MUI: ${name} - ${message}`, ...other);\n      };\n    } else {\n      loggerObj[method] = noop;\n    }\n    return loggerObj;\n  }, {});\n  return logger;\n}\nexport const useGridLoggerFactory = (apiRef, props) => {\n  apiRef.current.getLogger = React.useCallback(name => {\n    if (forceDebug) {\n      return getAppender(name, 'debug', props.logger);\n    }\n    if (!props.logLevel) {\n      return noopLogger;\n    }\n    return getAppender(name, props.logLevel.toString(), props.logger);\n  }, [props.logLevel, props.logger]);\n};","import * as React from 'react';\nexport function useGridApiMethod(apiRef, apiMethods,\n// TODO: Remove `apiName\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\napiName) {\n  const apiMethodsRef = React.useRef(apiMethods);\n  const [apiMethodsNames] = React.useState(Object.keys(apiMethods));\n  const installMethods = React.useCallback(() => {\n    if (!apiRef.current) {\n      return;\n    }\n    apiMethodsNames.forEach(methodName => {\n      if (!apiRef.current.hasOwnProperty(methodName)) {\n        apiRef.current[methodName] = function () {\n          return apiMethodsRef.current[methodName](...arguments);\n        };\n      }\n    });\n  }, [apiMethodsNames, apiRef]);\n  React.useEffect(() => {\n    apiMethodsRef.current = apiMethods;\n  }, [apiMethods]);\n  React.useEffect(() => {\n    installMethods();\n  }, [installMethods]);\n  installMethods();\n}","// If no effect ran after this amount of time, we assume that the render was not committed by React\nconst CLEANUP_TIMER_LOOP_MILLIS = 1000;\nexport class TimerBasedCleanupTracking {\n  constructor() {\n    let timeout = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : CLEANUP_TIMER_LOOP_MILLIS;\n    this.timeouts = new Map();\n    this.cleanupTimeout = CLEANUP_TIMER_LOOP_MILLIS;\n    this.cleanupTimeout = timeout;\n  }\n  register(object, unsubscribe, unregisterToken) {\n    if (!this.timeouts) {\n      this.timeouts = new Map();\n    }\n    const timeout = setTimeout(() => {\n      if (typeof unsubscribe === 'function') {\n        unsubscribe();\n      }\n      this.timeouts.delete(unregisterToken.cleanupToken);\n    }, this.cleanupTimeout);\n    this.timeouts.set(unregisterToken.cleanupToken, timeout);\n  }\n  unregister(unregisterToken) {\n    const timeout = this.timeouts.get(unregisterToken.cleanupToken);\n    if (timeout) {\n      this.timeouts.delete(unregisterToken.cleanupToken);\n      clearTimeout(timeout);\n    }\n  }\n  reset() {\n    if (this.timeouts) {\n      this.timeouts.forEach((value, key) => {\n        this.unregister({\n          cleanupToken: key\n        });\n      });\n      this.timeouts = undefined;\n    }\n  }\n}","export class FinalizationRegistryBasedCleanupTracking {\n  constructor() {\n    this.registry = new FinalizationRegistry(unsubscribe => {\n      if (typeof unsubscribe === 'function') {\n        unsubscribe();\n      }\n    });\n  }\n  register(object, unsubscribe, unregisterToken) {\n    this.registry.register(object, unsubscribe, unregisterToken);\n  }\n  unregister(unregisterToken) {\n    this.registry.unregister(unregisterToken);\n  } // eslint-disable-next-line class-methods-use-this\n\n  reset() {}\n}","import * as React from 'react';\nimport { TimerBasedCleanupTracking } from '../../utils/cleanupTracking/TimerBasedCleanupTracking';\nimport { FinalizationRegistryBasedCleanupTracking } from '../../utils/cleanupTracking/FinalizationRegistryBasedCleanupTracking';\n\n/**\n * Signal to the underlying logic what version of the public component API\n * of the data grid is exposed.\n */\nvar GridSignature;\n(function (GridSignature) {\n  GridSignature[\"DataGrid\"] = \"DataGrid\";\n  GridSignature[\"DataGridPro\"] = \"DataGridPro\";\n})(GridSignature || (GridSignature = {}));\n\n// We use class to make it easier to detect in heap snapshots by name\nclass ObjectToBeRetainedByReact {} // Based on https://github.com/Bnaya/use-dispose-uncommitted/blob/main/src/finalization-registry-based-impl.ts\n// Check https://github.com/facebook/react/issues/15317 to get more information\n\nexport function createUseGridApiEventHandler(registryContainer) {\n  let cleanupTokensCounter = 0;\n  return function useGridApiEventHandler(apiRef, eventName, handler, options) {\n    if (registryContainer.registry === null) {\n      registryContainer.registry = typeof FinalizationRegistry !== 'undefined' ? new FinalizationRegistryBasedCleanupTracking() : new TimerBasedCleanupTracking();\n    }\n    const [objectRetainedByReact] = React.useState(new ObjectToBeRetainedByReact());\n    const subscription = React.useRef(null);\n    const handlerRef = React.useRef();\n    handlerRef.current = handler;\n    const cleanupTokenRef = React.useRef(null);\n    if (!subscription.current && handlerRef.current) {\n      const enhancedHandler = (params, event, details) => {\n        if (!event.defaultMuiPrevented) {\n          var _handlerRef$current;\n          (_handlerRef$current = handlerRef.current) == null ? void 0 : _handlerRef$current.call(handlerRef, params, event, details);\n        }\n      };\n      subscription.current = apiRef.current.subscribeEvent(eventName, enhancedHandler, options);\n      cleanupTokensCounter += 1;\n      cleanupTokenRef.current = {\n        cleanupToken: cleanupTokensCounter\n      };\n      registryContainer.registry.register(objectRetainedByReact,\n      // The callback below will be called once this reference stops being retained\n      () => {\n        var _subscription$current;\n        (_subscription$current = subscription.current) == null ? void 0 : _subscription$current.call(subscription);\n        subscription.current = null;\n        cleanupTokenRef.current = null;\n      }, cleanupTokenRef.current);\n    } else if (!handlerRef.current && subscription.current) {\n      subscription.current();\n      subscription.current = null;\n      if (cleanupTokenRef.current) {\n        registryContainer.registry.unregister(cleanupTokenRef.current);\n        cleanupTokenRef.current = null;\n      }\n    }\n    React.useEffect(() => {\n      if (!subscription.current && handlerRef.current) {\n        const enhancedHandler = (params, event, details) => {\n          if (!event.defaultMuiPrevented) {\n            var _handlerRef$current2;\n            (_handlerRef$current2 = handlerRef.current) == null ? void 0 : _handlerRef$current2.call(handlerRef, params, event, details);\n          }\n        };\n        subscription.current = apiRef.current.subscribeEvent(eventName, enhancedHandler, options);\n      }\n      if (cleanupTokenRef.current && registryContainer.registry) {\n        // If the effect was called, it means that this render was committed\n        // so we can trust the cleanup function to remove the listener.\n        registryContainer.registry.unregister(cleanupTokenRef.current);\n        cleanupTokenRef.current = null;\n      }\n      return () => {\n        var _subscription$current2;\n        (_subscription$current2 = subscription.current) == null ? void 0 : _subscription$current2.call(subscription);\n        subscription.current = null;\n      };\n    }, [apiRef, eventName, options]);\n  };\n}\nconst registryContainer = {\n  registry: null\n}; // TODO: move to @mui/x-data-grid/internals\n// eslint-disable-next-line @typescript-eslint/naming-convention\n\nexport const unstable_resetCleanupTracking = () => {\n  var _registryContainer$re;\n  (_registryContainer$re = registryContainer.registry) == null ? void 0 : _registryContainer$re.reset();\n  registryContainer.registry = null;\n};\nexport const useGridApiEventHandler = createUseGridApiEventHandler(registryContainer);\nconst optionsSubscriberOptions = {\n  isFirst: true\n};\nexport function useGridApiOptionHandler(apiRef, eventName, handler) {\n  // Validate that only one per event name?\n  useGridApiEventHandler(apiRef, eventName, handler, optionsSubscriberOptions);\n}\nexport { GridSignature };","// Used https://gist.github.com/mudge/5830382 as a starting point.\n// See https://github.com/browserify/events/blob/master/events.js for\n// the Node.js (https://nodejs.org/api/events.html) polyfill used by webpack.\nexport class EventManager {\n  constructor() {\n    this.maxListeners = 10;\n    this.warnOnce = false;\n    this.events = {};\n  }\n  on(eventName, listener) {\n    let options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    let collection = this.events[eventName];\n    if (!collection) {\n      collection = {\n        highPriority: new Map(),\n        regular: new Map()\n      };\n      this.events[eventName] = collection;\n    }\n    if (options.isFirst) {\n      collection.highPriority.set(listener, true);\n    } else {\n      collection.regular.set(listener, true);\n    }\n    if (process.env.NODE_ENV !== 'production') {\n      const collectionSize = collection.highPriority.size + collection.regular.size;\n      if (collectionSize > this.maxListeners && !this.warnOnce) {\n        this.warnOnce = true;\n        console.warn([`Possible EventEmitter memory leak detected. ${collectionSize} ${eventName} listeners added.`, `Use emitter.setMaxListeners() to increase limit.`].join('\\n'));\n      }\n    }\n  }\n  removeListener(eventName, listener) {\n    if (this.events[eventName]) {\n      this.events[eventName].regular.delete(listener);\n      this.events[eventName].highPriority.delete(listener);\n    }\n  }\n  removeAllListeners() {\n    this.events = {};\n  }\n  emit(eventName) {\n    const collection = this.events[eventName];\n    if (!collection) {\n      return;\n    }\n    const highPriorityListeners = Array.from(collection.highPriority.keys());\n    const regularListeners = Array.from(collection.regular.keys());\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n    for (let i = highPriorityListeners.length - 1; i >= 0; i -= 1) {\n      const listener = highPriorityListeners[i];\n      if (collection.highPriority.has(listener)) {\n        listener.apply(this, args);\n      }\n    }\n    for (let i = 0; i < regularListeners.length; i += 1) {\n      const listener = regularListeners[i];\n      if (collection.regular.has(listener)) {\n        listener.apply(this, args);\n      }\n    }\n  }\n  once(eventName, listener) {\n    // eslint-disable-next-line consistent-this\n    const that = this;\n    this.on(eventName, function oneTimeListener() {\n      that.removeListener(eventName, oneTimeListener);\n      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        args[_key2] = arguments[_key2];\n      }\n      listener.apply(that, args);\n    });\n  }\n}","import * as React from 'react';\nimport { useGridApiMethod } from '../utils/useGridApiMethod';\nimport { GridSignature } from '../utils/useGridApiEventHandler';\nimport { EventManager } from '../../utils/EventManager';\nimport { unstable_resetCreateSelectorCache } from '../../utils/createSelector';\nconst isSyntheticEvent = event => {\n  return event.isPropagationStopped !== undefined;\n};\nlet globalId = 0;\nexport function useGridApiInitialization(inputApiRef, props) {\n  const apiRef = React.useRef();\n  if (!apiRef.current) {\n    apiRef.current = {\n      unstable_eventManager: new EventManager(),\n      unstable_caches: {},\n      state: {},\n      instanceId: globalId\n    };\n    globalId += 1;\n  }\n  React.useImperativeHandle(inputApiRef, () => apiRef.current, [apiRef]);\n  const publishEvent = React.useCallback(function () {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    const [name, params, event = {}] = args;\n    event.defaultMuiPrevented = false;\n    if (isSyntheticEvent(event) && event.isPropagationStopped()) {\n      return;\n    }\n    const details = props.signature === GridSignature.DataGridPro ? {\n      api: apiRef.current\n    } : {};\n    apiRef.current.unstable_eventManager.emit(name, params, event, details);\n  }, [apiRef, props.signature]);\n  const subscribeEvent = React.useCallback((event, handler, options) => {\n    apiRef.current.unstable_eventManager.on(event, handler, options);\n    const api = apiRef.current;\n    return () => {\n      api.unstable_eventManager.removeListener(event, handler);\n    };\n  }, [apiRef]);\n  const showError = React.useCallback(args => {\n    apiRef.current.publishEvent('componentError', args);\n  }, [apiRef]);\n  useGridApiMethod(apiRef, {\n    subscribeEvent,\n    publishEvent,\n    showError\n  }, 'GridCoreApi');\n  React.useEffect(() => {\n    const api = apiRef.current;\n    return () => {\n      unstable_resetCreateSelectorCache(api.instanceId);\n      api.publishEvent('unmount');\n    };\n  }, [apiRef]);\n  return apiRef;\n}","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _toPropertyKey from \"@babel/runtime/helpers/esm/toPropertyKey\";\nimport * as React from 'react';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\n\n/**\n * Implement the Pipeline Pattern\n *\n * More information and detailed example in (TODO add link to technical doc when ready)\n *\n * Some plugins contains custom logic to enrich data provided by other plugins or components.\n * For instance, the row grouping plugin needs to add / remove the grouping columns when the grid columns are updated.\n *\n * =====================================================================================================================\n *\n * The plugin containing the custom logic must use:\n *\n * - `useGridRegisterPipeProcessor` to register their processor.\n *\n * - `apiRef.current.unstable_requestPipeProcessorsApplication` to imperatively re-apply a group.\n *   This method should be used in last resort.\n *   Most of the time, the application should be triggered by an update on the deps of the processor.\n *\n * =====================================================================================================================\n *\n * The plugin or component that needs to enrich its data must use:\n *\n * - `apiRef.current.unstable_applyPipeProcessors` to run in chain all the processors of a given group.\n *\n * - `useGridRegisterPipeApplier` to re-apply the whole pipe when requested.\n *   The applier will be called when:\n *   * a processor is registered.\n *   * `apiRef.current.unstable_requestPipeProcessorsApplication` is called for the given group.\n */\nexport const useGridPipeProcessing = apiRef => {\n  const processorsCache = React.useRef({});\n  const runAppliers = React.useCallback(groupCache => {\n    if (!groupCache) {\n      return;\n    }\n    Object.values(groupCache.appliers).forEach(callback => {\n      callback();\n    });\n  }, []);\n  const registerPipeProcessor = React.useCallback((group, id, processor) => {\n    if (!processorsCache.current[group]) {\n      processorsCache.current[group] = {\n        processors: new Map(),\n        appliers: {}\n      };\n    }\n    const groupCache = processorsCache.current[group];\n    const oldProcessor = groupCache.processors.get(id);\n    if (oldProcessor !== processor) {\n      groupCache.processors.set(id, processor);\n      runAppliers(groupCache);\n    }\n    return () => {\n      processorsCache.current[group].processors.set(id, null);\n    };\n  }, [runAppliers]);\n  const registerPipeApplier = React.useCallback((group, id, applier) => {\n    if (!processorsCache.current[group]) {\n      processorsCache.current[group] = {\n        processors: new Map(),\n        appliers: {}\n      };\n    }\n    processorsCache.current[group].appliers[id] = applier;\n    return () => {\n      const _appliers = processorsCache.current[group].appliers,\n        otherAppliers = _objectWithoutPropertiesLoose(_appliers, [id].map(_toPropertyKey));\n      processorsCache.current[group].appliers = otherAppliers;\n    };\n  }, []);\n  const requestPipeProcessorsApplication = React.useCallback(group => {\n    const groupCache = processorsCache.current[group];\n    runAppliers(groupCache);\n  }, [runAppliers]);\n  const applyPipeProcessors = React.useCallback(function () {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    const [group, value, context] = args;\n    if (!processorsCache.current[group]) {\n      return value;\n    }\n    const preProcessors = Array.from(processorsCache.current[group].processors.values());\n    return preProcessors.reduce((acc, preProcessor) => {\n      if (!preProcessor) {\n        return acc;\n      }\n      return preProcessor(acc, context);\n    }, value);\n  }, []);\n  const preProcessingApi = {\n    unstable_registerPipeProcessor: registerPipeProcessor,\n    unstable_registerPipeApplier: registerPipeApplier,\n    unstable_requestPipeProcessorsApplication: requestPipeProcessorsApplication,\n    unstable_applyPipeProcessors: applyPipeProcessors\n  };\n  useGridApiMethod(apiRef, preProcessingApi, 'GridPipeProcessingApi');\n};","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _toPropertyKey from \"@babel/runtime/helpers/esm/toPropertyKey\";\nimport * as React from 'react';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nexport const GRID_DEFAULT_STRATEGY = 'none';\nexport const GRID_STRATEGIES_PROCESSORS = {\n  rowTreeCreation: 'rowTree',\n  filtering: 'rowTree',\n  sorting: 'rowTree'\n};\n\n/**\n * Implements a variant of the Strategy Pattern (see https://en.wikipedia.org/wiki/Strategy_pattern)\n *\n * More information and detailed example in (TODO add link to technical doc when ready)\n *\n * Some plugins contains custom logic that must only be applied if the right strategy is active.\n * For instance, the row grouping plugin has a custom filtering algorithm.\n * This algorithm must be applied by the filtering plugin if the row grouping is the current way of grouping rows,\n * but not if the tree data is the current way of grouping rows.\n *\n * =====================================================================================================================\n *\n * The plugin containing the custom logic must use:\n *\n * - `useGridRegisterStrategyProcessor` to register their processor.\n *   When the processor of the active strategy changes, it will fire `\"activeStrategyProcessorChange\"` to re-apply the processor.\n *\n * - `apiRef.current.unstable_setStrategyAvailability` to tell if their strategy can be used.\n *\n * =====================================================================================================================\n *\n * The plugin or component that needs to apply the custom logic of the current strategy must use:\n *\n * - `apiRef.current.unstable_applyStrategyProcessor` to run the processor of the active strategy for a given processor name.\n *\n * - the \"strategyAvailabilityChange\" event to update something when the active strategy changes.\n *    Warning: Be careful not to apply the processor several times.\n *    For instance \"rowsSet\" is fired by `useGridRows` whenever the active strategy changes.\n *    So listening to both would most likely run your logic twice.\n *\n * - The \"activeStrategyProcessorChange\" event to update something when the processor of the active strategy changes.\n *\n * =====================================================================================================================\n *\n * Each processor name is part of a strategy group which can only have one active strategy at the time.\n * For now, there is only one strategy group named `rowTree` which customize\n * - row tree creation algorithm.\n * - sorting algorithm.\n * - filtering algorithm.\n */\nexport const useGridStrategyProcessing = apiRef => {\n  const availableStrategies = React.useRef(new Map());\n  const strategiesCache = React.useRef({});\n  const registerStrategyProcessor = React.useCallback((strategyName, processorName, processor) => {\n    const cleanup = () => {\n      const _ref = strategiesCache.current[processorName],\n        otherProcessors = _objectWithoutPropertiesLoose(_ref, [strategyName].map(_toPropertyKey));\n      strategiesCache.current[processorName] = otherProcessors;\n    };\n    if (!strategiesCache.current[processorName]) {\n      strategiesCache.current[processorName] = {};\n    }\n    const groupPreProcessors = strategiesCache.current[processorName];\n    const previousProcessor = groupPreProcessors[strategyName];\n    groupPreProcessors[strategyName] = processor;\n    if (!previousProcessor || previousProcessor === processor) {\n      return cleanup;\n    }\n    if (strategyName === apiRef.current.unstable_getActiveStrategy(GRID_STRATEGIES_PROCESSORS[processorName])) {\n      apiRef.current.publishEvent('activeStrategyProcessorChange', processorName);\n    }\n    return cleanup;\n  }, [apiRef]);\n  const applyStrategyProcessor = React.useCallback((processorName, params) => {\n    const activeStrategy = apiRef.current.unstable_getActiveStrategy(GRID_STRATEGIES_PROCESSORS[processorName]);\n    if (activeStrategy == null) {\n      throw new Error(\"Can't apply a strategy processor before defining an active strategy\");\n    }\n    const groupCache = strategiesCache.current[processorName];\n    if (!groupCache || !groupCache[activeStrategy]) {\n      throw new Error(`No processor found for processor \"${processorName}\" on strategy \"${activeStrategy}\"`);\n    }\n    const processor = groupCache[activeStrategy];\n    return processor(params);\n  }, [apiRef]);\n  const getActiveStrategy = React.useCallback(strategyGroup => {\n    var _availableStrategyEnt;\n    const strategyEntries = Array.from(availableStrategies.current.entries());\n    const availableStrategyEntry = strategyEntries.find(_ref2 => {\n      let [, strategy] = _ref2;\n      if (strategy.group !== strategyGroup) {\n        return false;\n      }\n      return strategy.isAvailable();\n    });\n    return (_availableStrategyEnt = availableStrategyEntry == null ? void 0 : availableStrategyEntry[0]) != null ? _availableStrategyEnt : GRID_DEFAULT_STRATEGY;\n  }, []);\n  const setStrategyAvailability = React.useCallback((strategyGroup, strategyName, isAvailable) => {\n    availableStrategies.current.set(strategyName, {\n      group: strategyGroup,\n      isAvailable\n    });\n    apiRef.current.publishEvent('strategyAvailabilityChange');\n  }, [apiRef]);\n  const strategyProcessingApi = {\n    unstable_registerStrategyProcessor: registerStrategyProcessor,\n    unstable_applyStrategyProcessor: applyStrategyProcessor,\n    unstable_getActiveStrategy: getActiveStrategy,\n    unstable_setStrategyAvailability: setStrategyAvailability\n  };\n  useGridApiMethod(apiRef, strategyProcessingApi, 'GridStrategyProcessing');\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"stateId\"];\nimport * as React from 'react';\nimport { GridSignature } from '../utils/useGridApiEventHandler';\nimport { useGridApiMethod } from '../utils';\nimport { isFunction } from '../../utils/utils';\nexport const useGridStateInitialization = (apiRef, props) => {\n  const controlStateMapRef = React.useRef({});\n  const [, rawForceUpdate] = React.useState();\n  const registerControlState = React.useCallback(controlStateItem => {\n    const {\n        stateId\n      } = controlStateItem,\n      others = _objectWithoutPropertiesLoose(controlStateItem, _excluded);\n    controlStateMapRef.current[stateId] = _extends({}, others, {\n      stateId\n    });\n  }, []);\n  const setState = React.useCallback((state, reason) => {\n    let newState;\n    if (isFunction(state)) {\n      newState = state(apiRef.current.state);\n    } else {\n      newState = state;\n    }\n    if (apiRef.current.state === newState) {\n      return false;\n    }\n    let ignoreSetState = false; // Apply the control state constraints\n\n    const updatedControlStateIds = [];\n    Object.keys(controlStateMapRef.current).forEach(stateId => {\n      const controlState = controlStateMapRef.current[stateId];\n      const oldSubState = controlState.stateSelector(apiRef.current.state, apiRef.current.instanceId);\n      const newSubState = controlState.stateSelector(newState, apiRef.current.instanceId);\n      if (newSubState === oldSubState) {\n        return;\n      }\n      updatedControlStateIds.push({\n        stateId: controlState.stateId,\n        hasPropChanged: newSubState !== controlState.propModel\n      }); // The state is controlled, the prop should always win\n\n      if (controlState.propModel !== undefined && newSubState !== controlState.propModel) {\n        ignoreSetState = true;\n      }\n    });\n    if (updatedControlStateIds.length > 1) {\n      // Each hook modify its own state, and it should not leak\n      // Events are here to forward to other hooks and apply changes.\n      // You are trying to update several states in a no isolated way.\n      throw new Error(`You're not allowed to update several sub-state in one transaction. You already updated ${updatedControlStateIds[0].stateId}, therefore, you're not allowed to update ${updatedControlStateIds.map(el => el.stateId).join(', ')} in the same transaction.`);\n    }\n    if (!ignoreSetState) {\n      // We always assign it as we mutate rows for perf reason.\n      apiRef.current.state = newState;\n      if (apiRef.current.publishEvent) {\n        apiRef.current.publishEvent('stateChange', newState);\n      }\n    }\n    if (updatedControlStateIds.length === 1) {\n      const {\n        stateId,\n        hasPropChanged\n      } = updatedControlStateIds[0];\n      const controlState = controlStateMapRef.current[stateId];\n      const model = controlState.stateSelector(newState, apiRef.current.instanceId);\n      if (controlState.propOnChange && hasPropChanged) {\n        const details = props.signature === GridSignature.DataGridPro ? {\n          api: apiRef.current,\n          reason\n        } : {\n          reason\n        };\n        controlState.propOnChange(model, details);\n      }\n      if (!ignoreSetState) {\n        apiRef.current.publishEvent(controlState.changeEvent, model, {\n          reason\n        });\n      }\n    }\n    return !ignoreSetState;\n  }, [apiRef, props.signature]);\n  const updateControlState = React.useCallback((key, state, reason) => {\n    return apiRef.current.setState(previousState => {\n      return _extends({}, previousState, {\n        [key]: state(previousState[key])\n      });\n    }, reason);\n  }, [apiRef]);\n  const forceUpdate = React.useCallback(() => rawForceUpdate(() => apiRef.current.state), [apiRef]);\n  const stateApi = {\n    setState,\n    forceUpdate,\n    unstable_updateControlState: updateControlState,\n    unstable_registerControlState: registerControlState\n  };\n  useGridApiMethod(apiRef, stateApi, 'GridStateApi');\n};","import { useGridLoggerFactory } from './useGridLoggerFactory';\nimport { useGridApiInitialization } from './useGridApiInitialization';\nimport { useGridErrorHandler } from './useGridErrorHandler';\nimport { useGridLocaleText } from './useGridLocaleText';\nimport { useGridPipeProcessing } from './pipeProcessing';\nimport { useGridStrategyProcessing } from './strategyProcessing';\nimport { useGridStateInitialization } from './useGridStateInitialization';\n/**\n * Initialize the technical pieces of the DataGrid (logger, state, ...) that any DataGrid implementation needs\n */\n\nexport const useGridInitialization = (inputApiRef, props) => {\n  const apiRef = useGridApiInitialization(inputApiRef, props);\n  useGridLoggerFactory(apiRef, props);\n  useGridErrorHandler(apiRef, props);\n  useGridStateInitialization(apiRef, props);\n  useGridPipeProcessing(apiRef);\n  useGridStrategyProcessing(apiRef);\n  useGridLocaleText(apiRef, props);\n  return apiRef;\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridApiEventHandler } from '../utils/useGridApiEventHandler';\nexport function useGridErrorHandler(apiRef, props) {\n  const handleError = React.useCallback(args => {\n    // We are handling error here, to set up the handler as early as possible and be able to catch error thrown at init time.\n    apiRef.current.setState(state => _extends({}, state, {\n      error: args\n    }));\n  }, [apiRef]);\n  React.useEffect(() => {\n    if (props.error) {\n      handleError({\n        error: props.error\n      });\n    } else {\n      handleError(null);\n    }\n  }, [handleError, props.error]);\n  useGridApiEventHandler(apiRef, 'componentError', handleError);\n}","import * as React from 'react';\nexport const useGridLocaleText = (apiRef, props) => {\n  const getLocaleText = React.useCallback(key => {\n    if (props.localeText[key] == null) {\n      throw new Error(`Missing translation for key ${key}.`);\n    }\n    return props.localeText[key];\n  }, [props.localeText]);\n  apiRef.current.getLocaleText = getLocaleText;\n};","import * as React from 'react';\nexport const useGridInitializeState = (initializer, apiRef, props) => {\n  const isInitialized = React.useRef(false);\n  if (!isInitialized.current) {\n    apiRef.current.state = initializer(apiRef.current.state, props, apiRef);\n    isInitialized.current = true;\n  }\n};","import * as React from 'react';\nimport { useGridApiMethod, useGridNativeEventListener } from '../../utils';\nfunction writeToClipboardPolyfill(data) {\n  const span = document.createElement('span');\n  span.style.whiteSpace = 'pre';\n  span.style.userSelect = 'all';\n  span.style.opacity = '0px';\n  span.textContent = data;\n  document.body.appendChild(span);\n  const range = document.createRange();\n  range.selectNode(span);\n  const selection = window.getSelection();\n  selection.removeAllRanges();\n  selection.addRange(range);\n  try {\n    document.execCommand('copy');\n  } finally {\n    document.body.removeChild(span);\n  }\n}\nfunction hasNativeSelection(element) {\n  var _window$getSelection;\n  if (((_window$getSelection = window.getSelection()) == null ? void 0 : _window$getSelection.toString()) !== '') {\n    return true;\n  }\n  if (!element) {\n    return false;\n  }\n  if ((element.selectionEnd || 0) - (element.selectionStart || 0) > 0) {\n    return true;\n  }\n  return false;\n}\n/**\n * @requires useGridCsvExport (method)\n * @requires useGridSelection (method)\n */\n\nexport const useGridClipboard = apiRef => {\n  const copySelectedRowsToClipboard = React.useCallback(function () {\n    let includeHeaders = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n    if (apiRef.current.getSelectedRows().size === 0) {\n      return;\n    }\n    const data = apiRef.current.getDataAsCsv({\n      includeHeaders,\n      delimiter: '\\t'\n    });\n    if (navigator.clipboard) {\n      navigator.clipboard.writeText(data).catch(() => {\n        writeToClipboardPolyfill(data);\n      });\n    } else {\n      writeToClipboardPolyfill(data);\n    }\n  }, [apiRef]);\n  const handleKeydown = React.useCallback(event => {\n    const isModifierKeyPressed = event.ctrlKey || event.metaKey || event.altKey; // event.key === 'c' is not enough as alt+c can lead to ©, ç, or other characters on macOS.\n    // event.code === 'KeyC' is not enough as event.code assume a QWERTY keyboard layout which would\n    // be wrong with a Dvorak keyboard (as if pressing J).\n\n    if (String.fromCharCode(event.keyCode) !== 'C' || !isModifierKeyPressed) {\n      return;\n    } // Do nothing if there's a native selection\n\n    if (hasNativeSelection(event.target)) {\n      return;\n    }\n    apiRef.current.unstable_copySelectedRowsToClipboard(event.altKey);\n  }, [apiRef]);\n  useGridNativeEventListener(apiRef, apiRef.current.rootElementRef, 'keydown', handleKeydown);\n  const clipboardApi = {\n    unstable_copySelectedRowsToClipboard: copySelectedRowsToClipboard\n  };\n  useGridApiMethod(apiRef, clipboardApi, 'GridClipboardApi');\n};","import * as React from 'react';\nimport { isFunction } from '../../utils/utils';\nimport { useGridLogger } from './useGridLogger';\nexport const useGridNativeEventListener = (apiRef, ref, eventName, handler, options) => {\n  const logger = useGridLogger(apiRef, 'useNativeEventListener');\n  const [added, setAdded] = React.useState(false);\n  const handlerRef = React.useRef(handler);\n  const wrapHandler = React.useCallback(event => {\n    return handlerRef.current && handlerRef.current(event);\n  }, []);\n  React.useEffect(() => {\n    handlerRef.current = handler;\n  }, [handler]);\n  React.useEffect(() => {\n    let targetElement;\n    if (isFunction(ref)) {\n      targetElement = ref();\n    } else {\n      targetElement = ref && ref.current ? ref.current : null;\n    }\n    if (targetElement && eventName && !added) {\n      logger.debug(`Binding native ${eventName} event`);\n      targetElement.addEventListener(eventName, wrapHandler, options);\n      const boundElem = targetElement;\n      setAdded(true);\n      const unsubscribe = () => {\n        logger.debug(`Clearing native ${eventName} event`);\n        boundElem.removeEventListener(eventName, wrapHandler, options);\n      };\n      apiRef.current.subscribeEvent('unmount', unsubscribe);\n    }\n  }, [ref, wrapHandler, eventName, added, logger, options, apiRef]);\n};","export const gridColumnMenuSelector = state => state.columnMenu;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridLogger, useGridApiMethod, useGridApiEventHandler } from '../../utils';\nimport { gridColumnMenuSelector } from './columnMenuSelector';\nimport { gridClasses } from '../../../constants/gridClasses';\nexport const columnMenuStateInitializer = state => _extends({}, state, {\n  columnMenu: {\n    open: false\n  }\n});\n/**\n * @requires useGridColumnResize (event)\n * @requires useGridInfiniteLoader (event)\n */\n\nexport const useGridColumnMenu = apiRef => {\n  const logger = useGridLogger(apiRef, 'useGridColumnMenu');\n  /**\n   * API METHODS\n   */\n\n  const showColumnMenu = React.useCallback(field => {\n    const shouldUpdate = apiRef.current.setState(state => {\n      if (state.columnMenu.open && state.columnMenu.field === field) {\n        return state;\n      }\n      logger.debug('Opening Column Menu');\n      return _extends({}, state, {\n        columnMenu: {\n          open: true,\n          field\n        }\n      });\n    });\n    if (shouldUpdate) {\n      apiRef.current.hidePreferences();\n      apiRef.current.forceUpdate();\n    }\n  }, [apiRef, logger]);\n  const hideColumnMenu = React.useCallback(() => {\n    const shouldUpdate = apiRef.current.setState(state => {\n      if (!state.columnMenu.open && state.columnMenu.field === undefined) {\n        return state;\n      }\n      logger.debug('Hiding Column Menu');\n      return _extends({}, state, {\n        columnMenu: _extends({}, state.columnMenu, {\n          open: false,\n          field: undefined\n        })\n      });\n    });\n    if (shouldUpdate) {\n      apiRef.current.forceUpdate();\n    }\n  }, [apiRef, logger]);\n  const toggleColumnMenu = React.useCallback(field => {\n    logger.debug('Toggle Column Menu');\n    const columnMenu = gridColumnMenuSelector(apiRef.current.state);\n    if (!columnMenu.open || columnMenu.field !== field) {\n      showColumnMenu(field);\n    } else {\n      hideColumnMenu();\n    }\n  }, [apiRef, logger, showColumnMenu, hideColumnMenu]);\n  const columnMenuApi = {\n    showColumnMenu,\n    hideColumnMenu,\n    toggleColumnMenu\n  };\n  useGridApiMethod(apiRef, columnMenuApi, 'GridColumnMenuApi');\n  /**\n   * EVENTS\n   */\n\n  const handleColumnHeaderFocus = React.useCallback((params, event) => {\n    // Check if the column menu button received focus\n    if (!event.target.classList.contains(gridClasses.menuIconButton)) {\n      return;\n    } // Check if there's an element which lost focus\n\n    if (!event.relatedTarget) {\n      return;\n    } // `true` if the focus was on the column menu itself, not on any item\n\n    const columnMenuLostFocus = event.relatedTarget.classList.contains(gridClasses.menuList); // `true` if the focus was on an item from the column menu\n\n    const columnMenuItemLostFocus = event.relatedTarget.getAttribute('role') === 'menuitem';\n    if (columnMenuLostFocus || columnMenuItemLostFocus) {\n      apiRef.current.setColumnHeaderFocus(params.field);\n    }\n  }, [apiRef]);\n  useGridApiEventHandler(apiRef, 'columnResizeStart', hideColumnMenu);\n  useGridApiEventHandler(apiRef, 'columnHeaderFocus', handleColumnHeaderFocus);\n  useGridApiEventHandler(apiRef, 'virtualScrollerWheel', apiRef.current.hideColumnMenu);\n  useGridApiEventHandler(apiRef, 'virtualScrollerTouchMove', apiRef.current.hideColumnMenu);\n};","import * as React from 'react';\nexport const useFirstRender = callback => {\n  const isFirstRender = React.useRef(true);\n  if (isFirstRender.current) {\n    isFirstRender.current = false;\n    callback();\n  }\n};","import * as React from 'react';\nimport { useFirstRender } from '../../utils/useFirstRender';\nexport const useGridRegisterPipeProcessor = (apiRef, group, callback) => {\n  const cleanup = React.useRef();\n  const id = React.useRef(`mui-${Math.round(Math.random() * 1e9)}`);\n  const registerPreProcessor = React.useCallback(() => {\n    cleanup.current = apiRef.current.unstable_registerPipeProcessor(group, id.current, callback);\n  }, [apiRef, callback, group]);\n  useFirstRender(() => {\n    registerPreProcessor();\n  });\n  const isFirstRender = React.useRef(true);\n  React.useEffect(() => {\n    if (isFirstRender.current) {\n      isFirstRender.current = false;\n    } else {\n      registerPreProcessor();\n    }\n    return () => {\n      if (cleanup.current) {\n        cleanup.current();\n        cleanup.current = null;\n      }\n    };\n  }, [registerPreProcessor]);\n};","import * as React from 'react';\nimport { useFirstRender } from '../../utils/useFirstRender';\nexport const useGridRegisterPipeApplier = (apiRef, group, callback) => {\n  const cleanup = React.useRef();\n  const id = React.useRef(`mui-${Math.round(Math.random() * 1e9)}`);\n  const registerPreProcessor = React.useCallback(() => {\n    cleanup.current = apiRef.current.unstable_registerPipeApplier(group, id.current, callback);\n  }, [apiRef, callback, group]);\n  useFirstRender(() => {\n    registerPreProcessor();\n  });\n  const isFirstRender = React.useRef(true);\n  React.useEffect(() => {\n    if (isFirstRender.current) {\n      isFirstRender.current = false;\n    } else {\n      registerPreProcessor();\n    }\n    return () => {\n      if (cleanup.current) {\n        cleanup.current();\n        cleanup.current = null;\n      }\n    };\n  }, [registerPreProcessor]);\n};","import * as React from 'react';\nimport { createSvgIcon } from '@mui/material/utils';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const GridArrowUpwardIcon = createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M4 12l1.41 1.41L11 7.83V20h2V7.83l5.58 5.59L20 12l-8-8-8 8z\"\n}), 'ArrowUpward');\nexport const GridArrowDownwardIcon = createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M20 12l-1.41-1.41L13 16.17V4h-2v12.17l-5.58-5.59L4 12l8 8 8-8z\"\n}), 'ArrowDownward');\nexport const GridKeyboardArrowRight = createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M8.59 16.59 13.17 12 8.59 7.41 10 6l6 6-6 6-1.41-1.41z\"\n}), 'KeyboardArrowRight');\nexport const GridExpandMoreIcon = createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M16.59 8.59 12 13.17 7.41 8.59 6 10l6 6 6-6z\"\n}), 'ExpandMore');\nexport const GridFilterListIcon = createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M10 18h4v-2h-4v2zM3 6v2h18V6H3zm3 7h12v-2H6v2z\"\n}), 'FilterList');\nexport const GridFilterAltIcon = createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M4.25 5.61C6.27 8.2 10 13 10 13v6c0 .55.45 1 1 1h2c.55 0 1-.45 1-1v-6s3.72-4.8 5.74-7.39c.51-.66.04-1.61-.79-1.61H5.04c-.83 0-1.3.95-.79 1.61z\"\n}), 'FilterAlt');\nexport const GridSearchIcon = createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z\"\n}), 'Search');\nexport const GridMenuIcon = createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M3 18h18v-2H3v2zm0-5h18v-2H3v2zm0-7v2h18V6H3z\"\n}), 'Menu');\nexport const GridCheckCircleIcon = createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm-2 15l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z\"\n}), 'CheckCircle');\nexport const GridColumnIcon = createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M6 5H3c-.55 0-1 .45-1 1v12c0 .55.45 1 1 1h3c.55 0 1-.45 1-1V6c0-.55-.45-1-1-1zm14 0h-3c-.55 0-1 .45-1 1v12c0 .55.45 1 1 1h3c.55 0 1-.45 1-1V6c0-.55-.45-1-1-1zm-7 0h-3c-.55 0-1 .45-1 1v12c0 .55.45 1 1 1h3c.55 0 1-.45 1-1V6c0-.55-.45-1-1-1z\"\n}), 'ColumnIcon');\nexport const GridSeparatorIcon = createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M11 19V5h2v14z\"\n}), 'Separator');\nexport const GridViewHeadlineIcon = createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M4 15h16v-2H4v2zm0 4h16v-2H4v2zm0-8h16V9H4v2zm0-6v2h16V5H4z\"\n}), 'ViewHeadline');\nexport const GridTableRowsIcon = createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M21,8H3V4h18V8z M21,10H3v4h18V10z M21,16H3v4h18V16z\"\n}), 'TableRows');\nexport const GridViewStreamIcon = createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M4 18h17v-6H4v6zM4 5v6h17V5H4z\"\n}), 'ViewStream');\nexport const GridTripleDotsVerticalIcon = createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 8c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z\"\n}), 'TripleDotsVertical');\nexport const GridCloseIcon = createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"\n}), 'Close');\nexport const GridAddIcon = createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z\"\n}), 'Add');\nexport const GridRemoveIcon = createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 13H5v-2h14v2z\"\n}), 'Remove');\nexport const GridLoadIcon = createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 4V1L8 5l4 4V6c3.31 0 6 2.69 6 6 0 1.01-.25 1.97-.7 2.8l1.46 1.46C19.54 15.03 20 13.57 20 12c0-4.42-3.58-8-8-8zm0 14c-3.31 0-6-2.69-6-6 0-1.01.25-1.97.7-2.8L5.24 7.74C4.46 8.97 4 10.43 4 12c0 4.42 3.58 8 8 8v3l4-4-4-4v3z\"\n}), 'Load');\nexport const GridDragIcon = createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M11 18c0 1.1-.9 2-2 2s-2-.9-2-2 .9-2 2-2 2 .9 2 2zm-2-8c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0-6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm6 4c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z\"\n}), 'Drag');\nexport const GridSaveAltIcon = createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 12v7H5v-7H3v7c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2v-7h-2zm-6 .67l2.59-2.58L17 11.5l-5 5-5-5 1.41-1.41L11 12.67V3h2z\"\n}), 'SaveAlt');\nexport const GridCheckIcon = createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M9 16.17L4.83 12l-1.42 1.41L9 19 21 7l-1.41-1.41z\"\n}), 'Check');\nexport const GridMoreVertIcon = createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 8c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z\"\n}), 'MoreVert');","export function getValueFromOption(option) {\n  if (typeof option === 'object' && option !== null) {\n    return option.value;\n  }\n  return option;\n}\nexport function getValueFromValueOptions(value, valueOptions) {\n  if (valueOptions === undefined) {\n    return undefined;\n  }\n  const result = valueOptions.find(option => {\n    const optionValue = getValueFromOption(option);\n    return String(optionValue) === String(value);\n  });\n  return getValueFromOption(result);\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"item\", \"applyValue\", \"type\", \"apiRef\", \"focusElementRef\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_useId as useId } from '@mui/material/utils';\nimport MenuItem from '@mui/material/MenuItem';\nimport { GridLoadIcon } from '../../icons';\nimport { useGridRootProps } from '../../../hooks/utils/useGridRootProps';\nimport { getValueFromValueOptions } from './filterPanelUtils';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst warnedOnce = {};\nfunction warnDeprecatedTypeSupport(type) {\n  console.warn([`MUI: Using GridFilterInputValue with a \"${type}\" column is deprecated.`, 'Use GridFilterInputSingleSelect instead.'].join('\\n'));\n  warnedOnce[type] = true;\n}\nconst renderSingleSelectOptions = (_ref, api, OptionComponent) => {\n  let {\n    valueOptions,\n    valueFormatter,\n    field\n  } = _ref;\n  const iterableColumnValues = typeof valueOptions === 'function' ? ['', ...valueOptions({\n    field\n  })] : ['', ...(valueOptions || [])];\n  return iterableColumnValues.map(option => {\n    const isOptionTypeObject = typeof option === 'object';\n    const key = isOptionTypeObject ? option.value : option;\n    const value = isOptionTypeObject ? option.value : option;\n    const formattedValue = valueFormatter && option !== '' ? valueFormatter({\n      value: option,\n      field,\n      api\n    }) : option;\n    const content = isOptionTypeObject ? option.label : formattedValue;\n    return /*#__PURE__*/_jsx(OptionComponent, {\n      value: value,\n      children: content\n    }, key);\n  });\n};\nexport const SUBMIT_FILTER_STROKE_TIME = 500;\nfunction GridFilterInputValue(props) {\n  var _item$value, _rootProps$components, _baseSelectProps$nati, _rootProps$components2, _rootProps$components3;\n  const {\n      item,\n      applyValue,\n      type,\n      apiRef,\n      focusElementRef\n    } = props,\n    others = _objectWithoutPropertiesLoose(props, _excluded);\n  if (process.env.NODE_ENV !== 'production' && ['date', 'datetime-local', 'singleSelect'].includes(type) && !warnedOnce[type]) {\n    warnDeprecatedTypeSupport(type);\n  }\n  const filterTimeout = React.useRef();\n  const [filterValueState, setFilterValueState] = React.useState((_item$value = item.value) != null ? _item$value : '');\n  const [applying, setIsApplying] = React.useState(false);\n  const id = useId();\n  const rootProps = useGridRootProps();\n  const baseSelectProps = ((_rootProps$components = rootProps.componentsProps) == null ? void 0 : _rootProps$components.baseSelect) || {};\n  const isSelectNative = (_baseSelectProps$nati = baseSelectProps.native) != null ? _baseSelectProps$nati : true;\n  const singleSelectProps = type === 'singleSelect' ? {\n    select: true,\n    SelectProps: _extends({\n      native: isSelectNative\n    }, (_rootProps$components2 = rootProps.componentsProps) == null ? void 0 : _rootProps$components2.baseSelect),\n    children: renderSingleSelectOptions(apiRef.current.getColumn(item.columnField), apiRef.current, isSelectNative ? 'option' : MenuItem)\n  } : {};\n  const onFilterChange = React.useCallback(event => {\n    let value = event.target.value; // NativeSelect casts the value to a string.\n\n    if (type === 'singleSelect') {\n      const column = apiRef.current.getColumn(item.columnField);\n      const columnValueOptions = typeof column.valueOptions === 'function' ? column.valueOptions({\n        field: column.field\n      }) : column.valueOptions;\n      value = getValueFromValueOptions(value, columnValueOptions);\n    }\n    clearTimeout(filterTimeout.current);\n    setFilterValueState(String(value));\n    setIsApplying(true); // TODO singleSelect doesn't debounce\n\n    filterTimeout.current = setTimeout(() => {\n      applyValue(_extends({}, item, {\n        value\n      }));\n      setIsApplying(false);\n    }, SUBMIT_FILTER_STROKE_TIME);\n  }, [apiRef, applyValue, item, type]);\n  React.useEffect(() => {\n    return () => {\n      clearTimeout(filterTimeout.current);\n    };\n  }, []);\n  React.useEffect(() => {\n    var _item$value2;\n    const itemValue = (_item$value2 = item.value) != null ? _item$value2 : '';\n    setFilterValueState(String(itemValue));\n  }, [item.value]);\n  const InputProps = applying ? {\n    endAdornment: /*#__PURE__*/_jsx(GridLoadIcon, {})\n  } : others.InputProps;\n  return /*#__PURE__*/_jsx(rootProps.components.BaseTextField, _extends({\n    id: id,\n    label: apiRef.current.getLocaleText('filterPanelInputLabel'),\n    placeholder: apiRef.current.getLocaleText('filterPanelInputPlaceholder'),\n    value: filterValueState,\n    onChange: onFilterChange,\n    variant: \"standard\",\n    type: type || 'text',\n    InputProps: InputProps,\n    InputLabelProps: {\n      shrink: true\n    },\n    inputRef: focusElementRef\n  }, singleSelectProps, others, (_rootProps$components3 = rootProps.componentsProps) == null ? void 0 : _rootProps$components3.baseTextField));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridFilterInputValue.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  apiRef: PropTypes.shape({\n    current: PropTypes.object.isRequired\n  }).isRequired,\n  applyValue: PropTypes.func.isRequired,\n  focusElementRef: PropTypes\n  /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.func, PropTypes.object]),\n  item: PropTypes.shape({\n    columnField: PropTypes.string.isRequired,\n    id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    operatorValue: PropTypes.string,\n    value: PropTypes.any\n  }).isRequired\n} : void 0;\nexport { GridFilterInputValue };","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"id\", \"value\", \"formattedValue\", \"api\", \"field\", \"row\", \"rowNode\", \"colDef\", \"cellMode\", \"isEditable\", \"tabIndex\", \"hasFocus\", \"getValue\", \"isValidating\", \"debounceMs\", \"isProcessingProps\", \"onValueChange\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_composeClasses as composeClasses } from '@mui/material';\nimport { unstable_useEnhancedEffect as useEnhancedEffect } from '@mui/material/utils';\nimport { styled } from '@mui/material/styles';\nimport InputBase from '@mui/material/InputBase';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { GridLoadIcon } from '../icons/index';\nimport { SUBMIT_FILTER_STROKE_TIME } from '../panel/filterPanel/GridFilterInputValue';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['editInputCell']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridEditInputCellRoot = styled(InputBase, {\n  name: 'MuiDataGrid',\n  slot: 'EditInputCell',\n  overridesResolver: (props, styles) => styles.editInputCell\n})(_ref => {\n  let {\n    theme\n  } = _ref;\n  return _extends({}, theme.typography.body2, {\n    padding: '1px 0',\n    '& input': {\n      padding: '0 16px',\n      height: '100%'\n    }\n  });\n});\nconst GridEditInputCell = /*#__PURE__*/React.forwardRef((props, ref) => {\n  var _rootProps$experiment, _rootProps$experiment3;\n  const rootProps = useGridRootProps();\n  const {\n      id,\n      value,\n      field,\n      colDef,\n      hasFocus,\n      debounceMs = (_rootProps$experiment = rootProps.experimentalFeatures) != null && _rootProps$experiment.newEditingApi ? 200 : SUBMIT_FILTER_STROKE_TIME,\n      isProcessingProps,\n      onValueChange\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridApiContext();\n  const inputRef = React.useRef();\n  const [valueState, setValueState] = React.useState(value);\n  const classes = useUtilityClasses(rootProps);\n  const handleChange = React.useCallback(async event => {\n    var _rootProps$experiment2;\n    const newValue = event.target.value;\n    if (onValueChange) {\n      await onValueChange(event, newValue);\n    }\n    const column = apiRef.current.getColumn(field);\n    let parsedValue = newValue;\n    if (column.valueParser && (_rootProps$experiment2 = rootProps.experimentalFeatures) != null && _rootProps$experiment2.newEditingApi) {\n      parsedValue = column.valueParser(newValue, apiRef.current.getCellParams(id, field));\n    }\n    setValueState(parsedValue);\n    apiRef.current.setEditCellValue({\n      id,\n      field,\n      value: parsedValue,\n      debounceMs,\n      unstable_skipValueParser: true\n    }, event);\n  }, [apiRef, debounceMs, field, id, onValueChange, (_rootProps$experiment3 = rootProps.experimentalFeatures) == null ? void 0 : _rootProps$experiment3.newEditingApi]);\n  const meta = apiRef.current.unstable_getEditCellMeta ? apiRef.current.unstable_getEditCellMeta(id, field) : {};\n  React.useEffect(() => {\n    if (meta.changeReason !== 'debouncedSetEditCellValue') {\n      setValueState(value);\n    }\n  }, [meta.changeReason, value]);\n  useEnhancedEffect(() => {\n    if (hasFocus) {\n      inputRef.current.focus();\n    }\n  }, [hasFocus]);\n  return /*#__PURE__*/_jsx(GridEditInputCellRoot, _extends({\n    ref: ref,\n    inputRef: inputRef,\n    className: classes.root,\n    ownerState: rootProps,\n    fullWidth: true,\n    type: colDef.type === 'number' ? colDef.type : 'text',\n    value: valueState != null ? valueState : '',\n    onChange: handleChange,\n    endAdornment: isProcessingProps ? /*#__PURE__*/_jsx(GridLoadIcon, {}) : undefined\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridEditInputCell.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n\n  /**\n   * GridApi that let you manipulate the grid.\n   * @deprecated Use the `apiRef` returned by `useGridApiContext` or `useGridApiRef` (only available in `@mui/x-data-grid-pro`)\n   */\n  api: PropTypes.any,\n  /**\n   * The mode of the cell.\n   */\n  cellMode: PropTypes.oneOf(['edit', 'view']),\n  changeReason: PropTypes.oneOf(['debouncedSetEditCellValue', 'setEditCellValue']),\n  /**\n   * The column of the row that the current cell belongs to.\n   */\n  colDef: PropTypes.object,\n  debounceMs: PropTypes.number,\n  /**\n   * The column field of the cell that triggered the event.\n   */\n  field: PropTypes.string,\n  /**\n   * The cell value formatted with the column valueFormatter.\n   */\n  formattedValue: PropTypes.any,\n  /**\n   * Get the cell value of a row and field.\n   * @param {GridRowId} id The row id.\n   * @param {string} field The field.\n   * @returns {any} The cell value.\n   * @deprecated Use `params.row` to directly access the fields you want instead.\n   */\n  getValue: PropTypes.func,\n  /**\n   * If true, the cell is the active element.\n   */\n  hasFocus: PropTypes.bool,\n  /**\n   * The grid row id.\n   */\n  id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  /**\n   * If true, the cell is editable.\n   */\n  isEditable: PropTypes.bool,\n  isProcessingProps: PropTypes.bool,\n  isValidating: PropTypes.bool,\n  /**\n   * Callback called when the value is changed by the user.\n   * @param {React.ChangeEvent<HTMLInputElement>} event The event source of the callback.\n   * @param {Date | null} newValue The value that is going to be passed to `apiRef.current.setEditCellValue`.\n   * @returns {Promise<void> | void} A promise to be awaited before calling `apiRef.current.setEditCellValue`\n   */\n  onValueChange: PropTypes.func,\n  /**\n   * The row model of the row that the current cell belongs to.\n   */\n  row: PropTypes.any,\n  /**\n   * The node of the row that the current cell belongs to.\n   */\n  rowNode: PropTypes.object,\n  /**\n   * the tabIndex value.\n   */\n  tabIndex: PropTypes.oneOf([-1, 0]),\n  /**\n   * The cell value.\n   * If the column has `valueGetter`, use `params.row` to directly access the fields.\n   */\n  value: PropTypes.any\n} : void 0;\nexport { GridEditInputCell };\nexport const renderEditInputCell = params => /*#__PURE__*/_jsx(GridEditInputCell, _extends({}, params));","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { buildWarning } from '../../../utils/warning';\nconst sortModelDisableMultiColumnsSortingWarning = buildWarning(['MUI: The `sortModel` can only contain a single item when the `disableMultipleColumnsSorting` prop is set to `true`.', 'If you are using the community version of the `DataGrid`, this prop is always `true`.'], 'error');\nexport const sanitizeSortModel = (model, disableMultipleColumnsSorting) => {\n  if (disableMultipleColumnsSorting && model.length > 1) {\n    sortModelDisableMultiColumnsSortingWarning();\n    return [model[0]];\n  }\n  return model;\n};\nexport const mergeStateWithSortModel = (sortModel, disableMultipleColumnsSorting) => state => _extends({}, state, {\n  sorting: _extends({}, state.sorting, {\n    sortModel: sanitizeSortModel(sortModel, disableMultipleColumnsSorting)\n  })\n});\nconst isDesc = direction => direction === 'desc';\n/**\n * Transform an item of the sorting model into a method comparing two rows.\n * @param {GridSortItem} sortItem The sort item we want to apply.\n * @param {React.MutableRefObject<GridApiCommunity>} apiRef The API of the grid.\n * @returns {GridParsedSortItem | null} The parsed sort item. Returns `null` is the sort item is not valid.\n */\n\nconst parseSortItem = (sortItem, apiRef) => {\n  const column = apiRef.current.getColumn(sortItem.field);\n  if (!column) {\n    return null;\n  }\n  const comparator = isDesc(sortItem.sort) ? function () {\n    return -1 * column.sortComparator(...arguments);\n  } : column.sortComparator;\n  const getSortCellParams = id => ({\n    id,\n    field: column.field,\n    rowNode: apiRef.current.getRowNode(id),\n    value: apiRef.current.getCellValue(id, column.field),\n    api: apiRef.current\n  });\n  return {\n    getSortCellParams,\n    comparator\n  };\n};\n\n/**\n * Compare two rows according to a list of valid sort items.\n * The `row1Params` and `row2Params` must have the same length as `parsedSortItems`,\n * and each of their index must contain the `GridSortCellParams` of the sort item with the same index.\n * @param {GridParsedSortItem[]} parsedSortItems All the sort items with which we want to compare the rows.\n * @param {GridRowAggregatedSortingParams} row1 The node and params of the 1st row for each sort item.\n * @param {GridRowAggregatedSortingParams} row2 The node and params of the 2nd row for each sort item.\n */\nconst compareRows = (parsedSortItems, row1, row2) => {\n  return parsedSortItems.reduce((res, item, index) => {\n    if (res !== 0) {\n      // return the results of the first comparator which distinguish the two rows\n      return res;\n    }\n    const sortCellParams1 = row1.params[index];\n    const sortCellParams2 = row2.params[index];\n    res = item.comparator(sortCellParams1.value, sortCellParams2.value, sortCellParams1, sortCellParams2);\n    return res;\n  }, 0);\n};\n/**\n * Generates a method to easily sort a list of rows according to the current sort model.\n * @param {GridSortModel} sortModel The model with which we want to sort the rows.\n * @param {React.MutableRefObject<GridApiCommunity>} apiRef The API of the grid.\n * @returns {GridSortingModelApplier | null} A method that generates a list of sorted row ids from a list of rows according to the current sort model. If `null`, we consider that the rows should remain in the order there were provided.\n */\n\nexport const buildAggregatedSortingApplier = (sortModel, apiRef) => {\n  const comparatorList = sortModel.map(item => parseSortItem(item, apiRef)).filter(comparator => !!comparator);\n  if (comparatorList.length === 0) {\n    return null;\n  }\n  return rowList => rowList.map(node => ({\n    node,\n    params: comparatorList.map(el => el.getSortCellParams(node.id))\n  })).sort((a, b) => compareRows(comparatorList, a, b)).map(row => row.node.id);\n};\nexport const getNextGridSortDirection = (sortingOrder, current) => {\n  const currentIdx = sortingOrder.indexOf(current);\n  if (!current || currentIdx === -1 || currentIdx + 1 === sortingOrder.length) {\n    return sortingOrder[0];\n  }\n  return sortingOrder[currentIdx + 1];\n};\nconst gridNillComparator = (v1, v2) => {\n  if (v1 == null && v2 != null) {\n    return -1;\n  }\n  if (v2 == null && v1 != null) {\n    return 1;\n  }\n  if (v1 == null && v2 == null) {\n    return 0;\n  }\n  return null;\n};\nconst collator = new Intl.Collator();\nexport const gridStringOrNumberComparator = (value1, value2) => {\n  const nillResult = gridNillComparator(value1, value2);\n  if (nillResult !== null) {\n    return nillResult;\n  }\n  if (typeof value1 === 'string') {\n    return collator.compare(value1.toString(), value2.toString());\n  }\n  return value1 - value2;\n};\nexport const gridNumberComparator = (value1, value2) => {\n  const nillResult = gridNillComparator(value1, value2);\n  if (nillResult !== null) {\n    return nillResult;\n  }\n  return Number(value1) - Number(value2);\n};\nexport const gridDateComparator = (value1, value2) => {\n  const nillResult = gridNillComparator(value1, value2);\n  if (nillResult !== null) {\n    return nillResult;\n  }\n  if (value1 > value2) {\n    return 1;\n  }\n  if (value1 < value2) {\n    return -1;\n  }\n  return 0;\n};","'use client';\n\n/* eslint-disable no-constant-condition */\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { unstable_setRef as setRef, unstable_useEventCallback as useEventCallback, unstable_useControlled as useControlled, unstable_useId as useId, usePreviousProps } from '@mui/utils';\n\n// https://stackoverflow.com/questions/990904/remove-accents-diacritics-in-a-string-in-javascript\n// Give up on IE11 support for this feature\nfunction stripDiacritics(string) {\n  return typeof string.normalize !== 'undefined' ? string.normalize('NFD').replace(/[\\u0300-\\u036f]/g, '') : string;\n}\nexport function createFilterOptions() {\n  let config = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  const {\n    ignoreAccents = true,\n    ignoreCase = true,\n    limit,\n    matchFrom = 'any',\n    stringify,\n    trim = false\n  } = config;\n  return (options, _ref) => {\n    let {\n      inputValue,\n      getOptionLabel\n    } = _ref;\n    let input = trim ? inputValue.trim() : inputValue;\n    if (ignoreCase) {\n      input = input.toLowerCase();\n    }\n    if (ignoreAccents) {\n      input = stripDiacritics(input);\n    }\n    const filteredOptions = !input ? options : options.filter(option => {\n      let candidate = (stringify || getOptionLabel)(option);\n      if (ignoreCase) {\n        candidate = candidate.toLowerCase();\n      }\n      if (ignoreAccents) {\n        candidate = stripDiacritics(candidate);\n      }\n      return matchFrom === 'start' ? candidate.indexOf(input) === 0 : candidate.indexOf(input) > -1;\n    });\n    return typeof limit === 'number' ? filteredOptions.slice(0, limit) : filteredOptions;\n  };\n}\n\n// To replace with .findIndex() once we stop IE11 support.\nfunction findIndex(array, comp) {\n  for (let i = 0; i < array.length; i += 1) {\n    if (comp(array[i])) {\n      return i;\n    }\n  }\n  return -1;\n}\nconst defaultFilterOptions = createFilterOptions();\n\n// Number of options to jump in list box when `Page Up` and `Page Down` keys are used.\nconst pageSize = 5;\nconst defaultIsActiveElementInListbox = listboxRef => {\n  var _listboxRef$current$p;\n  return listboxRef.current !== null && ((_listboxRef$current$p = listboxRef.current.parentElement) == null ? void 0 : _listboxRef$current$p.contains(document.activeElement));\n};\nfunction useAutocomplete(props) {\n  const {\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    unstable_isActiveElementInListbox = defaultIsActiveElementInListbox,\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    unstable_classNamePrefix = 'Mui',\n    autoComplete = false,\n    autoHighlight = false,\n    autoSelect = false,\n    blurOnSelect = false,\n    clearOnBlur = !props.freeSolo,\n    clearOnEscape = false,\n    componentName = 'useAutocomplete',\n    defaultValue = props.multiple ? [] : null,\n    disableClearable = false,\n    disableCloseOnSelect = false,\n    disabled: disabledProp,\n    disabledItemsFocusable = false,\n    disableListWrap = false,\n    filterOptions = defaultFilterOptions,\n    filterSelectedOptions = false,\n    freeSolo = false,\n    getOptionDisabled,\n    getOptionKey,\n    getOptionLabel: getOptionLabelProp = option => {\n      var _option$label;\n      return (_option$label = option.label) != null ? _option$label : option;\n    },\n    groupBy,\n    handleHomeEndKeys = !props.freeSolo,\n    id: idProp,\n    includeInputInList = false,\n    inputValue: inputValueProp,\n    isOptionEqualToValue = (option, value) => option === value,\n    multiple = false,\n    onChange,\n    onClose,\n    onHighlightChange,\n    onInputChange,\n    onOpen,\n    open: openProp,\n    openOnFocus = false,\n    options,\n    readOnly = false,\n    selectOnFocus = !props.freeSolo,\n    value: valueProp\n  } = props;\n  const id = useId(idProp);\n  let getOptionLabel = getOptionLabelProp;\n  getOptionLabel = option => {\n    const optionLabel = getOptionLabelProp(option);\n    if (typeof optionLabel !== 'string') {\n      if (process.env.NODE_ENV !== 'production') {\n        const erroneousReturn = optionLabel === undefined ? 'undefined' : `${typeof optionLabel} (${optionLabel})`;\n        console.error(`MUI: The \\`getOptionLabel\\` method of ${componentName} returned ${erroneousReturn} instead of a string for ${JSON.stringify(option)}.`);\n      }\n      return String(optionLabel);\n    }\n    return optionLabel;\n  };\n  const ignoreFocus = React.useRef(false);\n  const firstFocus = React.useRef(true);\n  const inputRef = React.useRef(null);\n  const listboxRef = React.useRef(null);\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const [focusedTag, setFocusedTag] = React.useState(-1);\n  const defaultHighlighted = autoHighlight ? 0 : -1;\n  const highlightedIndexRef = React.useRef(defaultHighlighted);\n  const [value, setValueState] = useControlled({\n    controlled: valueProp,\n    default: defaultValue,\n    name: componentName\n  });\n  const [inputValue, setInputValueState] = useControlled({\n    controlled: inputValueProp,\n    default: '',\n    name: componentName,\n    state: 'inputValue'\n  });\n  const [focused, setFocused] = React.useState(false);\n  const resetInputValue = React.useCallback((event, newValue) => {\n    // retain current `inputValue` if new option isn't selected and `clearOnBlur` is false\n    // When `multiple` is enabled, `newValue` is an array of all selected items including the newly selected item\n    const isOptionSelected = multiple ? value.length < newValue.length : newValue !== null;\n    if (!isOptionSelected && !clearOnBlur) {\n      return;\n    }\n    let newInputValue;\n    if (multiple) {\n      newInputValue = '';\n    } else if (newValue == null) {\n      newInputValue = '';\n    } else {\n      const optionLabel = getOptionLabel(newValue);\n      newInputValue = typeof optionLabel === 'string' ? optionLabel : '';\n    }\n    if (inputValue === newInputValue) {\n      return;\n    }\n    setInputValueState(newInputValue);\n    if (onInputChange) {\n      onInputChange(event, newInputValue, 'reset');\n    }\n  }, [getOptionLabel, inputValue, multiple, onInputChange, setInputValueState, clearOnBlur, value]);\n  const [open, setOpenState] = useControlled({\n    controlled: openProp,\n    default: false,\n    name: componentName,\n    state: 'open'\n  });\n  const [inputPristine, setInputPristine] = React.useState(true);\n  const inputValueIsSelectedValue = !multiple && value != null && inputValue === getOptionLabel(value);\n  const popupOpen = open && !readOnly;\n  const filteredOptions = popupOpen ? filterOptions(options.filter(option => {\n    if (filterSelectedOptions && (multiple ? value : [value]).some(value2 => value2 !== null && isOptionEqualToValue(option, value2))) {\n      return false;\n    }\n    return true;\n  }),\n  // we use the empty string to manipulate `filterOptions` to not filter any options\n  // i.e. the filter predicate always returns true\n  {\n    inputValue: inputValueIsSelectedValue && inputPristine ? '' : inputValue,\n    getOptionLabel\n  }) : [];\n  const previousProps = usePreviousProps({\n    filteredOptions,\n    value,\n    inputValue\n  });\n  React.useEffect(() => {\n    const valueChange = value !== previousProps.value;\n    if (focused && !valueChange) {\n      return;\n    }\n\n    // Only reset the input's value when freeSolo if the component's value changes.\n    if (freeSolo && !valueChange) {\n      return;\n    }\n    resetInputValue(null, value);\n  }, [value, resetInputValue, focused, previousProps.value, freeSolo]);\n  const listboxAvailable = open && filteredOptions.length > 0 && !readOnly;\n  if (process.env.NODE_ENV !== 'production') {\n    if (value !== null && !freeSolo && options.length > 0) {\n      const missingValue = (multiple ? value : [value]).filter(value2 => !options.some(option => isOptionEqualToValue(option, value2)));\n      if (missingValue.length > 0) {\n        console.warn([`MUI: The value provided to ${componentName} is invalid.`, `None of the options match with \\`${missingValue.length > 1 ? JSON.stringify(missingValue) : JSON.stringify(missingValue[0])}\\`.`, 'You can use the `isOptionEqualToValue` prop to customize the equality test.'].join('\\n'));\n      }\n    }\n  }\n  const focusTag = useEventCallback(tagToFocus => {\n    if (tagToFocus === -1) {\n      inputRef.current.focus();\n    } else {\n      anchorEl.querySelector(`[data-tag-index=\"${tagToFocus}\"]`).focus();\n    }\n  });\n\n  // Ensure the focusedTag is never inconsistent\n  React.useEffect(() => {\n    if (multiple && focusedTag > value.length - 1) {\n      setFocusedTag(-1);\n      focusTag(-1);\n    }\n  }, [value, multiple, focusedTag, focusTag]);\n  function validOptionIndex(index, direction) {\n    if (!listboxRef.current || index < 0 || index >= filteredOptions.length) {\n      return -1;\n    }\n    let nextFocus = index;\n    while (true) {\n      const option = listboxRef.current.querySelector(`[data-option-index=\"${nextFocus}\"]`);\n\n      // Same logic as MenuList.js\n      const nextFocusDisabled = disabledItemsFocusable ? false : !option || option.disabled || option.getAttribute('aria-disabled') === 'true';\n      if (option && option.hasAttribute('tabindex') && !nextFocusDisabled) {\n        // The next option is available\n        return nextFocus;\n      }\n\n      // The next option is disabled, move to the next element.\n      // with looped index\n      if (direction === 'next') {\n        nextFocus = (nextFocus + 1) % filteredOptions.length;\n      } else {\n        nextFocus = (nextFocus - 1 + filteredOptions.length) % filteredOptions.length;\n      }\n\n      // We end up with initial index, that means we don't have available options.\n      // All of them are disabled\n      if (nextFocus === index) {\n        return -1;\n      }\n    }\n  }\n  const setHighlightedIndex = useEventCallback(_ref2 => {\n    let {\n      event,\n      index,\n      reason = 'auto'\n    } = _ref2;\n    highlightedIndexRef.current = index;\n\n    // does the index exist?\n    if (index === -1) {\n      inputRef.current.removeAttribute('aria-activedescendant');\n    } else {\n      inputRef.current.setAttribute('aria-activedescendant', `${id}-option-${index}`);\n    }\n    if (onHighlightChange) {\n      onHighlightChange(event, index === -1 ? null : filteredOptions[index], reason);\n    }\n    if (!listboxRef.current) {\n      return;\n    }\n    const prev = listboxRef.current.querySelector(`[role=\"option\"].${unstable_classNamePrefix}-focused`);\n    if (prev) {\n      prev.classList.remove(`${unstable_classNamePrefix}-focused`);\n      prev.classList.remove(`${unstable_classNamePrefix}-focusVisible`);\n    }\n    let listboxNode = listboxRef.current;\n    if (listboxRef.current.getAttribute('role') !== 'listbox') {\n      listboxNode = listboxRef.current.parentElement.querySelector('[role=\"listbox\"]');\n    }\n\n    // \"No results\"\n    if (!listboxNode) {\n      return;\n    }\n    if (index === -1) {\n      listboxNode.scrollTop = 0;\n      return;\n    }\n    const option = listboxRef.current.querySelector(`[data-option-index=\"${index}\"]`);\n    if (!option) {\n      return;\n    }\n    option.classList.add(`${unstable_classNamePrefix}-focused`);\n    if (reason === 'keyboard') {\n      option.classList.add(`${unstable_classNamePrefix}-focusVisible`);\n    }\n\n    // Scroll active descendant into view.\n    // Logic copied from https://www.w3.org/WAI/content-assets/wai-aria-practices/patterns/combobox/examples/js/select-only.js\n    // In case of mouse clicks and touch (in mobile devices) we avoid scrolling the element and keep both behaviors same.\n    // Consider this API instead once it has a better browser support:\n    // .scrollIntoView({ scrollMode: 'if-needed', block: 'nearest' });\n    if (listboxNode.scrollHeight > listboxNode.clientHeight && reason !== 'mouse' && reason !== 'touch') {\n      const element = option;\n      const scrollBottom = listboxNode.clientHeight + listboxNode.scrollTop;\n      const elementBottom = element.offsetTop + element.offsetHeight;\n      if (elementBottom > scrollBottom) {\n        listboxNode.scrollTop = elementBottom - listboxNode.clientHeight;\n      } else if (element.offsetTop - element.offsetHeight * (groupBy ? 1.3 : 0) < listboxNode.scrollTop) {\n        listboxNode.scrollTop = element.offsetTop - element.offsetHeight * (groupBy ? 1.3 : 0);\n      }\n    }\n  });\n  const changeHighlightedIndex = useEventCallback(_ref3 => {\n    let {\n      event,\n      diff,\n      direction = 'next',\n      reason = 'auto'\n    } = _ref3;\n    if (!popupOpen) {\n      return;\n    }\n    const getNextIndex = () => {\n      const maxIndex = filteredOptions.length - 1;\n      if (diff === 'reset') {\n        return defaultHighlighted;\n      }\n      if (diff === 'start') {\n        return 0;\n      }\n      if (diff === 'end') {\n        return maxIndex;\n      }\n      const newIndex = highlightedIndexRef.current + diff;\n      if (newIndex < 0) {\n        if (newIndex === -1 && includeInputInList) {\n          return -1;\n        }\n        if (disableListWrap && highlightedIndexRef.current !== -1 || Math.abs(diff) > 1) {\n          return 0;\n        }\n        return maxIndex;\n      }\n      if (newIndex > maxIndex) {\n        if (newIndex === maxIndex + 1 && includeInputInList) {\n          return -1;\n        }\n        if (disableListWrap || Math.abs(diff) > 1) {\n          return maxIndex;\n        }\n        return 0;\n      }\n      return newIndex;\n    };\n    const nextIndex = validOptionIndex(getNextIndex(), direction);\n    setHighlightedIndex({\n      index: nextIndex,\n      reason,\n      event\n    });\n\n    // Sync the content of the input with the highlighted option.\n    if (autoComplete && diff !== 'reset') {\n      if (nextIndex === -1) {\n        inputRef.current.value = inputValue;\n      } else {\n        const option = getOptionLabel(filteredOptions[nextIndex]);\n        inputRef.current.value = option;\n\n        // The portion of the selected suggestion that has not been typed by the user,\n        // a completion string, appears inline after the input cursor in the textbox.\n        const index = option.toLowerCase().indexOf(inputValue.toLowerCase());\n        if (index === 0 && inputValue.length > 0) {\n          inputRef.current.setSelectionRange(inputValue.length, option.length);\n        }\n      }\n    }\n  });\n  const getPreviousHighlightedOptionIndex = () => {\n    const isSameValue = (value1, value2) => {\n      const label1 = value1 ? getOptionLabel(value1) : '';\n      const label2 = value2 ? getOptionLabel(value2) : '';\n      return label1 === label2;\n    };\n    if (highlightedIndexRef.current !== -1 && previousProps.filteredOptions && previousProps.filteredOptions.length !== filteredOptions.length && previousProps.inputValue === inputValue && (multiple ? value.length === previousProps.value.length && previousProps.value.every((val, i) => getOptionLabel(value[i]) === getOptionLabel(val)) : isSameValue(previousProps.value, value))) {\n      const previousHighlightedOption = previousProps.filteredOptions[highlightedIndexRef.current];\n      if (previousHighlightedOption) {\n        return findIndex(filteredOptions, option => {\n          return getOptionLabel(option) === getOptionLabel(previousHighlightedOption);\n        });\n      }\n    }\n    return -1;\n  };\n  const syncHighlightedIndex = React.useCallback(() => {\n    if (!popupOpen) {\n      return;\n    }\n\n    // Check if the previously highlighted option still exists in the updated filtered options list and if the value and inputValue haven't changed\n    // If it exists and the value and the inputValue haven't changed, just update its index, otherwise continue execution\n    const previousHighlightedOptionIndex = getPreviousHighlightedOptionIndex();\n    if (previousHighlightedOptionIndex !== -1) {\n      highlightedIndexRef.current = previousHighlightedOptionIndex;\n      return;\n    }\n    const valueItem = multiple ? value[0] : value;\n\n    // The popup is empty, reset\n    if (filteredOptions.length === 0 || valueItem == null) {\n      changeHighlightedIndex({\n        diff: 'reset'\n      });\n      return;\n    }\n    if (!listboxRef.current) {\n      return;\n    }\n\n    // Synchronize the value with the highlighted index\n    if (valueItem != null) {\n      const currentOption = filteredOptions[highlightedIndexRef.current];\n\n      // Keep the current highlighted index if possible\n      if (multiple && currentOption && findIndex(value, val => isOptionEqualToValue(currentOption, val)) !== -1) {\n        return;\n      }\n      const itemIndex = findIndex(filteredOptions, optionItem => isOptionEqualToValue(optionItem, valueItem));\n      if (itemIndex === -1) {\n        changeHighlightedIndex({\n          diff: 'reset'\n        });\n      } else {\n        setHighlightedIndex({\n          index: itemIndex\n        });\n      }\n      return;\n    }\n\n    // Prevent the highlighted index to leak outside the boundaries.\n    if (highlightedIndexRef.current >= filteredOptions.length - 1) {\n      setHighlightedIndex({\n        index: filteredOptions.length - 1\n      });\n      return;\n    }\n\n    // Restore the focus to the previous index.\n    setHighlightedIndex({\n      index: highlightedIndexRef.current\n    });\n    // Ignore filteredOptions (and options, isOptionEqualToValue, getOptionLabel) not to break the scroll position\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [\n  // Only sync the highlighted index when the option switch between empty and not\n  filteredOptions.length,\n  // Don't sync the highlighted index with the value when multiple\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  multiple ? false : value, filterSelectedOptions, changeHighlightedIndex, setHighlightedIndex, popupOpen, inputValue, multiple]);\n  const handleListboxRef = useEventCallback(node => {\n    setRef(listboxRef, node);\n    if (!node) {\n      return;\n    }\n    syncHighlightedIndex();\n  });\n  if (process.env.NODE_ENV !== 'production') {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useEffect(() => {\n      if (!inputRef.current || inputRef.current.nodeName !== 'INPUT') {\n        if (inputRef.current && inputRef.current.nodeName === 'TEXTAREA') {\n          console.warn([`A textarea element was provided to ${componentName} where input was expected.`, `This is not a supported scenario but it may work under certain conditions.`, `A textarea keyboard navigation may conflict with Autocomplete controls (for example enter and arrow keys).`, `Make sure to test keyboard navigation and add custom event handlers if necessary.`].join('\\n'));\n        } else {\n          console.error([`MUI: Unable to find the input element. It was resolved to ${inputRef.current} while an HTMLInputElement was expected.`, `Instead, ${componentName} expects an input element.`, '', componentName === 'useAutocomplete' ? 'Make sure you have bound getInputProps correctly and that the normal ref/effect resolutions order is guaranteed.' : 'Make sure you have customized the input component correctly.'].join('\\n'));\n        }\n      }\n    }, [componentName]);\n  }\n  React.useEffect(() => {\n    syncHighlightedIndex();\n  }, [syncHighlightedIndex]);\n  const handleOpen = event => {\n    if (open) {\n      return;\n    }\n    setOpenState(true);\n    setInputPristine(true);\n    if (onOpen) {\n      onOpen(event);\n    }\n  };\n  const handleClose = (event, reason) => {\n    if (!open) {\n      return;\n    }\n    setOpenState(false);\n    if (onClose) {\n      onClose(event, reason);\n    }\n  };\n  const handleValue = (event, newValue, reason, details) => {\n    if (multiple) {\n      if (value.length === newValue.length && value.every((val, i) => val === newValue[i])) {\n        return;\n      }\n    } else if (value === newValue) {\n      return;\n    }\n    if (onChange) {\n      onChange(event, newValue, reason, details);\n    }\n    setValueState(newValue);\n  };\n  const isTouch = React.useRef(false);\n  const selectNewValue = function (event, option) {\n    let reasonProp = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'selectOption';\n    let origin = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 'options';\n    let reason = reasonProp;\n    let newValue = option;\n    if (multiple) {\n      newValue = Array.isArray(value) ? value.slice() : [];\n      if (process.env.NODE_ENV !== 'production') {\n        const matches = newValue.filter(val => isOptionEqualToValue(option, val));\n        if (matches.length > 1) {\n          console.error([`MUI: The \\`isOptionEqualToValue\\` method of ${componentName} does not handle the arguments correctly.`, `The component expects a single value to match a given option but found ${matches.length} matches.`].join('\\n'));\n        }\n      }\n      const itemIndex = findIndex(newValue, valueItem => isOptionEqualToValue(option, valueItem));\n      if (itemIndex === -1) {\n        newValue.push(option);\n      } else if (origin !== 'freeSolo') {\n        newValue.splice(itemIndex, 1);\n        reason = 'removeOption';\n      }\n    }\n    resetInputValue(event, newValue);\n    handleValue(event, newValue, reason, {\n      option\n    });\n    if (!disableCloseOnSelect && (!event || !event.ctrlKey && !event.metaKey)) {\n      handleClose(event, reason);\n    }\n    if (blurOnSelect === true || blurOnSelect === 'touch' && isTouch.current || blurOnSelect === 'mouse' && !isTouch.current) {\n      inputRef.current.blur();\n    }\n  };\n  function validTagIndex(index, direction) {\n    if (index === -1) {\n      return -1;\n    }\n    let nextFocus = index;\n    while (true) {\n      // Out of range\n      if (direction === 'next' && nextFocus === value.length || direction === 'previous' && nextFocus === -1) {\n        return -1;\n      }\n      const option = anchorEl.querySelector(`[data-tag-index=\"${nextFocus}\"]`);\n\n      // Same logic as MenuList.js\n      if (!option || !option.hasAttribute('tabindex') || option.disabled || option.getAttribute('aria-disabled') === 'true') {\n        nextFocus += direction === 'next' ? 1 : -1;\n      } else {\n        return nextFocus;\n      }\n    }\n  }\n  const handleFocusTag = (event, direction) => {\n    if (!multiple) {\n      return;\n    }\n    if (inputValue === '') {\n      handleClose(event, 'toggleInput');\n    }\n    let nextTag = focusedTag;\n    if (focusedTag === -1) {\n      if (inputValue === '' && direction === 'previous') {\n        nextTag = value.length - 1;\n      }\n    } else {\n      nextTag += direction === 'next' ? 1 : -1;\n      if (nextTag < 0) {\n        nextTag = 0;\n      }\n      if (nextTag === value.length) {\n        nextTag = -1;\n      }\n    }\n    nextTag = validTagIndex(nextTag, direction);\n    setFocusedTag(nextTag);\n    focusTag(nextTag);\n  };\n  const handleClear = event => {\n    ignoreFocus.current = true;\n    setInputValueState('');\n    if (onInputChange) {\n      onInputChange(event, '', 'clear');\n    }\n    handleValue(event, multiple ? [] : null, 'clear');\n  };\n  const handleKeyDown = other => event => {\n    if (other.onKeyDown) {\n      other.onKeyDown(event);\n    }\n    if (event.defaultMuiPrevented) {\n      return;\n    }\n    if (focusedTag !== -1 && ['ArrowLeft', 'ArrowRight'].indexOf(event.key) === -1) {\n      setFocusedTag(-1);\n      focusTag(-1);\n    }\n\n    // Wait until IME is settled.\n    if (event.which !== 229) {\n      switch (event.key) {\n        case 'Home':\n          if (popupOpen && handleHomeEndKeys) {\n            // Prevent scroll of the page\n            event.preventDefault();\n            changeHighlightedIndex({\n              diff: 'start',\n              direction: 'next',\n              reason: 'keyboard',\n              event\n            });\n          }\n          break;\n        case 'End':\n          if (popupOpen && handleHomeEndKeys) {\n            // Prevent scroll of the page\n            event.preventDefault();\n            changeHighlightedIndex({\n              diff: 'end',\n              direction: 'previous',\n              reason: 'keyboard',\n              event\n            });\n          }\n          break;\n        case 'PageUp':\n          // Prevent scroll of the page\n          event.preventDefault();\n          changeHighlightedIndex({\n            diff: -pageSize,\n            direction: 'previous',\n            reason: 'keyboard',\n            event\n          });\n          handleOpen(event);\n          break;\n        case 'PageDown':\n          // Prevent scroll of the page\n          event.preventDefault();\n          changeHighlightedIndex({\n            diff: pageSize,\n            direction: 'next',\n            reason: 'keyboard',\n            event\n          });\n          handleOpen(event);\n          break;\n        case 'ArrowDown':\n          // Prevent cursor move\n          event.preventDefault();\n          changeHighlightedIndex({\n            diff: 1,\n            direction: 'next',\n            reason: 'keyboard',\n            event\n          });\n          handleOpen(event);\n          break;\n        case 'ArrowUp':\n          // Prevent cursor move\n          event.preventDefault();\n          changeHighlightedIndex({\n            diff: -1,\n            direction: 'previous',\n            reason: 'keyboard',\n            event\n          });\n          handleOpen(event);\n          break;\n        case 'ArrowLeft':\n          handleFocusTag(event, 'previous');\n          break;\n        case 'ArrowRight':\n          handleFocusTag(event, 'next');\n          break;\n        case 'Enter':\n          if (highlightedIndexRef.current !== -1 && popupOpen) {\n            const option = filteredOptions[highlightedIndexRef.current];\n            const disabled = getOptionDisabled ? getOptionDisabled(option) : false;\n\n            // Avoid early form validation, let the end-users continue filling the form.\n            event.preventDefault();\n            if (disabled) {\n              return;\n            }\n            selectNewValue(event, option, 'selectOption');\n\n            // Move the selection to the end.\n            if (autoComplete) {\n              inputRef.current.setSelectionRange(inputRef.current.value.length, inputRef.current.value.length);\n            }\n          } else if (freeSolo && inputValue !== '' && inputValueIsSelectedValue === false) {\n            if (multiple) {\n              // Allow people to add new values before they submit the form.\n              event.preventDefault();\n            }\n            selectNewValue(event, inputValue, 'createOption', 'freeSolo');\n          }\n          break;\n        case 'Escape':\n          if (popupOpen) {\n            // Avoid Opera to exit fullscreen mode.\n            event.preventDefault();\n            // Avoid the Modal to handle the event.\n            event.stopPropagation();\n            handleClose(event, 'escape');\n          } else if (clearOnEscape && (inputValue !== '' || multiple && value.length > 0)) {\n            // Avoid Opera to exit fullscreen mode.\n            event.preventDefault();\n            // Avoid the Modal to handle the event.\n            event.stopPropagation();\n            handleClear(event);\n          }\n          break;\n        case 'Backspace':\n          // Remove the value on the left of the \"cursor\"\n          if (multiple && !readOnly && inputValue === '' && value.length > 0) {\n            const index = focusedTag === -1 ? value.length - 1 : focusedTag;\n            const newValue = value.slice();\n            newValue.splice(index, 1);\n            handleValue(event, newValue, 'removeOption', {\n              option: value[index]\n            });\n          }\n          break;\n        case 'Delete':\n          // Remove the value on the right of the \"cursor\"\n          if (multiple && !readOnly && inputValue === '' && value.length > 0 && focusedTag !== -1) {\n            const index = focusedTag;\n            const newValue = value.slice();\n            newValue.splice(index, 1);\n            handleValue(event, newValue, 'removeOption', {\n              option: value[index]\n            });\n          }\n          break;\n        default:\n      }\n    }\n  };\n  const handleFocus = event => {\n    setFocused(true);\n    if (openOnFocus && !ignoreFocus.current) {\n      handleOpen(event);\n    }\n  };\n  const handleBlur = event => {\n    // Ignore the event when using the scrollbar with IE11\n    if (unstable_isActiveElementInListbox(listboxRef)) {\n      inputRef.current.focus();\n      return;\n    }\n    setFocused(false);\n    firstFocus.current = true;\n    ignoreFocus.current = false;\n    if (autoSelect && highlightedIndexRef.current !== -1 && popupOpen) {\n      selectNewValue(event, filteredOptions[highlightedIndexRef.current], 'blur');\n    } else if (autoSelect && freeSolo && inputValue !== '') {\n      selectNewValue(event, inputValue, 'blur', 'freeSolo');\n    } else if (clearOnBlur) {\n      resetInputValue(event, value);\n    }\n    handleClose(event, 'blur');\n  };\n  const handleInputChange = event => {\n    const newValue = event.target.value;\n    if (inputValue !== newValue) {\n      setInputValueState(newValue);\n      setInputPristine(false);\n      if (onInputChange) {\n        onInputChange(event, newValue, 'input');\n      }\n    }\n    if (newValue === '') {\n      if (!disableClearable && !multiple) {\n        handleValue(event, null, 'clear');\n      }\n    } else {\n      handleOpen(event);\n    }\n  };\n  const handleOptionMouseMove = event => {\n    const index = Number(event.currentTarget.getAttribute('data-option-index'));\n    if (highlightedIndexRef.current !== index) {\n      setHighlightedIndex({\n        event,\n        index,\n        reason: 'mouse'\n      });\n    }\n  };\n  const handleOptionTouchStart = event => {\n    setHighlightedIndex({\n      event,\n      index: Number(event.currentTarget.getAttribute('data-option-index')),\n      reason: 'touch'\n    });\n    isTouch.current = true;\n  };\n  const handleOptionClick = event => {\n    const index = Number(event.currentTarget.getAttribute('data-option-index'));\n    selectNewValue(event, filteredOptions[index], 'selectOption');\n    isTouch.current = false;\n  };\n  const handleTagDelete = index => event => {\n    const newValue = value.slice();\n    newValue.splice(index, 1);\n    handleValue(event, newValue, 'removeOption', {\n      option: value[index]\n    });\n  };\n  const handlePopupIndicator = event => {\n    if (open) {\n      handleClose(event, 'toggleInput');\n    } else {\n      handleOpen(event);\n    }\n  };\n\n  // Prevent input blur when interacting with the combobox\n  const handleMouseDown = event => {\n    // Prevent focusing the input if click is anywhere outside the Autocomplete\n    if (!event.currentTarget.contains(event.target)) {\n      return;\n    }\n    if (event.target.getAttribute('id') !== id) {\n      event.preventDefault();\n    }\n  };\n\n  // Focus the input when interacting with the combobox\n  const handleClick = event => {\n    // Prevent focusing the input if click is anywhere outside the Autocomplete\n    if (!event.currentTarget.contains(event.target)) {\n      return;\n    }\n    inputRef.current.focus();\n    if (selectOnFocus && firstFocus.current && inputRef.current.selectionEnd - inputRef.current.selectionStart === 0) {\n      inputRef.current.select();\n    }\n    firstFocus.current = false;\n  };\n  const handleInputMouseDown = event => {\n    if (!disabledProp && (inputValue === '' || !open)) {\n      handlePopupIndicator(event);\n    }\n  };\n  let dirty = freeSolo && inputValue.length > 0;\n  dirty = dirty || (multiple ? value.length > 0 : value !== null);\n  let groupedOptions = filteredOptions;\n  if (groupBy) {\n    // used to keep track of key and indexes in the result array\n    const indexBy = new Map();\n    let warn = false;\n    groupedOptions = filteredOptions.reduce((acc, option, index) => {\n      const group = groupBy(option);\n      if (acc.length > 0 && acc[acc.length - 1].group === group) {\n        acc[acc.length - 1].options.push(option);\n      } else {\n        if (process.env.NODE_ENV !== 'production') {\n          if (indexBy.get(group) && !warn) {\n            console.warn(`MUI: The options provided combined with the \\`groupBy\\` method of ${componentName} returns duplicated headers.`, 'You can solve the issue by sorting the options with the output of `groupBy`.');\n            warn = true;\n          }\n          indexBy.set(group, true);\n        }\n        acc.push({\n          key: index,\n          index,\n          group,\n          options: [option]\n        });\n      }\n      return acc;\n    }, []);\n  }\n  if (disabledProp && focused) {\n    handleBlur();\n  }\n  return {\n    getRootProps: function () {\n      let other = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      return _extends({\n        'aria-owns': listboxAvailable ? `${id}-listbox` : null\n      }, other, {\n        onKeyDown: handleKeyDown(other),\n        onMouseDown: handleMouseDown,\n        onClick: handleClick\n      });\n    },\n    getInputLabelProps: () => ({\n      id: `${id}-label`,\n      htmlFor: id\n    }),\n    getInputProps: () => ({\n      id,\n      value: inputValue,\n      onBlur: handleBlur,\n      onFocus: handleFocus,\n      onChange: handleInputChange,\n      onMouseDown: handleInputMouseDown,\n      // if open then this is handled imperatively so don't let react override\n      // only have an opinion about this when closed\n      'aria-activedescendant': popupOpen ? '' : null,\n      'aria-autocomplete': autoComplete ? 'both' : 'list',\n      'aria-controls': listboxAvailable ? `${id}-listbox` : undefined,\n      'aria-expanded': listboxAvailable,\n      // Disable browser's suggestion that might overlap with the popup.\n      // Handle autocomplete but not autofill.\n      autoComplete: 'off',\n      ref: inputRef,\n      autoCapitalize: 'none',\n      spellCheck: 'false',\n      role: 'combobox',\n      disabled: disabledProp\n    }),\n    getClearProps: () => ({\n      tabIndex: -1,\n      type: 'button',\n      onClick: handleClear\n    }),\n    getPopupIndicatorProps: () => ({\n      tabIndex: -1,\n      type: 'button',\n      onClick: handlePopupIndicator\n    }),\n    getTagProps: _ref4 => {\n      let {\n        index\n      } = _ref4;\n      return _extends({\n        key: index,\n        'data-tag-index': index,\n        tabIndex: -1\n      }, !readOnly && {\n        onDelete: handleTagDelete(index)\n      });\n    },\n    getListboxProps: () => ({\n      role: 'listbox',\n      id: `${id}-listbox`,\n      'aria-labelledby': `${id}-label`,\n      ref: handleListboxRef,\n      onMouseDown: event => {\n        // Prevent blur\n        event.preventDefault();\n      }\n    }),\n    getOptionProps: _ref5 => {\n      let {\n        index,\n        option\n      } = _ref5;\n      var _getOptionKey;\n      const selected = (multiple ? value : [value]).some(value2 => value2 != null && isOptionEqualToValue(option, value2));\n      const disabled = getOptionDisabled ? getOptionDisabled(option) : false;\n      return {\n        key: (_getOptionKey = getOptionKey == null ? void 0 : getOptionKey(option)) != null ? _getOptionKey : getOptionLabel(option),\n        tabIndex: -1,\n        role: 'option',\n        id: `${id}-option-${index}`,\n        onMouseMove: handleOptionMouseMove,\n        onClick: handleOptionClick,\n        onTouchStart: handleOptionTouchStart,\n        'data-option-index': index,\n        'aria-disabled': disabled,\n        'aria-selected': selected\n      };\n    },\n    id,\n    inputValue,\n    value,\n    dirty,\n    expanded: popupOpen && anchorEl,\n    popupOpen,\n    focused: focused || focusedTag !== -1,\n    anchorEl,\n    setAnchorEl,\n    focusedTag,\n    groupedOptions\n  };\n}\nexport default useAutocomplete;","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getListSubheaderUtilityClass(slot) {\n  return generateUtilityClass('MuiListSubheader', slot);\n}\nconst listSubheaderClasses = generateUtilityClasses('MuiListSubheader', ['root', 'colorPrimary', 'colorInherit', 'gutters', 'inset', 'sticky']);\nexport default listSubheaderClasses;","'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\", \"color\", \"component\", \"disableGutters\", \"disableSticky\", \"inset\"];\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport styled from '../styles/styled';\nimport { useDefaultProps } from '../DefaultPropsProvider';\nimport capitalize from '../utils/capitalize';\nimport { getListSubheaderUtilityClass } from './listSubheaderClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    color,\n    disableGutters,\n    inset,\n    disableSticky\n  } = ownerState;\n  const slots = {\n    root: ['root', color !== 'default' && `color${capitalize(color)}`, !disableGutters && 'gutters', inset && 'inset', !disableSticky && 'sticky']\n  };\n  return composeClasses(slots, getListSubheaderUtilityClass, classes);\n};\nconst ListSubheaderRoot = styled('li', {\n  name: 'MuiListSubheader',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.color !== 'default' && styles[`color${capitalize(ownerState.color)}`], !ownerState.disableGutters && styles.gutters, ownerState.inset && styles.inset, !ownerState.disableSticky && styles.sticky];\n  }\n})(_ref => {\n  let {\n    theme,\n    ownerState\n  } = _ref;\n  return _extends({\n    boxSizing: 'border-box',\n    lineHeight: '48px',\n    listStyle: 'none',\n    color: (theme.vars || theme).palette.text.secondary,\n    fontFamily: theme.typography.fontFamily,\n    fontWeight: theme.typography.fontWeightMedium,\n    fontSize: theme.typography.pxToRem(14)\n  }, ownerState.color === 'primary' && {\n    color: (theme.vars || theme).palette.primary.main\n  }, ownerState.color === 'inherit' && {\n    color: 'inherit'\n  }, !ownerState.disableGutters && {\n    paddingLeft: 16,\n    paddingRight: 16\n  }, ownerState.inset && {\n    paddingLeft: 72\n  }, !ownerState.disableSticky && {\n    position: 'sticky',\n    top: 0,\n    zIndex: 1,\n    backgroundColor: (theme.vars || theme).palette.background.paper\n  });\n});\nconst ListSubheader = /*#__PURE__*/React.forwardRef(function ListSubheader(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiListSubheader'\n  });\n  const {\n      className,\n      color = 'default',\n      component = 'li',\n      disableGutters = false,\n      disableSticky = false,\n      inset = false\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    color,\n    component,\n    disableGutters,\n    disableSticky,\n    inset\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(ListSubheaderRoot, _extends({\n    as: component,\n    className: clsx(classes.root, className),\n    ref: ref,\n    ownerState: ownerState\n  }, other));\n});\nListSubheader.muiSkipListHighlight = true;\nprocess.env.NODE_ENV !== \"production\" ? void 0 : void 0;\nexport default ListSubheader;","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getAutocompleteUtilityClass(slot) {\n  return generateUtilityClass('MuiAutocomplete', slot);\n}\nconst autocompleteClasses = generateUtilityClasses('MuiAutocomplete', ['root', 'expanded', 'fullWidth', 'focused', 'focusVisible', 'tag', 'tagSizeSmall', 'tagSizeMedium', 'hasPopupIcon', 'hasClearIcon', 'inputRoot', 'input', 'inputFocused', 'endAdornment', 'clearIndicator', 'popupIndicator', 'popupIndicatorOpen', 'popper', 'popperDisablePortal', 'paper', 'listbox', 'loading', 'noOptions', 'option', 'groupLabel', 'groupUl']);\nexport default autocompleteClasses;","'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nvar _ClearIcon, _ArrowDropDownIcon;\nconst _excluded = [\"autoComplete\", \"autoHighlight\", \"autoSelect\", \"blurOnSelect\", \"ChipProps\", \"className\", \"clearIcon\", \"clearOnBlur\", \"clearOnEscape\", \"clearText\", \"closeText\", \"componentsProps\", \"defaultValue\", \"disableClearable\", \"disableCloseOnSelect\", \"disabled\", \"disabledItemsFocusable\", \"disableListWrap\", \"disablePortal\", \"filterOptions\", \"filterSelectedOptions\", \"forcePopupIcon\", \"freeSolo\", \"fullWidth\", \"getLimitTagsText\", \"getOptionDisabled\", \"getOptionKey\", \"getOptionLabel\", \"isOptionEqualToValue\", \"groupBy\", \"handleHomeEndKeys\", \"id\", \"includeInputInList\", \"inputValue\", \"limitTags\", \"ListboxComponent\", \"ListboxProps\", \"loading\", \"loadingText\", \"multiple\", \"noOptionsText\", \"onChange\", \"onClose\", \"onHighlightChange\", \"onInputChange\", \"onOpen\", \"open\", \"openOnFocus\", \"openText\", \"options\", \"PaperComponent\", \"PopperComponent\", \"popupIcon\", \"readOnly\", \"renderGroup\", \"renderInput\", \"renderOption\", \"renderTags\", \"selectOnFocus\", \"size\", \"slotProps\", \"value\"],\n  _excluded2 = [\"ref\"],\n  _excluded3 = [\"key\"],\n  _excluded4 = [\"key\"];\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport integerPropType from '@mui/utils/integerPropType';\nimport chainPropTypes from '@mui/utils/chainPropTypes';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { alpha } from '@mui/system/colorManipulator';\nimport useAutocomplete, { createFilterOptions } from '../useAutocomplete';\nimport Popper from '../Popper';\nimport ListSubheader from '../ListSubheader';\nimport Paper from '../Paper';\nimport IconButton from '../IconButton';\nimport Chip from '../Chip';\nimport inputClasses from '../Input/inputClasses';\nimport inputBaseClasses from '../InputBase/inputBaseClasses';\nimport outlinedInputClasses from '../OutlinedInput/outlinedInputClasses';\nimport filledInputClasses from '../FilledInput/filledInputClasses';\nimport ClearIcon from '../internal/svg-icons/Close';\nimport ArrowDropDownIcon from '../internal/svg-icons/ArrowDropDown';\nimport { styled } from '../zero-styled';\nimport { useDefaultProps } from '../DefaultPropsProvider';\nimport autocompleteClasses, { getAutocompleteUtilityClass } from './autocompleteClasses';\nimport capitalize from '../utils/capitalize';\nimport useForkRef from '../utils/useForkRef';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    disablePortal,\n    expanded,\n    focused,\n    fullWidth,\n    hasClearIcon,\n    hasPopupIcon,\n    inputFocused,\n    popupOpen,\n    size\n  } = ownerState;\n  const slots = {\n    root: ['root', expanded && 'expanded', focused && 'focused', fullWidth && 'fullWidth', hasClearIcon && 'hasClearIcon', hasPopupIcon && 'hasPopupIcon'],\n    inputRoot: ['inputRoot'],\n    input: ['input', inputFocused && 'inputFocused'],\n    tag: ['tag', `tagSize${capitalize(size)}`],\n    endAdornment: ['endAdornment'],\n    clearIndicator: ['clearIndicator'],\n    popupIndicator: ['popupIndicator', popupOpen && 'popupIndicatorOpen'],\n    popper: ['popper', disablePortal && 'popperDisablePortal'],\n    paper: ['paper'],\n    listbox: ['listbox'],\n    loading: ['loading'],\n    noOptions: ['noOptions'],\n    option: ['option'],\n    groupLabel: ['groupLabel'],\n    groupUl: ['groupUl']\n  };\n  return composeClasses(slots, getAutocompleteUtilityClass, classes);\n};\nconst AutocompleteRoot = styled('div', {\n  name: 'MuiAutocomplete',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    const {\n      fullWidth,\n      hasClearIcon,\n      hasPopupIcon,\n      inputFocused,\n      size\n    } = ownerState;\n    return [{\n      [`& .${autocompleteClasses.tag}`]: styles.tag\n    }, {\n      [`& .${autocompleteClasses.tag}`]: styles[`tagSize${capitalize(size)}`]\n    }, {\n      [`& .${autocompleteClasses.inputRoot}`]: styles.inputRoot\n    }, {\n      [`& .${autocompleteClasses.input}`]: styles.input\n    }, {\n      [`& .${autocompleteClasses.input}`]: inputFocused && styles.inputFocused\n    }, styles.root, fullWidth && styles.fullWidth, hasPopupIcon && styles.hasPopupIcon, hasClearIcon && styles.hasClearIcon];\n  }\n})({\n  [`&.${autocompleteClasses.focused} .${autocompleteClasses.clearIndicator}`]: {\n    visibility: 'visible'\n  },\n  /* Avoid double tap issue on iOS */\n  '@media (pointer: fine)': {\n    [`&:hover .${autocompleteClasses.clearIndicator}`]: {\n      visibility: 'visible'\n    }\n  },\n  [`& .${autocompleteClasses.tag}`]: {\n    margin: 3,\n    maxWidth: 'calc(100% - 6px)'\n  },\n  [`& .${autocompleteClasses.inputRoot}`]: {\n    [`.${autocompleteClasses.hasPopupIcon}&, .${autocompleteClasses.hasClearIcon}&`]: {\n      paddingRight: 26 + 4\n    },\n    [`.${autocompleteClasses.hasPopupIcon}.${autocompleteClasses.hasClearIcon}&`]: {\n      paddingRight: 52 + 4\n    },\n    [`& .${autocompleteClasses.input}`]: {\n      width: 0,\n      minWidth: 30\n    }\n  },\n  [`& .${inputClasses.root}`]: {\n    paddingBottom: 1,\n    '& .MuiInput-input': {\n      padding: '4px 4px 4px 0px'\n    }\n  },\n  [`& .${inputClasses.root}.${inputBaseClasses.sizeSmall}`]: {\n    [`& .${inputClasses.input}`]: {\n      padding: '2px 4px 3px 0'\n    }\n  },\n  [`& .${outlinedInputClasses.root}`]: {\n    padding: 9,\n    [`.${autocompleteClasses.hasPopupIcon}&, .${autocompleteClasses.hasClearIcon}&`]: {\n      paddingRight: 26 + 4 + 9\n    },\n    [`.${autocompleteClasses.hasPopupIcon}.${autocompleteClasses.hasClearIcon}&`]: {\n      paddingRight: 52 + 4 + 9\n    },\n    [`& .${autocompleteClasses.input}`]: {\n      padding: '7.5px 4px 7.5px 5px'\n    },\n    [`& .${autocompleteClasses.endAdornment}`]: {\n      right: 9\n    }\n  },\n  [`& .${outlinedInputClasses.root}.${inputBaseClasses.sizeSmall}`]: {\n    // Don't specify paddingRight, as it overrides the default value set when there is only\n    // one of the popup or clear icon as the specificity is equal so the latter one wins\n    paddingTop: 6,\n    paddingBottom: 6,\n    paddingLeft: 6,\n    [`& .${autocompleteClasses.input}`]: {\n      padding: '2.5px 4px 2.5px 8px'\n    }\n  },\n  [`& .${filledInputClasses.root}`]: {\n    paddingTop: 19,\n    paddingLeft: 8,\n    [`.${autocompleteClasses.hasPopupIcon}&, .${autocompleteClasses.hasClearIcon}&`]: {\n      paddingRight: 26 + 4 + 9\n    },\n    [`.${autocompleteClasses.hasPopupIcon}.${autocompleteClasses.hasClearIcon}&`]: {\n      paddingRight: 52 + 4 + 9\n    },\n    [`& .${filledInputClasses.input}`]: {\n      padding: '7px 4px'\n    },\n    [`& .${autocompleteClasses.endAdornment}`]: {\n      right: 9\n    }\n  },\n  [`& .${filledInputClasses.root}.${inputBaseClasses.sizeSmall}`]: {\n    paddingBottom: 1,\n    [`& .${filledInputClasses.input}`]: {\n      padding: '2.5px 4px'\n    }\n  },\n  [`& .${inputBaseClasses.hiddenLabel}`]: {\n    paddingTop: 8\n  },\n  [`& .${filledInputClasses.root}.${inputBaseClasses.hiddenLabel}`]: {\n    paddingTop: 0,\n    paddingBottom: 0,\n    [`& .${autocompleteClasses.input}`]: {\n      paddingTop: 16,\n      paddingBottom: 17\n    }\n  },\n  [`& .${filledInputClasses.root}.${inputBaseClasses.hiddenLabel}.${inputBaseClasses.sizeSmall}`]: {\n    [`& .${autocompleteClasses.input}`]: {\n      paddingTop: 8,\n      paddingBottom: 9\n    }\n  },\n  [`& .${autocompleteClasses.input}`]: {\n    flexGrow: 1,\n    textOverflow: 'ellipsis',\n    opacity: 0\n  },\n  variants: [{\n    props: {\n      fullWidth: true\n    },\n    style: {\n      width: '100%'\n    }\n  }, {\n    props: {\n      size: 'small'\n    },\n    style: {\n      [`& .${autocompleteClasses.tag}`]: {\n        margin: 2,\n        maxWidth: 'calc(100% - 4px)'\n      }\n    }\n  }, {\n    props: {\n      inputFocused: true\n    },\n    style: {\n      [`& .${autocompleteClasses.input}`]: {\n        opacity: 1\n      }\n    }\n  }, {\n    props: {\n      multiple: true\n    },\n    style: {\n      [`& .${autocompleteClasses.inputRoot}`]: {\n        flexWrap: 'wrap'\n      }\n    }\n  }]\n});\nconst AutocompleteEndAdornment = styled('div', {\n  name: 'MuiAutocomplete',\n  slot: 'EndAdornment',\n  overridesResolver: (props, styles) => styles.endAdornment\n})({\n  // We use a position absolute to support wrapping tags.\n  position: 'absolute',\n  right: 0,\n  top: '50%',\n  transform: 'translate(0, -50%)'\n});\nconst AutocompleteClearIndicator = styled(IconButton, {\n  name: 'MuiAutocomplete',\n  slot: 'ClearIndicator',\n  overridesResolver: (props, styles) => styles.clearIndicator\n})({\n  marginRight: -2,\n  padding: 4,\n  visibility: 'hidden'\n});\nconst AutocompletePopupIndicator = styled(IconButton, {\n  name: 'MuiAutocomplete',\n  slot: 'PopupIndicator',\n  overridesResolver: (_ref, styles) => {\n    let {\n      ownerState\n    } = _ref;\n    return _extends({}, styles.popupIndicator, ownerState.popupOpen && styles.popupIndicatorOpen);\n  }\n})({\n  padding: 2,\n  marginRight: -2,\n  variants: [{\n    props: {\n      popupOpen: true\n    },\n    style: {\n      transform: 'rotate(180deg)'\n    }\n  }]\n});\nconst AutocompletePopper = styled(Popper, {\n  name: 'MuiAutocomplete',\n  slot: 'Popper',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [{\n      [`& .${autocompleteClasses.option}`]: styles.option\n    }, styles.popper, ownerState.disablePortal && styles.popperDisablePortal];\n  }\n})(_ref2 => {\n  let {\n    theme\n  } = _ref2;\n  return {\n    zIndex: (theme.vars || theme).zIndex.modal,\n    variants: [{\n      props: {\n        disablePortal: true\n      },\n      style: {\n        position: 'absolute'\n      }\n    }]\n  };\n});\nconst AutocompletePaper = styled(Paper, {\n  name: 'MuiAutocomplete',\n  slot: 'Paper',\n  overridesResolver: (props, styles) => styles.paper\n})(_ref3 => {\n  let {\n    theme\n  } = _ref3;\n  return _extends({}, theme.typography.body1, {\n    overflow: 'auto'\n  });\n});\nconst AutocompleteLoading = styled('div', {\n  name: 'MuiAutocomplete',\n  slot: 'Loading',\n  overridesResolver: (props, styles) => styles.loading\n})(_ref4 => {\n  let {\n    theme\n  } = _ref4;\n  return {\n    color: (theme.vars || theme).palette.text.secondary,\n    padding: '14px 16px'\n  };\n});\nconst AutocompleteNoOptions = styled('div', {\n  name: 'MuiAutocomplete',\n  slot: 'NoOptions',\n  overridesResolver: (props, styles) => styles.noOptions\n})(_ref5 => {\n  let {\n    theme\n  } = _ref5;\n  return {\n    color: (theme.vars || theme).palette.text.secondary,\n    padding: '14px 16px'\n  };\n});\nconst AutocompleteListbox = styled('div', {\n  name: 'MuiAutocomplete',\n  slot: 'Listbox',\n  overridesResolver: (props, styles) => styles.listbox\n})(_ref6 => {\n  let {\n    theme\n  } = _ref6;\n  return {\n    listStyle: 'none',\n    margin: 0,\n    padding: '8px 0',\n    maxHeight: '40vh',\n    overflow: 'auto',\n    position: 'relative',\n    [`& .${autocompleteClasses.option}`]: {\n      minHeight: 48,\n      display: 'flex',\n      overflow: 'hidden',\n      justifyContent: 'flex-start',\n      alignItems: 'center',\n      cursor: 'pointer',\n      paddingTop: 6,\n      boxSizing: 'border-box',\n      outline: '0',\n      WebkitTapHighlightColor: 'transparent',\n      paddingBottom: 6,\n      paddingLeft: 16,\n      paddingRight: 16,\n      [theme.breakpoints.up('sm')]: {\n        minHeight: 'auto'\n      },\n      [`&.${autocompleteClasses.focused}`]: {\n        backgroundColor: (theme.vars || theme).palette.action.hover,\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        }\n      },\n      '&[aria-disabled=\"true\"]': {\n        opacity: (theme.vars || theme).palette.action.disabledOpacity,\n        pointerEvents: 'none'\n      },\n      [`&.${autocompleteClasses.focusVisible}`]: {\n        backgroundColor: (theme.vars || theme).palette.action.focus\n      },\n      '&[aria-selected=\"true\"]': {\n        backgroundColor: theme.vars ? `rgba(${theme.vars.palette.primary.mainChannel} / ${theme.vars.palette.action.selectedOpacity})` : alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity),\n        [`&.${autocompleteClasses.focused}`]: {\n          backgroundColor: theme.vars ? `rgba(${theme.vars.palette.primary.mainChannel} / calc(${theme.vars.palette.action.selectedOpacity} + ${theme.vars.palette.action.hoverOpacity}))` : alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity + theme.palette.action.hoverOpacity),\n          // Reset on touch devices, it doesn't add specificity\n          '@media (hover: none)': {\n            backgroundColor: (theme.vars || theme).palette.action.selected\n          }\n        },\n        [`&.${autocompleteClasses.focusVisible}`]: {\n          backgroundColor: theme.vars ? `rgba(${theme.vars.palette.primary.mainChannel} / calc(${theme.vars.palette.action.selectedOpacity} + ${theme.vars.palette.action.focusOpacity}))` : alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity + theme.palette.action.focusOpacity)\n        }\n      }\n    }\n  };\n});\nconst AutocompleteGroupLabel = styled(ListSubheader, {\n  name: 'MuiAutocomplete',\n  slot: 'GroupLabel',\n  overridesResolver: (props, styles) => styles.groupLabel\n})(_ref7 => {\n  let {\n    theme\n  } = _ref7;\n  return {\n    backgroundColor: (theme.vars || theme).palette.background.paper,\n    top: -8\n  };\n});\nconst AutocompleteGroupUl = styled('ul', {\n  name: 'MuiAutocomplete',\n  slot: 'GroupUl',\n  overridesResolver: (props, styles) => styles.groupUl\n})({\n  padding: 0,\n  [`& .${autocompleteClasses.option}`]: {\n    paddingLeft: 24\n  }\n});\nexport { createFilterOptions };\nconst Autocomplete = /*#__PURE__*/React.forwardRef(function Autocomplete(inProps, ref) {\n  var _slotProps$clearIndic, _slotProps$paper, _slotProps$popper, _slotProps$popupIndic;\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiAutocomplete'\n  });\n\n  /* eslint-disable @typescript-eslint/no-unused-vars */\n  const {\n      autoComplete = false,\n      autoHighlight = false,\n      autoSelect = false,\n      blurOnSelect = false,\n      ChipProps,\n      className,\n      clearIcon = _ClearIcon || (_ClearIcon = /*#__PURE__*/_jsx(ClearIcon, {\n        fontSize: \"small\"\n      })),\n      clearOnBlur = !props.freeSolo,\n      clearOnEscape = false,\n      clearText = 'Clear',\n      closeText = 'Close',\n      componentsProps = {},\n      defaultValue = props.multiple ? [] : null,\n      disableClearable = false,\n      disableCloseOnSelect = false,\n      disabled = false,\n      disabledItemsFocusable = false,\n      disableListWrap = false,\n      disablePortal = false,\n      filterSelectedOptions = false,\n      forcePopupIcon = 'auto',\n      freeSolo = false,\n      fullWidth = false,\n      getLimitTagsText = more => `+${more}`,\n      getOptionLabel: getOptionLabelProp,\n      groupBy,\n      handleHomeEndKeys = !props.freeSolo,\n      includeInputInList = false,\n      limitTags = -1,\n      ListboxComponent = 'ul',\n      ListboxProps,\n      loading = false,\n      loadingText = 'Loading…',\n      multiple = false,\n      noOptionsText = 'No options',\n      openOnFocus = false,\n      openText = 'Open',\n      PaperComponent = Paper,\n      PopperComponent = Popper,\n      popupIcon = _ArrowDropDownIcon || (_ArrowDropDownIcon = /*#__PURE__*/_jsx(ArrowDropDownIcon, {})),\n      readOnly = false,\n      renderGroup: renderGroupProp,\n      renderInput,\n      renderOption: renderOptionProp,\n      renderTags,\n      selectOnFocus = !props.freeSolo,\n      size = 'medium',\n      slotProps = {}\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  /* eslint-enable @typescript-eslint/no-unused-vars */\n\n  const {\n    getRootProps,\n    getInputProps,\n    getInputLabelProps,\n    getPopupIndicatorProps,\n    getClearProps,\n    getTagProps,\n    getListboxProps,\n    getOptionProps,\n    value,\n    dirty,\n    expanded,\n    id,\n    popupOpen,\n    focused,\n    focusedTag,\n    anchorEl,\n    setAnchorEl,\n    inputValue,\n    groupedOptions\n  } = useAutocomplete(_extends({}, props, {\n    componentName: 'Autocomplete'\n  }));\n  const hasClearIcon = !disableClearable && !disabled && dirty && !readOnly;\n  const hasPopupIcon = (!freeSolo || forcePopupIcon === true) && forcePopupIcon !== false;\n  const {\n    onMouseDown: handleInputMouseDown\n  } = getInputProps();\n  const {\n    ref: externalListboxRef\n  } = ListboxProps != null ? ListboxProps : {};\n  const _getListboxProps = getListboxProps(),\n    {\n      ref: listboxRef\n    } = _getListboxProps,\n    otherListboxProps = _objectWithoutPropertiesLoose(_getListboxProps, _excluded2);\n  const combinedListboxRef = useForkRef(listboxRef, externalListboxRef);\n  const defaultGetOptionLabel = option => {\n    var _option$label;\n    return (_option$label = option.label) != null ? _option$label : option;\n  };\n  const getOptionLabel = getOptionLabelProp || defaultGetOptionLabel;\n\n  // If you modify this, make sure to keep the `AutocompleteOwnerState` type in sync.\n  const ownerState = _extends({}, props, {\n    disablePortal,\n    expanded,\n    focused,\n    fullWidth,\n    getOptionLabel,\n    hasClearIcon,\n    hasPopupIcon,\n    inputFocused: focusedTag === -1,\n    popupOpen,\n    size\n  });\n  const classes = useUtilityClasses(ownerState);\n  let startAdornment;\n  if (multiple && value.length > 0) {\n    const getCustomizedTagProps = params => _extends({\n      className: classes.tag,\n      disabled\n    }, getTagProps(params));\n    if (renderTags) {\n      startAdornment = renderTags(value, getCustomizedTagProps, ownerState);\n    } else {\n      startAdornment = value.map((option, index) => {\n        const _getCustomizedTagProp = getCustomizedTagProps({\n            index\n          }),\n          {\n            key\n          } = _getCustomizedTagProp,\n          customTagProps = _objectWithoutPropertiesLoose(_getCustomizedTagProp, _excluded3);\n        return /*#__PURE__*/_jsx(Chip, _extends({\n          label: getOptionLabel(option),\n          size: size\n        }, customTagProps, ChipProps), key);\n      });\n    }\n  }\n  if (limitTags > -1 && Array.isArray(startAdornment)) {\n    const more = startAdornment.length - limitTags;\n    if (!focused && more > 0) {\n      startAdornment = startAdornment.splice(0, limitTags);\n      startAdornment.push(/*#__PURE__*/_jsx(\"span\", {\n        className: classes.tag,\n        children: getLimitTagsText(more)\n      }, startAdornment.length));\n    }\n  }\n  const defaultRenderGroup = params => /*#__PURE__*/_jsxs(\"li\", {\n    children: [/*#__PURE__*/_jsx(AutocompleteGroupLabel, {\n      className: classes.groupLabel,\n      ownerState: ownerState,\n      component: \"div\",\n      children: params.group\n    }), /*#__PURE__*/_jsx(AutocompleteGroupUl, {\n      className: classes.groupUl,\n      ownerState: ownerState,\n      children: params.children\n    })]\n  }, params.key);\n  const renderGroup = renderGroupProp || defaultRenderGroup;\n  const defaultRenderOption = (props2, option) => {\n    // Need to clearly apply key because of https://github.com/vercel/next.js/issues/55642\n    const {\n        key\n      } = props2,\n      otherProps = _objectWithoutPropertiesLoose(props2, _excluded4);\n    return /*#__PURE__*/_jsx(\"li\", _extends({}, otherProps, {\n      children: getOptionLabel(option)\n    }), key);\n  };\n  const renderOption = renderOptionProp || defaultRenderOption;\n  const renderListOption = (option, index) => {\n    const optionProps = getOptionProps({\n      option,\n      index\n    });\n    return renderOption(_extends({}, optionProps, {\n      className: classes.option\n    }), option, {\n      selected: optionProps['aria-selected'],\n      index,\n      inputValue\n    }, ownerState);\n  };\n  const clearIndicatorSlotProps = (_slotProps$clearIndic = slotProps.clearIndicator) != null ? _slotProps$clearIndic : componentsProps.clearIndicator;\n  const paperSlotProps = (_slotProps$paper = slotProps.paper) != null ? _slotProps$paper : componentsProps.paper;\n  const popperSlotProps = (_slotProps$popper = slotProps.popper) != null ? _slotProps$popper : componentsProps.popper;\n  const popupIndicatorSlotProps = (_slotProps$popupIndic = slotProps.popupIndicator) != null ? _slotProps$popupIndic : componentsProps.popupIndicator;\n  const renderAutocompletePopperChildren = children => /*#__PURE__*/_jsx(AutocompletePopper, _extends({\n    as: PopperComponent,\n    disablePortal: disablePortal,\n    style: {\n      width: anchorEl ? anchorEl.clientWidth : null\n    },\n    ownerState: ownerState,\n    role: \"presentation\",\n    anchorEl: anchorEl,\n    open: popupOpen\n  }, popperSlotProps, {\n    className: clsx(classes.popper, popperSlotProps == null ? void 0 : popperSlotProps.className),\n    children: /*#__PURE__*/_jsx(AutocompletePaper, _extends({\n      ownerState: ownerState,\n      as: PaperComponent\n    }, paperSlotProps, {\n      className: clsx(classes.paper, paperSlotProps == null ? void 0 : paperSlotProps.className),\n      children: children\n    }))\n  }));\n  let autocompletePopper = null;\n  if (groupedOptions.length > 0) {\n    autocompletePopper = renderAutocompletePopperChildren(/*#__PURE__*/_jsx(AutocompleteListbox, _extends({\n      as: ListboxComponent,\n      className: classes.listbox,\n      ownerState: ownerState\n    }, otherListboxProps, ListboxProps, {\n      ref: combinedListboxRef,\n      children: groupedOptions.map((option, index) => {\n        if (groupBy) {\n          return renderGroup({\n            key: option.key,\n            group: option.group,\n            children: option.options.map((option2, index2) => renderListOption(option2, option.index + index2))\n          });\n        }\n        return renderListOption(option, index);\n      })\n    })));\n  } else if (loading && groupedOptions.length === 0) {\n    autocompletePopper = renderAutocompletePopperChildren(/*#__PURE__*/_jsx(AutocompleteLoading, {\n      className: classes.loading,\n      ownerState: ownerState,\n      children: loadingText\n    }));\n  } else if (groupedOptions.length === 0 && !freeSolo && !loading) {\n    autocompletePopper = renderAutocompletePopperChildren(/*#__PURE__*/_jsx(AutocompleteNoOptions, {\n      className: classes.noOptions,\n      ownerState: ownerState,\n      role: \"presentation\",\n      onMouseDown: event => {\n        // Prevent input blur when interacting with the \"no options\" content\n        event.preventDefault();\n      },\n      children: noOptionsText\n    }));\n  }\n  return /*#__PURE__*/_jsxs(React.Fragment, {\n    children: [/*#__PURE__*/_jsx(AutocompleteRoot, _extends({\n      ref: ref,\n      className: clsx(classes.root, className),\n      ownerState: ownerState\n    }, getRootProps(other), {\n      children: renderInput({\n        id,\n        disabled,\n        fullWidth: true,\n        size: size === 'small' ? 'small' : undefined,\n        InputLabelProps: getInputLabelProps(),\n        InputProps: _extends({\n          ref: setAnchorEl,\n          className: classes.inputRoot,\n          startAdornment,\n          onClick: event => {\n            if (event.target === event.currentTarget) {\n              handleInputMouseDown(event);\n            }\n          }\n        }, (hasClearIcon || hasPopupIcon) && {\n          endAdornment: /*#__PURE__*/_jsxs(AutocompleteEndAdornment, {\n            className: classes.endAdornment,\n            ownerState: ownerState,\n            children: [hasClearIcon ? /*#__PURE__*/_jsx(AutocompleteClearIndicator, _extends({}, getClearProps(), {\n              \"aria-label\": clearText,\n              title: clearText,\n              ownerState: ownerState\n            }, clearIndicatorSlotProps, {\n              className: clsx(classes.clearIndicator, clearIndicatorSlotProps == null ? void 0 : clearIndicatorSlotProps.className),\n              children: clearIcon\n            })) : null, hasPopupIcon ? /*#__PURE__*/_jsx(AutocompletePopupIndicator, _extends({}, getPopupIndicatorProps(), {\n              disabled: disabled,\n              \"aria-label\": popupOpen ? closeText : openText,\n              title: popupOpen ? closeText : openText,\n              ownerState: ownerState\n            }, popupIndicatorSlotProps, {\n              className: clsx(classes.popupIndicator, popupIndicatorSlotProps == null ? void 0 : popupIndicatorSlotProps.className),\n              children: popupIcon\n            })) : null]\n          })\n        }),\n        inputProps: _extends({\n          className: classes.input,\n          disabled,\n          readOnly\n        }, getInputProps())\n      })\n    })), anchorEl ? autocompletePopper : null]\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? void 0 : void 0;\nexport default Autocomplete;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"item\", \"applyValue\", \"type\", \"apiRef\", \"focusElementRef\", \"color\", \"error\", \"helperText\", \"size\", \"variant\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport Autocomplete from '@mui/material/Autocomplete';\nimport Chip from '@mui/material/Chip';\nimport { unstable_useId as useId } from '@mui/material/utils';\nimport { useGridRootProps } from '../../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction GridFilterInputMultipleValue(props) {\n  const {\n      item,\n      applyValue,\n      type,\n      apiRef,\n      focusElementRef,\n      color,\n      error,\n      helperText,\n      size,\n      variant\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const TextFieldProps = {\n    color,\n    error,\n    helperText,\n    size,\n    variant\n  };\n  const [filterValueState, setFilterValueState] = React.useState(item.value || []);\n  const id = useId();\n  const rootProps = useGridRootProps();\n  React.useEffect(() => {\n    var _item$value;\n    const itemValue = (_item$value = item.value) != null ? _item$value : [];\n    setFilterValueState(itemValue.map(String));\n  }, [item.value]);\n  const handleChange = React.useCallback((event, value) => {\n    setFilterValueState(value.map(String));\n    applyValue(_extends({}, item, {\n      value: [...value]\n    }));\n  }, [applyValue, item]);\n  return /*#__PURE__*/_jsx(Autocomplete, _extends({\n    multiple: true,\n    freeSolo: true,\n    options: [],\n    filterOptions: (options, params) => {\n      const {\n        inputValue\n      } = params;\n      return inputValue == null || inputValue === '' ? [] : [inputValue];\n    },\n    id: id,\n    value: filterValueState,\n    onChange: handleChange,\n    renderTags: (value, getTagProps) => value.map((option, index) => /*#__PURE__*/_jsx(Chip, _extends({\n      variant: \"outlined\",\n      size: \"small\",\n      label: option\n    }, getTagProps({\n      index\n    })))),\n    renderInput: params => {\n      var _rootProps$components;\n      return /*#__PURE__*/_jsx(rootProps.components.BaseTextField, _extends({}, params, {\n        label: apiRef.current.getLocaleText('filterPanelInputLabel'),\n        placeholder: apiRef.current.getLocaleText('filterPanelInputPlaceholder'),\n        InputLabelProps: _extends({}, params.InputLabelProps, {\n          shrink: true\n        }),\n        inputRef: focusElementRef,\n        type: type || 'text'\n      }, TextFieldProps, (_rootProps$components = rootProps.componentsProps) == null ? void 0 : _rootProps$components.baseTextField));\n    }\n  }, other));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridFilterInputMultipleValue.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  apiRef: PropTypes.shape({\n    current: PropTypes.object.isRequired\n  }).isRequired,\n  applyValue: PropTypes.func.isRequired,\n  focusElementRef: PropTypes\n  /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.func, PropTypes.object]),\n  item: PropTypes.shape({\n    columnField: PropTypes.string.isRequired,\n    id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    operatorValue: PropTypes.string,\n    value: PropTypes.any\n  }).isRequired,\n  type: PropTypes.oneOf(['number', 'text'])\n} : void 0;\nexport { GridFilterInputMultipleValue };","import { GridFilterInputValue } from '../components/panel/filterPanel/GridFilterInputValue';\nimport { escapeRegExp } from '../utils/utils';\nimport { GridFilterInputMultipleValue } from '../components/panel/filterPanel/GridFilterInputMultipleValue';\nexport const getGridStringQuickFilterFn = value => {\n  if (!value) {\n    return null;\n  }\n  const filterRegex = new RegExp(escapeRegExp(value), 'i');\n  return _ref => {\n    let {\n      value: columnValue\n    } = _ref;\n    return columnValue != null ? filterRegex.test(columnValue.toString()) : false;\n  };\n};\nexport const getGridStringOperators = function () {\n  let disableTrim = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n  return [{\n    value: 'contains',\n    getApplyFilterFn: filterItem => {\n      if (!filterItem.value) {\n        return null;\n      }\n      const filterItemValue = disableTrim ? filterItem.value : filterItem.value.trim();\n      const filterRegex = new RegExp(escapeRegExp(filterItemValue), 'i');\n      return _ref2 => {\n        let {\n          value\n        } = _ref2;\n        return value != null ? filterRegex.test(value.toString()) : false;\n      };\n    },\n    InputComponent: GridFilterInputValue\n  }, {\n    value: 'equals',\n    getApplyFilterFn: filterItem => {\n      if (!filterItem.value) {\n        return null;\n      }\n      const filterItemValue = disableTrim ? filterItem.value : filterItem.value.trim();\n      const collator = new Intl.Collator(undefined, {\n        sensitivity: 'base',\n        usage: 'search'\n      });\n      return _ref3 => {\n        let {\n          value\n        } = _ref3;\n        return value != null ? collator.compare(filterItemValue, value.toString()) === 0 : false;\n      };\n    },\n    InputComponent: GridFilterInputValue\n  }, {\n    value: 'startsWith',\n    getApplyFilterFn: filterItem => {\n      if (!filterItem.value) {\n        return null;\n      }\n      const filterItemValue = disableTrim ? filterItem.value : filterItem.value.trim();\n      const filterRegex = new RegExp(`^${escapeRegExp(filterItemValue)}.*$`, 'i');\n      return _ref4 => {\n        let {\n          value\n        } = _ref4;\n        return value != null ? filterRegex.test(value.toString()) : false;\n      };\n    },\n    InputComponent: GridFilterInputValue\n  }, {\n    value: 'endsWith',\n    getApplyFilterFn: filterItem => {\n      if (!filterItem.value) {\n        return null;\n      }\n      const filterItemValue = disableTrim ? filterItem.value : filterItem.value.trim();\n      const filterRegex = new RegExp(`.*${escapeRegExp(filterItemValue)}$`, 'i');\n      return _ref5 => {\n        let {\n          value\n        } = _ref5;\n        return value != null ? filterRegex.test(value.toString()) : false;\n      };\n    },\n    InputComponent: GridFilterInputValue\n  }, {\n    value: 'isEmpty',\n    getApplyFilterFn: () => {\n      return _ref6 => {\n        let {\n          value\n        } = _ref6;\n        return value === '' || value == null;\n      };\n    },\n    requiresFilterValue: false\n  }, {\n    value: 'isNotEmpty',\n    getApplyFilterFn: () => {\n      return _ref7 => {\n        let {\n          value\n        } = _ref7;\n        return value !== '' && value != null;\n      };\n    },\n    requiresFilterValue: false\n  }, {\n    value: 'isAnyOf',\n    getApplyFilterFn: filterItem => {\n      if (!Array.isArray(filterItem.value) || filterItem.value.length === 0) {\n        return null;\n      }\n      const filterItemValue = disableTrim ? filterItem.value : filterItem.value.map(val => val.trim());\n      const collator = new Intl.Collator(undefined, {\n        sensitivity: 'base',\n        usage: 'search'\n      });\n      return _ref8 => {\n        let {\n          value\n        } = _ref8;\n        return value != null ? filterItemValue.some(filterValue => {\n          return collator.compare(filterValue, value.toString() || '') === 0;\n        }) : false;\n      };\n    },\n    InputComponent: GridFilterInputMultipleValue\n  }];\n};","import { renderEditInputCell } from '../components/cell/GridEditInputCell';\nimport { gridStringOrNumberComparator } from '../hooks/features/sorting/gridSortingUtils';\nimport { getGridStringOperators, getGridStringQuickFilterFn } from './gridStringOperators';\n/**\n * TODO: Move pro and premium properties outside of this Community file\n */\n\nexport const GRID_STRING_COL_DEF = {\n  width: 100,\n  minWidth: 50,\n  maxWidth: Infinity,\n  hide: false,\n  hideable: true,\n  sortable: true,\n  resizable: true,\n  filterable: true,\n  groupable: true,\n  pinnable: true,\n  // @ts-ignore\n  aggregable: true,\n  editable: false,\n  sortComparator: gridStringOrNumberComparator,\n  type: 'string',\n  align: 'left',\n  filterOperators: getGridStringOperators(),\n  renderEditCell: renderEditInputCell,\n  getApplyQuickFilterFn: getGridStringQuickFilterFn\n};","import { GridFilterInputValue } from '../components/panel/filterPanel/GridFilterInputValue';\nimport { GridFilterInputMultipleValue } from '../components/panel/filterPanel/GridFilterInputMultipleValue';\nimport { wrapWithWarningOnCall } from '../utils/warning';\nconst parseNumericValue = value => {\n  if (value == null) {\n    return null;\n  }\n  return Number(value);\n};\nexport const getGridNumericQuickFilterFn = value => {\n  if (value == null || Number.isNaN(value) || value === '') {\n    return null;\n  }\n  return _ref => {\n    let {\n      value: columnValue\n    } = _ref;\n    return parseNumericValue(columnValue) === parseNumericValue(value);\n  };\n};\nexport const getGridNumericOperators = () => [{\n  label: '=',\n  value: '=',\n  getApplyFilterFn: filterItem => {\n    if (filterItem.value == null || Number.isNaN(filterItem.value)) {\n      return null;\n    }\n    return _ref2 => {\n      let {\n        value\n      } = _ref2;\n      return parseNumericValue(value) === filterItem.value;\n    };\n  },\n  InputComponent: GridFilterInputValue,\n  InputComponentProps: {\n    type: 'number'\n  }\n}, {\n  label: '!=',\n  value: '!=',\n  getApplyFilterFn: filterItem => {\n    if (filterItem.value == null || Number.isNaN(filterItem.value)) {\n      return null;\n    }\n    return _ref3 => {\n      let {\n        value\n      } = _ref3;\n      return parseNumericValue(value) !== filterItem.value;\n    };\n  },\n  InputComponent: GridFilterInputValue,\n  InputComponentProps: {\n    type: 'number'\n  }\n}, {\n  label: '>',\n  value: '>',\n  getApplyFilterFn: filterItem => {\n    if (filterItem.value == null || Number.isNaN(filterItem.value)) {\n      return null;\n    }\n    return _ref4 => {\n      let {\n        value\n      } = _ref4;\n      if (value == null) {\n        return false;\n      }\n      return parseNumericValue(value) > filterItem.value;\n    };\n  },\n  InputComponent: GridFilterInputValue,\n  InputComponentProps: {\n    type: 'number'\n  }\n}, {\n  label: '>=',\n  value: '>=',\n  getApplyFilterFn: filterItem => {\n    if (filterItem.value == null || Number.isNaN(filterItem.value)) {\n      return null;\n    }\n    return _ref5 => {\n      let {\n        value\n      } = _ref5;\n      if (value == null) {\n        return false;\n      }\n      return parseNumericValue(value) >= filterItem.value;\n    };\n  },\n  InputComponent: GridFilterInputValue,\n  InputComponentProps: {\n    type: 'number'\n  }\n}, {\n  label: '<',\n  value: '<',\n  getApplyFilterFn: filterItem => {\n    if (filterItem.value == null || Number.isNaN(filterItem.value)) {\n      return null;\n    }\n    return _ref6 => {\n      let {\n        value\n      } = _ref6;\n      if (value == null) {\n        return false;\n      }\n      return parseNumericValue(value) < filterItem.value;\n    };\n  },\n  InputComponent: GridFilterInputValue,\n  InputComponentProps: {\n    type: 'number'\n  }\n}, {\n  label: '<=',\n  value: '<=',\n  getApplyFilterFn: filterItem => {\n    if (filterItem.value == null || Number.isNaN(filterItem.value)) {\n      return null;\n    }\n    return _ref7 => {\n      let {\n        value\n      } = _ref7;\n      if (value == null) {\n        return false;\n      }\n      return parseNumericValue(value) <= filterItem.value;\n    };\n  },\n  InputComponent: GridFilterInputValue,\n  InputComponentProps: {\n    type: 'number'\n  }\n}, {\n  value: 'isEmpty',\n  getApplyFilterFn: () => {\n    return _ref8 => {\n      let {\n        value\n      } = _ref8;\n      return value == null;\n    };\n  },\n  requiresFilterValue: false\n}, {\n  value: 'isNotEmpty',\n  getApplyFilterFn: () => {\n    return _ref9 => {\n      let {\n        value\n      } = _ref9;\n      return value != null;\n    };\n  },\n  requiresFilterValue: false\n}, {\n  value: 'isAnyOf',\n  getApplyFilterFn: filterItem => {\n    if (!Array.isArray(filterItem.value) || filterItem.value.length === 0) {\n      return null;\n    }\n    return _ref10 => {\n      let {\n        value\n      } = _ref10;\n      return value != null && filterItem.value.includes(Number(value));\n    };\n  },\n  InputComponent: GridFilterInputMultipleValue,\n  InputComponentProps: {\n    type: 'number'\n  }\n}];\n/**\n * @deprecated Use `getGridNumericOperators` instead.\n */\n\nexport const getGridNumericColumnOperators = wrapWithWarningOnCall(getGridNumericOperators, ['MUI: The method getGridNumericColumnOperators is deprecated and will be removed in the next major version.', 'Use getGridNumericOperators instead.']);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { gridNumberComparator } from '../hooks/features/sorting/gridSortingUtils';\nimport { isNumber } from '../utils/utils';\nimport { getGridNumericOperators, getGridNumericQuickFilterFn } from './gridNumericOperators';\nimport { GRID_STRING_COL_DEF } from './gridStringColDef';\nexport const GRID_NUMERIC_COL_DEF = _extends({}, GRID_STRING_COL_DEF, {\n  type: 'number',\n  align: 'right',\n  headerAlign: 'right',\n  sortComparator: gridNumberComparator,\n  valueParser: value => value === '' ? null : Number(value),\n  valueFormatter: _ref => {\n    let {\n      value\n    } = _ref;\n    return isNumber(value) ? value.toLocaleString() : value || '';\n  },\n  filterOperators: getGridNumericOperators(),\n  getApplyQuickFilterFn: getGridNumericQuickFilterFn\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"item\", \"applyValue\", \"type\", \"apiRef\", \"focusElementRef\", \"InputProps\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_useId as useId } from '@mui/material/utils';\nimport { GridLoadIcon } from '../../icons';\nimport { useGridRootProps } from '../../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const SUBMIT_FILTER_DATE_STROKE_TIME = 500;\nfunction GridFilterInputDate(props) {\n  var _item$value, _rootProps$components;\n  const {\n      item,\n      applyValue,\n      type,\n      apiRef,\n      focusElementRef,\n      InputProps\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const filterTimeout = React.useRef();\n  const [filterValueState, setFilterValueState] = React.useState((_item$value = item.value) != null ? _item$value : '');\n  const [applying, setIsApplying] = React.useState(false);\n  const id = useId();\n  const rootProps = useGridRootProps();\n  const onFilterChange = React.useCallback(event => {\n    const value = event.target.value;\n    clearTimeout(filterTimeout.current);\n    setFilterValueState(String(value));\n    setIsApplying(true);\n    filterTimeout.current = setTimeout(() => {\n      applyValue(_extends({}, item, {\n        value\n      }));\n      setIsApplying(false);\n    }, SUBMIT_FILTER_DATE_STROKE_TIME);\n  }, [applyValue, item]);\n  React.useEffect(() => {\n    return () => {\n      clearTimeout(filterTimeout.current);\n    };\n  }, []);\n  React.useEffect(() => {\n    var _item$value2;\n    const itemValue = (_item$value2 = item.value) != null ? _item$value2 : '';\n    setFilterValueState(String(itemValue));\n  }, [item.value]);\n  return /*#__PURE__*/_jsx(rootProps.components.BaseTextField, _extends({\n    id: id,\n    label: apiRef.current.getLocaleText('filterPanelInputLabel'),\n    placeholder: apiRef.current.getLocaleText('filterPanelInputPlaceholder'),\n    value: filterValueState,\n    onChange: onFilterChange,\n    variant: \"standard\",\n    type: type || 'text',\n    InputLabelProps: {\n      shrink: true\n    },\n    inputRef: focusElementRef,\n    InputProps: _extends({}, applying ? {\n      endAdornment: /*#__PURE__*/_jsx(GridLoadIcon, {})\n    } : {}, InputProps, {\n      inputProps: _extends({\n        max: type === 'datetime-local' ? '9999-12-31T23:59' : '9999-12-31'\n      }, InputProps == null ? void 0 : InputProps.inputProps)\n    })\n  }, other, (_rootProps$components = rootProps.componentsProps) == null ? void 0 : _rootProps$components.baseTextField));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridFilterInputDate.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  apiRef: PropTypes.shape({\n    current: PropTypes.object.isRequired\n  }).isRequired,\n  applyValue: PropTypes.func.isRequired,\n  focusElementRef: PropTypes\n  /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.func, PropTypes.object]),\n  item: PropTypes.shape({\n    columnField: PropTypes.string.isRequired,\n    id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    operatorValue: PropTypes.string,\n    value: PropTypes.any\n  }).isRequired\n} : void 0;\nexport { GridFilterInputDate };","import { GridFilterInputDate } from '../components/panel/filterPanel/GridFilterInputDate';\nconst dateRegex = /(\\d+)-(\\d+)-(\\d+)/;\nconst dateTimeRegex = /(\\d+)-(\\d+)-(\\d+)T(\\d+):(\\d+)/;\nfunction buildApplyFilterFn(filterItem, compareFn, showTime, keepHours) {\n  if (!filterItem.value) {\n    return null;\n  }\n  const [year, month, day, hour, minute] = filterItem.value.match(showTime ? dateTimeRegex : dateRegex).slice(1).map(Number);\n  const time = new Date(year, month - 1, day, hour || 0, minute || 0).getTime();\n  return _ref => {\n    let {\n      value\n    } = _ref;\n    if (!value) {\n      return false;\n    }\n    const valueAsDate = value instanceof Date ? value : new Date(value.toString());\n    if (keepHours) {\n      return compareFn(valueAsDate.getTime(), time);\n    } // Make a copy of the date to not reset the hours in the original object\n\n    const dateCopy = value instanceof Date ? new Date(valueAsDate) : valueAsDate;\n    const timeToCompare = dateCopy.setHours(showTime ? valueAsDate.getHours() : 0, showTime ? valueAsDate.getMinutes() : 0, 0, 0);\n    return compareFn(timeToCompare, time);\n  };\n}\nexport const getGridDateOperators = showTime => [{\n  value: 'is',\n  getApplyFilterFn: filterItem => {\n    return buildApplyFilterFn(filterItem, (value1, value2) => value1 === value2, showTime);\n  },\n  InputComponent: GridFilterInputDate,\n  InputComponentProps: {\n    type: showTime ? 'datetime-local' : 'date'\n  }\n}, {\n  value: 'not',\n  getApplyFilterFn: filterItem => {\n    return buildApplyFilterFn(filterItem, (value1, value2) => value1 !== value2, showTime);\n  },\n  InputComponent: GridFilterInputDate,\n  InputComponentProps: {\n    type: showTime ? 'datetime-local' : 'date'\n  }\n}, {\n  value: 'after',\n  getApplyFilterFn: filterItem => {\n    return buildApplyFilterFn(filterItem, (value1, value2) => value1 > value2, showTime);\n  },\n  InputComponent: GridFilterInputDate,\n  InputComponentProps: {\n    type: showTime ? 'datetime-local' : 'date'\n  }\n}, {\n  value: 'onOrAfter',\n  getApplyFilterFn: filterItem => {\n    return buildApplyFilterFn(filterItem, (value1, value2) => value1 >= value2, showTime);\n  },\n  InputComponent: GridFilterInputDate,\n  InputComponentProps: {\n    type: showTime ? 'datetime-local' : 'date'\n  }\n}, {\n  value: 'before',\n  getApplyFilterFn: filterItem => {\n    return buildApplyFilterFn(filterItem, (value1, value2) => value1 < value2, showTime, !showTime);\n  },\n  InputComponent: GridFilterInputDate,\n  InputComponentProps: {\n    type: showTime ? 'datetime-local' : 'date'\n  }\n}, {\n  value: 'onOrBefore',\n  getApplyFilterFn: filterItem => {\n    return buildApplyFilterFn(filterItem, (value1, value2) => value1 <= value2, showTime);\n  },\n  InputComponent: GridFilterInputDate,\n  InputComponentProps: {\n    type: showTime ? 'datetime-local' : 'date'\n  }\n}, {\n  value: 'isEmpty',\n  getApplyFilterFn: () => {\n    return _ref2 => {\n      let {\n        value\n      } = _ref2;\n      return value == null;\n    };\n  },\n  requiresFilterValue: false\n}, {\n  value: 'isNotEmpty',\n  getApplyFilterFn: () => {\n    return _ref3 => {\n      let {\n        value\n      } = _ref3;\n      return value != null;\n    };\n  },\n  requiresFilterValue: false\n}];","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"id\", \"value\", \"formattedValue\", \"api\", \"field\", \"row\", \"rowNode\", \"colDef\", \"cellMode\", \"isEditable\", \"tabIndex\", \"hasFocus\", \"getValue\", \"inputProps\", \"isValidating\", \"isProcessingProps\", \"onValueChange\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_composeClasses as composeClasses } from '@mui/material';\nimport { unstable_useEnhancedEffect as useEnhancedEffect } from '@mui/material/utils';\nimport InputBase from '@mui/material/InputBase';\nimport { styled } from '@mui/material/styles';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst StyledInputBase = styled(InputBase)({\n  fontSize: 'inherit'\n});\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['editInputCell']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nfunction GridEditDateCell(props) {\n  const {\n      id,\n      value: valueProp,\n      field,\n      colDef,\n      hasFocus,\n      inputProps,\n      onValueChange\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const isDateTime = colDef.type === 'dateTime';\n  const apiRef = useGridApiContext();\n  const inputRef = React.useRef();\n  const valueTransformed = React.useMemo(() => {\n    let parsedDate;\n    if (valueProp == null) {\n      parsedDate = null;\n    } else if (valueProp instanceof Date) {\n      parsedDate = valueProp;\n    } else {\n      parsedDate = new Date((valueProp != null ? valueProp : '').toString());\n    }\n    let formattedDate;\n    if (parsedDate == null || Number.isNaN(parsedDate.getTime())) {\n      formattedDate = '';\n    } else {\n      const localDate = new Date(parsedDate.getTime() - parsedDate.getTimezoneOffset() * 60 * 1000);\n      formattedDate = localDate.toISOString().substr(0, isDateTime ? 16 : 10);\n    }\n    return {\n      parsed: parsedDate,\n      formatted: formattedDate\n    };\n  }, [valueProp, isDateTime]);\n  const [valueState, setValueState] = React.useState(valueTransformed);\n  const rootProps = useGridRootProps();\n  const ownerState = {\n    classes: rootProps.classes\n  };\n  const classes = useUtilityClasses(ownerState);\n  const handleChange = React.useCallback(async event => {\n    const newFormattedDate = event.target.value;\n    let newParsedDate;\n    if (newFormattedDate === '') {\n      newParsedDate = null;\n    } else {\n      const [date, time] = newFormattedDate.split('T');\n      const [year, month, day] = date.split('-');\n      newParsedDate = new Date();\n      newParsedDate.setFullYear(Number(year), Number(month) - 1, Number(day));\n      newParsedDate.setHours(0, 0, 0, 0);\n      if (time) {\n        const [hours, minutes] = time.split(':');\n        newParsedDate.setHours(Number(hours), Number(minutes), 0, 0);\n      }\n    }\n    if (onValueChange) {\n      await onValueChange(event, newParsedDate);\n    }\n    setValueState({\n      parsed: newParsedDate,\n      formatted: newFormattedDate\n    });\n    apiRef.current.setEditCellValue({\n      id,\n      field,\n      value: newParsedDate\n    }, event);\n  }, [apiRef, field, id, onValueChange]);\n  React.useEffect(() => {\n    setValueState(state => {\n      var _valueTransformed$par, _state$parsed;\n      if (valueTransformed.parsed !== state.parsed && ((_valueTransformed$par = valueTransformed.parsed) == null ? void 0 : _valueTransformed$par.getTime()) !== ((_state$parsed = state.parsed) == null ? void 0 : _state$parsed.getTime())) {\n        return valueTransformed;\n      }\n      return state;\n    });\n  }, [valueTransformed]);\n  useEnhancedEffect(() => {\n    if (hasFocus) {\n      inputRef.current.focus();\n    }\n  }, [hasFocus]);\n  return /*#__PURE__*/_jsx(StyledInputBase, _extends({\n    inputRef: inputRef,\n    fullWidth: true,\n    className: classes.root,\n    type: isDateTime ? 'datetime-local' : 'date',\n    inputProps: _extends({\n      max: isDateTime ? '9999-12-31T23:59' : '9999-12-31'\n    }, inputProps),\n    value: valueState.formatted,\n    onChange: handleChange\n  }, other));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridEditDateCell.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n\n  /**\n   * GridApi that let you manipulate the grid.\n   * @deprecated Use the `apiRef` returned by `useGridApiContext` or `useGridApiRef` (only available in `@mui/x-data-grid-pro`)\n   */\n  api: PropTypes.any.isRequired,\n  /**\n   * The mode of the cell.\n   */\n  cellMode: PropTypes.oneOf(['edit', 'view']).isRequired,\n  changeReason: PropTypes.oneOf(['debouncedSetEditCellValue', 'setEditCellValue']),\n  /**\n   * The column of the row that the current cell belongs to.\n   */\n  colDef: PropTypes.object.isRequired,\n  /**\n   * The column field of the cell that triggered the event.\n   */\n  field: PropTypes.string.isRequired,\n  /**\n   * The cell value formatted with the column valueFormatter.\n   */\n  formattedValue: PropTypes.any,\n  /**\n   * Get the cell value of a row and field.\n   * @param {GridRowId} id The row id.\n   * @param {string} field The field.\n   * @returns {any} The cell value.\n   * @deprecated Use `params.row` to directly access the fields you want instead.\n   */\n  getValue: PropTypes.func.isRequired,\n  /**\n   * If true, the cell is the active element.\n   */\n  hasFocus: PropTypes.bool.isRequired,\n  /**\n   * The grid row id.\n   */\n  id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n  /**\n   * If true, the cell is editable.\n   */\n  isEditable: PropTypes.bool,\n  isProcessingProps: PropTypes.bool,\n  isValidating: PropTypes.bool,\n  /**\n   * Callback called when the value is changed by the user.\n   * @param {React.ChangeEvent<HTMLInputElement>} event The event source of the callback.\n   * @param {Date | null} newValue The value that is going to be passed to `apiRef.current.setEditCellValue`.\n   * @returns {Promise<void> | void} A promise to be awaited before calling `apiRef.current.setEditCellValue`\n   */\n  onValueChange: PropTypes.func,\n  /**\n   * The row model of the row that the current cell belongs to.\n   */\n  row: PropTypes.any.isRequired,\n  /**\n   * The node of the row that the current cell belongs to.\n   */\n  rowNode: PropTypes.object.isRequired,\n  /**\n   * the tabIndex value.\n   */\n  tabIndex: PropTypes.oneOf([-1, 0]).isRequired,\n  /**\n   * The cell value.\n   * If the column has `valueGetter`, use `params.row` to directly access the fields.\n   */\n  value: PropTypes.any\n} : void 0;\nexport { GridEditDateCell };\nexport const renderEditDateCell = params => /*#__PURE__*/_jsx(GridEditDateCell, _extends({}, params));","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { gridDateComparator } from '../hooks/features/sorting/gridSortingUtils';\nimport { getGridDateOperators } from './gridDateOperators';\nimport { GRID_STRING_COL_DEF } from './gridStringColDef';\nimport { renderEditDateCell } from '../components/cell/GridEditDateCell';\nexport function gridDateFormatter(_ref) {\n  let {\n    value\n  } = _ref;\n  if (value instanceof Date) {\n    return value.toLocaleDateString();\n  }\n  return value != null ? value : '';\n}\nexport function gridDateTimeFormatter(_ref2) {\n  let {\n    value\n  } = _ref2;\n  if (value instanceof Date) {\n    return value.toLocaleString();\n  }\n  return value != null ? value : '';\n}\nexport const GRID_DATE_COL_DEF = _extends({}, GRID_STRING_COL_DEF, {\n  type: 'date',\n  sortComparator: gridDateComparator,\n  valueFormatter: gridDateFormatter,\n  filterOperators: getGridDateOperators(),\n  renderEditCell: renderEditDateCell,\n  getApplyQuickFilterFn: undefined\n});\nexport const GRID_DATETIME_COL_DEF = _extends({}, GRID_STRING_COL_DEF, {\n  type: 'dateTime',\n  sortComparator: gridDateComparator,\n  valueFormatter: gridDateTimeFormatter,\n  filterOperators: getGridDateOperators(true),\n  renderEditCell: renderEditDateCell,\n  getApplyQuickFilterFn: undefined\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"id\", \"value\", \"formattedValue\", \"api\", \"field\", \"row\", \"rowNode\", \"colDef\", \"cellMode\", \"isEditable\", \"hasFocus\", \"tabIndex\", \"getValue\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_composeClasses as composeClasses } from '@mui/material';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['booleanCell']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridBooleanCellRaw = props => {\n  const {\n      value\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const ownerState = {\n    classes: rootProps.classes\n  };\n  const classes = useUtilityClasses(ownerState);\n  const Icon = React.useMemo(() => value ? rootProps.components.BooleanCellTrueIcon : rootProps.components.BooleanCellFalseIcon, [rootProps.components.BooleanCellFalseIcon, rootProps.components.BooleanCellTrueIcon, value]);\n  return /*#__PURE__*/_jsx(Icon, _extends({\n    fontSize: \"small\",\n    className: classes.root,\n    titleAccess: apiRef.current.getLocaleText(value ? 'booleanCellTrueLabel' : 'booleanCellFalseLabel'),\n    \"data-value\": Boolean(value)\n  }, other));\n};\nprocess.env.NODE_ENV !== \"production\" ? GridBooleanCellRaw.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n\n  /**\n   * GridApi that let you manipulate the grid.\n   * @deprecated Use the `apiRef` returned by `useGridApiContext` or `useGridApiRef` (only available in `@mui/x-data-grid-pro`)\n   */\n  api: PropTypes.any.isRequired,\n  /**\n   * The mode of the cell.\n   */\n  cellMode: PropTypes.oneOf(['edit', 'view']).isRequired,\n  /**\n   * The column of the row that the current cell belongs to.\n   */\n  colDef: PropTypes.object.isRequired,\n  /**\n   * The column field of the cell that triggered the event.\n   */\n  field: PropTypes.string.isRequired,\n  /**\n   * A ref allowing to set imperative focus.\n   * It can be passed to the element that should receive focus.\n   * @ignore - do not document.\n   */\n  focusElementRef: PropTypes.oneOfType([PropTypes.func, PropTypes.shape({\n    current: PropTypes.shape({\n      focus: PropTypes.func.isRequired\n    })\n  })]),\n  /**\n   * The cell value formatted with the column valueFormatter.\n   */\n  formattedValue: PropTypes.any,\n  /**\n   * Get the cell value of a row and field.\n   * @param {GridRowId} id The row id.\n   * @param {string} field The field.\n   * @returns {any} The cell value.\n   * @deprecated Use `params.row` to directly access the fields you want instead.\n   */\n  getValue: PropTypes.func.isRequired,\n  /**\n   * If true, the cell is the active element.\n   */\n  hasFocus: PropTypes.bool.isRequired,\n  /**\n   * The grid row id.\n   */\n  id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n  /**\n   * If true, the cell is editable.\n   */\n  isEditable: PropTypes.bool,\n  /**\n   * The row model of the row that the current cell belongs to.\n   */\n  row: PropTypes.any.isRequired,\n  /**\n   * The node of the row that the current cell belongs to.\n   */\n  rowNode: PropTypes.object.isRequired,\n  /**\n   * the tabIndex value.\n   */\n  tabIndex: PropTypes.oneOf([-1, 0]).isRequired,\n  /**\n   * The cell value.\n   * If the column has `valueGetter`, use `params.row` to directly access the fields.\n   */\n  value: PropTypes.any\n} : void 0;\nconst GridBooleanCell = /*#__PURE__*/React.memo(GridBooleanCellRaw);\nexport { GridBooleanCell };\nexport const renderBooleanCell = params => {\n  if (params.rowNode.isAutoGenerated) {\n    return '';\n  }\n  return /*#__PURE__*/_jsx(GridBooleanCell, _extends({}, params));\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"id\", \"value\", \"formattedValue\", \"api\", \"field\", \"row\", \"rowNode\", \"colDef\", \"cellMode\", \"isEditable\", \"tabIndex\", \"className\", \"getValue\", \"hasFocus\", \"isValidating\", \"isProcessingProps\", \"error\", \"onValueChange\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/material';\nimport { unstable_useId as useId, unstable_useEnhancedEffect as useEnhancedEffect } from '@mui/material/utils';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['editBooleanCell']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nfunction GridEditBooleanCell(props) {\n  var _rootProps$components;\n  const {\n      id: idProp,\n      value,\n      field,\n      className,\n      hasFocus,\n      onValueChange\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridApiContext();\n  const inputRef = React.useRef(null);\n  const id = useId();\n  const [valueState, setValueState] = React.useState(value);\n  const rootProps = useGridRootProps();\n  const ownerState = {\n    classes: rootProps.classes\n  };\n  const classes = useUtilityClasses(ownerState);\n  const handleChange = React.useCallback(async event => {\n    const newValue = event.target.checked;\n    if (onValueChange) {\n      await onValueChange(event, newValue);\n    }\n    setValueState(newValue);\n    await apiRef.current.setEditCellValue({\n      id: idProp,\n      field,\n      value: newValue\n    }, event);\n  }, [apiRef, field, idProp, onValueChange]);\n  React.useEffect(() => {\n    setValueState(value);\n  }, [value]);\n  useEnhancedEffect(() => {\n    if (hasFocus) {\n      inputRef.current.focus();\n    }\n  }, [hasFocus]);\n  return /*#__PURE__*/_jsx(\"label\", _extends({\n    htmlFor: id,\n    className: clsx(classes.root, className)\n  }, other, {\n    children: /*#__PURE__*/_jsx(rootProps.components.BaseCheckbox, _extends({\n      id: id,\n      inputRef: inputRef,\n      checked: Boolean(valueState),\n      onChange: handleChange,\n      size: \"small\"\n    }, (_rootProps$components = rootProps.componentsProps) == null ? void 0 : _rootProps$components.baseCheckbox))\n  }));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridEditBooleanCell.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n\n  /**\n   * GridApi that let you manipulate the grid.\n   * @deprecated Use the `apiRef` returned by `useGridApiContext` or `useGridApiRef` (only available in `@mui/x-data-grid-pro`)\n   */\n  api: PropTypes.any.isRequired,\n  /**\n   * The mode of the cell.\n   */\n  cellMode: PropTypes.oneOf(['edit', 'view']).isRequired,\n  changeReason: PropTypes.oneOf(['debouncedSetEditCellValue', 'setEditCellValue']),\n  /**\n   * The column of the row that the current cell belongs to.\n   */\n  colDef: PropTypes.object.isRequired,\n  /**\n   * The column field of the cell that triggered the event.\n   */\n  field: PropTypes.string.isRequired,\n  /**\n   * The cell value formatted with the column valueFormatter.\n   */\n  formattedValue: PropTypes.any,\n  /**\n   * Get the cell value of a row and field.\n   * @param {GridRowId} id The row id.\n   * @param {string} field The field.\n   * @returns {any} The cell value.\n   * @deprecated Use `params.row` to directly access the fields you want instead.\n   */\n  getValue: PropTypes.func.isRequired,\n  /**\n   * If true, the cell is the active element.\n   */\n  hasFocus: PropTypes.bool.isRequired,\n  /**\n   * The grid row id.\n   */\n  id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n  /**\n   * If true, the cell is editable.\n   */\n  isEditable: PropTypes.bool,\n  isProcessingProps: PropTypes.bool,\n  isValidating: PropTypes.bool,\n  /**\n   * Callback called when the value is changed by the user.\n   * @param {React.ChangeEvent<HTMLInputElement>} event The event source of the callback.\n   * @param {boolean} newValue The value that is going to be passed to `apiRef.current.setEditCellValue`.\n   * @returns {Promise<void> | void} A promise to be awaited before calling `apiRef.current.setEditCellValue`\n   */\n  onValueChange: PropTypes.func,\n  /**\n   * The row model of the row that the current cell belongs to.\n   */\n  row: PropTypes.any.isRequired,\n  /**\n   * The node of the row that the current cell belongs to.\n   */\n  rowNode: PropTypes.object.isRequired,\n  /**\n   * the tabIndex value.\n   */\n  tabIndex: PropTypes.oneOf([-1, 0]).isRequired,\n  /**\n   * The cell value.\n   * If the column has `valueGetter`, use `params.row` to directly access the fields.\n   */\n  value: PropTypes.any\n} : void 0;\nexport { GridEditBooleanCell };\nexport const renderEditBooleanCell = params => /*#__PURE__*/_jsx(GridEditBooleanCell, _extends({}, params));","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"item\", \"applyValue\", \"apiRef\", \"focusElementRef\"];\nimport * as React from 'react';\nimport MenuItem from '@mui/material/MenuItem';\nimport { useGridRootProps } from '../../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport function GridFilterInputBoolean(props) {\n  var _rootProps$components, _baseSelectProps$nati, _rootProps$components2, _rootProps$components3;\n  const {\n      item,\n      applyValue,\n      apiRef,\n      focusElementRef\n    } = props,\n    others = _objectWithoutPropertiesLoose(props, _excluded);\n  const [filterValueState, setFilterValueState] = React.useState(item.value || '');\n  const rootProps = useGridRootProps();\n  const baseSelectProps = ((_rootProps$components = rootProps.componentsProps) == null ? void 0 : _rootProps$components.baseSelect) || {};\n  const isSelectNative = (_baseSelectProps$nati = baseSelectProps.native) != null ? _baseSelectProps$nati : true;\n  const OptionComponent = isSelectNative ? 'option' : MenuItem;\n  const onFilterChange = React.useCallback(event => {\n    const value = event.target.value;\n    setFilterValueState(value);\n    applyValue(_extends({}, item, {\n      value\n    }));\n  }, [applyValue, item]);\n  React.useEffect(() => {\n    setFilterValueState(item.value || '');\n  }, [item.value]);\n  return /*#__PURE__*/_jsxs(rootProps.components.BaseTextField, _extends({\n    label: apiRef.current.getLocaleText('filterPanelInputLabel'),\n    value: filterValueState,\n    onChange: onFilterChange,\n    select: true,\n    variant: \"standard\",\n    SelectProps: _extends({\n      native: isSelectNative,\n      displayEmpty: true\n    }, (_rootProps$components2 = rootProps.componentsProps) == null ? void 0 : _rootProps$components2.baseSelect),\n    InputLabelProps: {\n      shrink: true\n    },\n    inputRef: focusElementRef\n  }, others, (_rootProps$components3 = rootProps.componentsProps) == null ? void 0 : _rootProps$components3.baseTextField, {\n    children: [/*#__PURE__*/_jsx(OptionComponent, {\n      value: \"\",\n      children: apiRef.current.getLocaleText('filterValueAny')\n    }), /*#__PURE__*/_jsx(OptionComponent, {\n      value: \"true\",\n      children: apiRef.current.getLocaleText('filterValueTrue')\n    }), /*#__PURE__*/_jsx(OptionComponent, {\n      value: \"false\",\n      children: apiRef.current.getLocaleText('filterValueFalse')\n    })]\n  }));\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { GRID_STRING_COL_DEF } from './gridStringColDef';\nimport { renderBooleanCell } from '../components/cell/GridBooleanCell';\nimport { renderEditBooleanCell } from '../components/cell/GridEditBooleanCell';\nimport { gridNumberComparator } from '../hooks/features/sorting/gridSortingUtils';\nimport { getGridBooleanOperators } from './gridBooleanOperators';\nfunction gridBooleanFormatter(_ref) {\n  let {\n    value,\n    api\n  } = _ref;\n  return value ? api.getLocaleText('booleanCellTrueLabel') : api.getLocaleText('booleanCellFalseLabel');\n}\nexport const GRID_BOOLEAN_COL_DEF = _extends({}, GRID_STRING_COL_DEF, {\n  type: 'boolean',\n  align: 'center',\n  headerAlign: 'center',\n  renderCell: renderBooleanCell,\n  renderEditCell: renderEditBooleanCell,\n  sortComparator: gridNumberComparator,\n  valueFormatter: gridBooleanFormatter,\n  filterOperators: getGridBooleanOperators(),\n  getApplyQuickFilterFn: undefined,\n  // @ts-ignore\n  aggregable: false\n});","import { GridFilterInputBoolean } from '../components/panel/filterPanel/GridFilterInputBoolean';\nexport const getGridBooleanOperators = () => [{\n  value: 'is',\n  getApplyFilterFn: filterItem => {\n    if (!filterItem.value) {\n      return null;\n    }\n    const valueAsBoolean = filterItem.value === 'true';\n    return _ref => {\n      let {\n        value\n      } = _ref;\n      return Boolean(value) === valueAsBoolean;\n    };\n  },\n  InputComponent: GridFilterInputBoolean\n}];","export const isEscapeKey = key => key === 'Escape'; // TODO remove\n\nexport const isEnterKey = key => key === 'Enter'; // TODO remove\n\nexport const isTabKey = key => key === 'Tab'; // TODO remove\n\nexport const isSpaceKey = key => key === ' ';\nexport const isArrowKeys = key => key.indexOf('Arrow') === 0;\nexport const isHomeOrEndKeys = key => key === 'Home' || key === 'End';\nexport const isPageKeys = key => key.indexOf('Page') === 0;\nexport const isDeleteKeys = key => key === 'Delete' || key === 'Backspace'; // Non printable keys have a name, e.g. \"ArrowRight\", see the whole list:\n// https://developer.mozilla.org/en-US/docs/Web/API/UI_Events/Keyboard_event_key_values\n// We need to ignore shortcuts, for example: select all:\n// - Windows: Ctrl+A, event.ctrlKey is true\n// - macOS: ⌘ Command+A, event.metaKey is true\n\nexport function isPrintableKey(event) {\n  return event.key.length === 1 && event.ctrlKey === false && event.metaKey === false;\n}\nexport const GRID_MULTIPLE_SELECTION_KEYS = ['Meta', 'Control', 'Shift'];\nexport const GRID_CELL_EXIT_EDIT_MODE_KEYS = ['Enter', 'Escape', 'Tab'];\nexport const GRID_CELL_EDIT_COMMIT_KEYS = ['Enter', 'Tab'];\nexport const isMultipleKey = key => GRID_MULTIPLE_SELECTION_KEYS.indexOf(key) > -1;\nexport const isCellEnterEditModeKeys = event => isEnterKey(event.key) || isDeleteKeys(event.key) || isPrintableKey(event);\nexport const isCellExitEditModeKeys = key => GRID_CELL_EXIT_EDIT_MODE_KEYS.indexOf(key) > -1;\nexport const isCellEditCommitKeys = key => GRID_CELL_EDIT_COMMIT_KEYS.indexOf(key) > -1;\nexport const isNavigationKey = key => isHomeOrEndKeys(key) || isArrowKeys(key) || isPageKeys(key) || isSpaceKey(key);\nexport const isKeyboardEvent = event => !!event.key;\nexport const isHideMenuKey = key => isTabKey(key) || isEscapeKey(key);","// TODO v6: rename to GridEditingState\nvar GridEditModes;\n(function (GridEditModes) {\n  GridEditModes[\"Cell\"] = \"cell\";\n  GridEditModes[\"Row\"] = \"row\";\n})(GridEditModes || (GridEditModes = {}));\nvar GridCellModes;\n(function (GridCellModes) {\n  GridCellModes[\"Edit\"] = \"edit\";\n  GridCellModes[\"View\"] = \"view\";\n})(GridCellModes || (GridCellModes = {}));\nvar GridRowModes;\n(function (GridRowModes) {\n  GridRowModes[\"Edit\"] = \"edit\";\n  GridRowModes[\"View\"] = \"view\";\n})(GridRowModes || (GridRowModes = {}));\nexport { GridEditModes, GridCellModes, GridRowModes };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"id\", \"value\", \"formattedValue\", \"api\", \"field\", \"row\", \"rowNode\", \"colDef\", \"cellMode\", \"isEditable\", \"tabIndex\", \"className\", \"getValue\", \"hasFocus\", \"isValidating\", \"isProcessingProps\", \"error\", \"onValueChange\", \"initialOpen\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_useEnhancedEffect as useEnhancedEffect } from '@mui/material/utils';\nimport MenuItem from '@mui/material/MenuItem';\nimport { isEscapeKey } from '../../utils/keyboardUtils';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { GridEditModes } from '../../models/gridEditRowModel';\nimport { getValueFromValueOptions } from '../panel/filterPanel/filterPanelUtils';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst renderSingleSelectOptions = (option, OptionComponent) => {\n  const isOptionTypeObject = typeof option === 'object';\n  const key = isOptionTypeObject ? option.value : option;\n  const value = isOptionTypeObject ? option.value : option;\n  const content = isOptionTypeObject ? option.label : option;\n  return /*#__PURE__*/_jsx(OptionComponent, {\n    value: value,\n    children: content\n  }, key);\n};\nfunction isKeyboardEvent(event) {\n  return !!event.key;\n}\nfunction GridEditSingleSelectCell(props) {\n  var _rootProps$components, _baseSelectProps$nati, _rootProps$components2;\n  const rootProps = useGridRootProps();\n  const {\n      id,\n      value,\n      api,\n      field,\n      row,\n      colDef,\n      hasFocus,\n      error,\n      onValueChange,\n      initialOpen = rootProps.editMode === GridEditModes.Cell\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridApiContext();\n  const ref = React.useRef();\n  const inputRef = React.useRef();\n  const [open, setOpen] = React.useState(initialOpen);\n  const baseSelectProps = ((_rootProps$components = rootProps.componentsProps) == null ? void 0 : _rootProps$components.baseSelect) || {};\n  const isSelectNative = (_baseSelectProps$nati = baseSelectProps.native) != null ? _baseSelectProps$nati : false;\n  let valueOptionsFormatted;\n  if (typeof colDef.valueOptions === 'function') {\n    valueOptionsFormatted = colDef.valueOptions({\n      id,\n      row,\n      field\n    });\n  } else {\n    valueOptionsFormatted = colDef.valueOptions;\n  }\n  if (colDef.valueFormatter) {\n    valueOptionsFormatted = valueOptionsFormatted.map(option => {\n      if (typeof option === 'object') {\n        return option;\n      }\n      const params = {\n        field,\n        api,\n        value: option\n      };\n      return {\n        value: option,\n        label: String(colDef.valueFormatter(params))\n      };\n    });\n  }\n  const handleChange = async event => {\n    var _rootProps$experiment;\n    setOpen(false);\n    const target = event.target; // NativeSelect casts the value to a string.\n\n    const formattedTargetValue = getValueFromValueOptions(target.value, valueOptionsFormatted);\n    if (onValueChange) {\n      await onValueChange(event, formattedTargetValue);\n    }\n    const isValid = await apiRef.current.setEditCellValue({\n      id,\n      field,\n      value: formattedTargetValue\n    }, event);\n    if ((_rootProps$experiment = rootProps.experimentalFeatures) != null && _rootProps$experiment.newEditingApi) {\n      return;\n    } // We use isValid === false because the default return is undefined which evaluates to true with !isValid\n\n    if (rootProps.editMode === GridEditModes.Row || isValid === false) {\n      return;\n    }\n    const canCommit = await Promise.resolve(apiRef.current.commitCellChange({\n      id,\n      field\n    }, event));\n    if (canCommit) {\n      apiRef.current.setCellMode(id, field, 'view');\n      if (event.key) {\n        // TODO v6: remove once we stop ignoring events fired from portals\n        const params = apiRef.current.getCellParams(id, field);\n        apiRef.current.publishEvent('cellNavigationKeyDown', params, event);\n      }\n    }\n  };\n  const handleClose = (event, reason) => {\n    if (rootProps.editMode === GridEditModes.Row) {\n      setOpen(false);\n      return;\n    }\n    if (reason === 'backdropClick' || isEscapeKey(event.key)) {\n      var _rootProps$experiment2;\n      if ((_rootProps$experiment2 = rootProps.experimentalFeatures) != null && _rootProps$experiment2.newEditingApi) {\n        apiRef.current.stopCellEditMode({\n          id,\n          field,\n          ignoreModifications: true\n        });\n      } else {\n        apiRef.current.setCellMode(id, field, 'view');\n      }\n    }\n  };\n  const handleOpen = event => {\n    if (isKeyboardEvent(event) && event.key === 'Enter') {\n      return;\n    }\n    setOpen(true);\n  };\n  useEnhancedEffect(() => {\n    if (hasFocus) {\n      inputRef.current.focus();\n    }\n  }, [hasFocus]);\n  return /*#__PURE__*/_jsx(rootProps.components.BaseSelect, _extends({\n    ref: ref,\n    inputRef: inputRef,\n    value: value,\n    onChange: handleChange,\n    open: open,\n    onOpen: handleOpen,\n    MenuProps: {\n      onClose: handleClose\n    },\n    error: error,\n    native: isSelectNative,\n    fullWidth: true\n  }, other, (_rootProps$components2 = rootProps.componentsProps) == null ? void 0 : _rootProps$components2.baseSelect, {\n    children: valueOptionsFormatted.map(valueOptions => renderSingleSelectOptions(valueOptions, isSelectNative ? 'option' : MenuItem))\n  }));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridEditSingleSelectCell.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n\n  /**\n   * GridApi that let you manipulate the grid.\n   * @deprecated Use the `apiRef` returned by `useGridApiContext` or `useGridApiRef` (only available in `@mui/x-data-grid-pro`)\n   */\n  api: PropTypes.any.isRequired,\n  /**\n   * The mode of the cell.\n   */\n  cellMode: PropTypes.oneOf(['edit', 'view']).isRequired,\n  changeReason: PropTypes.oneOf(['debouncedSetEditCellValue', 'setEditCellValue']),\n  /**\n   * The column of the row that the current cell belongs to.\n   */\n  colDef: PropTypes.object.isRequired,\n  /**\n   * The column field of the cell that triggered the event.\n   */\n  field: PropTypes.string.isRequired,\n  /**\n   * The cell value formatted with the column valueFormatter.\n   */\n  formattedValue: PropTypes.any,\n  /**\n   * Get the cell value of a row and field.\n   * @param {GridRowId} id The row id.\n   * @param {string} field The field.\n   * @returns {any} The cell value.\n   * @deprecated Use `params.row` to directly access the fields you want instead.\n   */\n  getValue: PropTypes.func.isRequired,\n  /**\n   * If true, the cell is the active element.\n   */\n  hasFocus: PropTypes.bool.isRequired,\n  /**\n   * The grid row id.\n   */\n  id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n  /**\n   * If true, the select opens by default.\n   */\n  initialOpen: PropTypes.bool,\n  /**\n   * If true, the cell is editable.\n   */\n  isEditable: PropTypes.bool,\n  isProcessingProps: PropTypes.bool,\n  isValidating: PropTypes.bool,\n  /**\n   * Callback called when the value is changed by the user.\n   * @param {SelectChangeEvent<any>} event The event source of the callback.\n   * @param {any} newValue The value that is going to be passed to `apiRef.current.setEditCellValue`.\n   * @returns {Promise<void> | void} A promise to be awaited before calling `apiRef.current.setEditCellValue`\n   */\n  onValueChange: PropTypes.func,\n  /**\n   * The row model of the row that the current cell belongs to.\n   */\n  row: PropTypes.any.isRequired,\n  /**\n   * The node of the row that the current cell belongs to.\n   */\n  rowNode: PropTypes.object.isRequired,\n  /**\n   * the tabIndex value.\n   */\n  tabIndex: PropTypes.oneOf([-1, 0]).isRequired,\n  /**\n   * The cell value.\n   * If the column has `valueGetter`, use `params.row` to directly access the fields.\n   */\n  value: PropTypes.any\n} : void 0;\nexport { GridEditSingleSelectCell };\nexport const renderEditSingleSelectCell = params => /*#__PURE__*/_jsx(GridEditSingleSelectCell, _extends({}, params));","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"item\", \"applyValue\", \"type\", \"apiRef\", \"focusElementRef\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_useId as useId } from '@mui/material/utils';\nimport MenuItem from '@mui/material/MenuItem';\nimport { useGridRootProps } from '../../../hooks/utils/useGridRootProps';\nimport { getValueFromValueOptions } from './filterPanelUtils';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst renderSingleSelectOptions = (_ref, api, OptionComponent) => {\n  let {\n    valueOptions,\n    valueFormatter,\n    field\n  } = _ref;\n  const iterableColumnValues = typeof valueOptions === 'function' ? ['', ...valueOptions({\n    field\n  })] : ['', ...(valueOptions || [])];\n  return iterableColumnValues.map(option => {\n    const isOptionTypeObject = typeof option === 'object';\n    const key = isOptionTypeObject ? option.value : option;\n    const value = isOptionTypeObject ? option.value : option;\n    const formattedValue = valueFormatter && option !== '' ? valueFormatter({\n      value: option,\n      field,\n      api\n    }) : option;\n    const content = isOptionTypeObject ? option.label : formattedValue;\n    return /*#__PURE__*/_jsx(OptionComponent, {\n      value: value,\n      children: content\n    }, key);\n  });\n};\nfunction GridFilterInputSingleSelect(props) {\n  var _item$value, _rootProps$components, _baseSelectProps$nati, _rootProps$components2, _rootProps$components3;\n  const {\n      item,\n      applyValue,\n      type,\n      apiRef,\n      focusElementRef\n    } = props,\n    others = _objectWithoutPropertiesLoose(props, _excluded);\n  const [filterValueState, setFilterValueState] = React.useState((_item$value = item.value) != null ? _item$value : '');\n  const id = useId();\n  const rootProps = useGridRootProps();\n  const baseSelectProps = ((_rootProps$components = rootProps.componentsProps) == null ? void 0 : _rootProps$components.baseSelect) || {};\n  const isSelectNative = (_baseSelectProps$nati = baseSelectProps.native) != null ? _baseSelectProps$nati : true;\n  const currentColumn = item.columnField ? apiRef.current.getColumn(item.columnField) : null;\n  const currentValueOptions = React.useMemo(() => {\n    if (currentColumn === null) {\n      return undefined;\n    }\n    return typeof currentColumn.valueOptions === 'function' ? currentColumn.valueOptions({\n      field: currentColumn.field\n    }) : currentColumn.valueOptions;\n  }, [currentColumn]);\n  const onFilterChange = React.useCallback(event => {\n    let value = event.target.value; // NativeSelect casts the value to a string.\n\n    value = getValueFromValueOptions(value, currentValueOptions);\n    setFilterValueState(String(value));\n    applyValue(_extends({}, item, {\n      value\n    }));\n  }, [applyValue, item, currentValueOptions]);\n  React.useEffect(() => {\n    var _itemValue;\n    let itemValue;\n    if (currentValueOptions !== undefined) {\n      // sanitize if valueOptions are provided\n      itemValue = getValueFromValueOptions(item.value, currentValueOptions);\n      if (itemValue !== item.value) {\n        applyValue(_extends({}, item, {\n          value: itemValue\n        }));\n        return;\n      }\n    } else {\n      itemValue = item.value;\n    }\n    itemValue = (_itemValue = itemValue) != null ? _itemValue : '';\n    setFilterValueState(String(itemValue));\n  }, [item, currentValueOptions, applyValue]);\n  return /*#__PURE__*/_jsx(rootProps.components.BaseTextField, _extends({\n    id: id,\n    label: apiRef.current.getLocaleText('filterPanelInputLabel'),\n    placeholder: apiRef.current.getLocaleText('filterPanelInputPlaceholder'),\n    value: filterValueState,\n    onChange: onFilterChange,\n    variant: \"standard\",\n    type: type || 'text',\n    InputLabelProps: {\n      shrink: true\n    },\n    inputRef: focusElementRef,\n    select: true,\n    SelectProps: _extends({\n      native: isSelectNative\n    }, (_rootProps$components2 = rootProps.componentsProps) == null ? void 0 : _rootProps$components2.baseSelect)\n  }, others, (_rootProps$components3 = rootProps.componentsProps) == null ? void 0 : _rootProps$components3.baseTextField, {\n    children: renderSingleSelectOptions(apiRef.current.getColumn(item.columnField), apiRef.current, isSelectNative ? 'option' : MenuItem)\n  }));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridFilterInputSingleSelect.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  apiRef: PropTypes.shape({\n    current: PropTypes.object.isRequired\n  }).isRequired,\n  applyValue: PropTypes.func.isRequired,\n  focusElementRef: PropTypes\n  /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.func, PropTypes.object]),\n  item: PropTypes.shape({\n    columnField: PropTypes.string.isRequired,\n    id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    operatorValue: PropTypes.string,\n    value: PropTypes.any\n  }).isRequired\n} : void 0;\nexport { GridFilterInputSingleSelect };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"item\", \"applyValue\", \"type\", \"apiRef\", \"focusElementRef\", \"color\", \"error\", \"helperText\", \"size\", \"variant\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport Autocomplete, { createFilterOptions } from '@mui/material/Autocomplete';\nimport Chip from '@mui/material/Chip';\nimport { unstable_useId as useId } from '@mui/material/utils';\nimport { getValueFromOption } from './filterPanelUtils';\nimport { useGridRootProps } from '../../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst isOptionEqualToValue = (option, value) => getValueFromOption(option) === getValueFromOption(value);\nconst filter = createFilterOptions();\nfunction GridFilterInputMultipleSingleSelect(props) {\n  const {\n      item,\n      applyValue,\n      apiRef,\n      focusElementRef,\n      color,\n      error,\n      helperText,\n      size,\n      variant = 'standard'\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const TextFieldProps = {\n    color,\n    error,\n    helperText,\n    size,\n    variant\n  };\n  const id = useId();\n  const rootProps = useGridRootProps();\n  const resolvedColumn = item.columnField ? apiRef.current.getColumn(item.columnField) : null;\n  const resolvedValueOptions = React.useMemo(() => {\n    if (!(resolvedColumn != null && resolvedColumn.valueOptions)) {\n      return [];\n    }\n    if (typeof resolvedColumn.valueOptions === 'function') {\n      return resolvedColumn.valueOptions({\n        field: resolvedColumn.field\n      });\n    }\n    return resolvedColumn.valueOptions;\n  }, [resolvedColumn]);\n  const resolvedFormattedValueOptions = React.useMemo(() => {\n    return resolvedValueOptions == null ? void 0 : resolvedValueOptions.map(getValueFromOption);\n  }, [resolvedValueOptions]);\n  const {\n    valueFormatter,\n    field\n  } = apiRef.current.getColumn(item.columnField);\n  const filterValueOptionFormatter = option => {\n    if (typeof option === 'object') {\n      return option.label;\n    }\n    return valueFormatter && option !== '' ? valueFormatter({\n      value: option,\n      field,\n      api: apiRef.current\n    }) : option;\n  }; // The value is computed from the item.value and used directly\n  // If it was done by a useEffect/useState, the Autocomplete could receive incoherent value and options\n\n  const filterValues = React.useMemo(() => {\n    if (!Array.isArray(item.value)) {\n      return [];\n    }\n    if (resolvedValueOptions !== undefined) {\n      const itemValueIndexes = item.value.map(element => {\n        // get the index matching between values and valueOptions\n        const formattedElement = getValueFromOption(element);\n        const index = (resolvedFormattedValueOptions == null ? void 0 : resolvedFormattedValueOptions.findIndex(formatedOption => formatedOption === formattedElement)) || 0;\n        return index;\n      });\n      return itemValueIndexes.filter(index => index >= 0).map(index => resolvedValueOptions[index]);\n    }\n    return item.value;\n  }, [item.value, resolvedValueOptions, resolvedFormattedValueOptions]);\n  React.useEffect(() => {\n    if (!Array.isArray(item.value) || filterValues.length !== item.value.length) {\n      // update the state if the filter value has been cleaned by the component\n      applyValue(_extends({}, item, {\n        value: filterValues.map(getValueFromOption)\n      }));\n    }\n  }, [item, filterValues, applyValue]);\n  const handleChange = React.useCallback((event, value) => {\n    applyValue(_extends({}, item, {\n      value: [...value.map(getValueFromOption)]\n    }));\n  }, [applyValue, item]);\n  return /*#__PURE__*/_jsx(Autocomplete, _extends({\n    multiple: true,\n    options: resolvedValueOptions,\n    isOptionEqualToValue: isOptionEqualToValue,\n    filterOptions: filter,\n    id: id,\n    value: filterValues,\n    onChange: handleChange,\n    renderTags: (value, getTagProps) => value.map((option, index) => /*#__PURE__*/_jsx(Chip, _extends({\n      variant: \"outlined\",\n      size: \"small\",\n      label: filterValueOptionFormatter(option)\n    }, getTagProps({\n      index\n    })))),\n    renderInput: params => {\n      var _rootProps$components;\n      return /*#__PURE__*/_jsx(rootProps.components.BaseTextField, _extends({}, params, {\n        label: apiRef.current.getLocaleText('filterPanelInputLabel'),\n        placeholder: apiRef.current.getLocaleText('filterPanelInputPlaceholder'),\n        InputLabelProps: _extends({}, params.InputLabelProps, {\n          shrink: true\n        }),\n        inputRef: focusElementRef,\n        type: \"singleSelect\"\n      }, TextFieldProps, (_rootProps$components = rootProps.componentsProps) == null ? void 0 : _rootProps$components.baseTextField));\n    }\n  }, other));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridFilterInputMultipleSingleSelect.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  apiRef: PropTypes.shape({\n    current: PropTypes.object.isRequired\n  }).isRequired,\n  applyValue: PropTypes.func.isRequired,\n  focusElementRef: PropTypes\n  /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.func, PropTypes.object]),\n  item: PropTypes.shape({\n    columnField: PropTypes.string.isRequired,\n    id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    operatorValue: PropTypes.string,\n    value: PropTypes.any\n  }).isRequired,\n  type: PropTypes.oneOf(['singleSelect'])\n} : void 0;\nexport { GridFilterInputMultipleSingleSelect };","import { GridFilterInputSingleSelect } from '../components/panel/filterPanel/GridFilterInputSingleSelect';\nimport { GridFilterInputMultipleSingleSelect } from '../components/panel/filterPanel/GridFilterInputMultipleSingleSelect';\nconst parseObjectValue = value => {\n  if (value == null || typeof value !== 'object') {\n    return value;\n  }\n  return value.value;\n};\nexport const getGridSingleSelectQuickFilterFn = (value, column, apiRef) => {\n  if (!value) {\n    return null;\n  }\n  const {\n    valueOptions,\n    valueFormatter,\n    field\n  } = column;\n  const potentialValues = [parseObjectValue(value).toString()];\n  const iterableColumnValues = typeof valueOptions === 'function' ? valueOptions({\n    field\n  }) : valueOptions || [];\n  if (iterableColumnValues) {\n    iterableColumnValues.forEach(option => {\n      // for each valueOption, check if the formatted value\n      let optionValue;\n      let optionLabel;\n      if (typeof option === 'object') {\n        optionValue = option.value;\n        optionLabel = option.label;\n      } else {\n        optionValue = option;\n        if (valueFormatter) {\n          optionLabel = valueFormatter({\n            value: option,\n            field,\n            api: apiRef.current\n          });\n        } else {\n          optionLabel = option;\n        }\n      }\n      if (optionLabel.slice(0, value.length).toLowerCase() === value.toLowerCase()) {\n        if (!potentialValues.includes(optionValue)) {\n          potentialValues.push(optionValue.toString());\n        }\n      }\n    });\n  }\n  return _ref => {\n    let {\n      value: columnValue\n    } = _ref;\n    return columnValue != null ? potentialValues.includes(parseObjectValue(columnValue).toString()) : false;\n  };\n};\nexport const getGridSingleSelectOperators = () => [{\n  value: 'is',\n  getApplyFilterFn: filterItem => {\n    if (filterItem.value == null || filterItem.value === '') {\n      return null;\n    }\n    return _ref2 => {\n      let {\n        value\n      } = _ref2;\n      return parseObjectValue(value) === parseObjectValue(filterItem.value);\n    };\n  },\n  InputComponent: GridFilterInputSingleSelect\n}, {\n  value: 'not',\n  getApplyFilterFn: filterItem => {\n    if (filterItem.value == null || filterItem.value === '') {\n      return null;\n    }\n    return _ref3 => {\n      let {\n        value\n      } = _ref3;\n      return parseObjectValue(value) !== parseObjectValue(filterItem.value);\n    };\n  },\n  InputComponent: GridFilterInputSingleSelect\n}, {\n  value: 'isAnyOf',\n  getApplyFilterFn: filterItem => {\n    if (!Array.isArray(filterItem.value) || filterItem.value.length === 0) {\n      return null;\n    }\n    const filterItemValues = filterItem.value.map(parseObjectValue);\n    return _ref4 => {\n      let {\n        value\n      } = _ref4;\n      return filterItemValues.includes(parseObjectValue(value));\n    };\n  },\n  InputComponent: GridFilterInputMultipleSingleSelect\n}];","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { GRID_STRING_COL_DEF } from './gridStringColDef';\nimport { renderEditSingleSelectCell } from '../components/cell/GridEditSingleSelectCell';\nimport { getGridSingleSelectOperators, getGridSingleSelectQuickFilterFn } from './gridSingleSelectOperators';\nexport const GRID_SINGLE_SELECT_COL_DEF = _extends({}, GRID_STRING_COL_DEF, {\n  type: 'singleSelect',\n  renderEditCell: renderEditSingleSelectCell,\n  filterOperators: getGridSingleSelectOperators(),\n  getApplyQuickFilterFn: getGridSingleSelectQuickFilterFn\n});","'use client';\n\nimport * as React from 'react';\nimport { elementAcceptingRef, exactProp, unstable_ownerDocument as ownerDocument, unstable_useForkRef as useForkRef, unstable_useEventCallback as useEventCallback } from '@mui/utils';\n\n// TODO: return `EventHandlerName extends `on${infer EventName}` ? Lowercase<EventName> : never` once generatePropTypes runs with TS 4.1\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction mapEventPropToEvent(eventProp) {\n  return eventProp.substring(2).toLowerCase();\n}\nfunction clickedRootScrollbar(event, doc) {\n  return doc.documentElement.clientWidth < event.clientX || doc.documentElement.clientHeight < event.clientY;\n}\n/**\n * Listen for click events that occur somewhere in the document, outside of the element itself.\n * For instance, if you need to hide a menu when people click anywhere else on your page.\n *\n * Demos:\n *\n * - [Click-Away Listener](https://mui.com/material-ui/react-click-away-listener/)\n * - [Menu](https://mui.com/material-ui/react-menu/)\n *\n * API:\n *\n * - [ClickAwayListener API](https://mui.com/material-ui/api/click-away-listener/)\n */\nfunction ClickAwayListener(props) {\n  const {\n    children,\n    disableReactTree = false,\n    mouseEvent = 'onClick',\n    onClickAway,\n    touchEvent = 'onTouchEnd'\n  } = props;\n  const movedRef = React.useRef(false);\n  const nodeRef = React.useRef(null);\n  const activatedRef = React.useRef(false);\n  const syntheticEventRef = React.useRef(false);\n  React.useEffect(() => {\n    // Ensure that this component is not \"activated\" synchronously.\n    // https://github.com/facebook/react/issues/20074\n    setTimeout(() => {\n      activatedRef.current = true;\n    }, 0);\n    return () => {\n      activatedRef.current = false;\n    };\n  }, []);\n  const handleRef = useForkRef(\n  // @ts-expect-error TODO upstream fix\n  children.ref, nodeRef);\n\n  // The handler doesn't take event.defaultPrevented into account:\n  //\n  // event.preventDefault() is meant to stop default behaviors like\n  // clicking a checkbox to check it, hitting a button to submit a form,\n  // and hitting left arrow to move the cursor in a text input etc.\n  // Only special HTML elements have these default behaviors.\n  const handleClickAway = useEventCallback(event => {\n    // Given developers can stop the propagation of the synthetic event,\n    // we can only be confident with a positive value.\n    const insideReactTree = syntheticEventRef.current;\n    syntheticEventRef.current = false;\n    const doc = ownerDocument(nodeRef.current);\n\n    // 1. IE11 support, which trigger the handleClickAway even after the unbind\n    // 2. The child might render null.\n    // 3. Behave like a blur listener.\n    if (!activatedRef.current || !nodeRef.current || 'clientX' in event && clickedRootScrollbar(event, doc)) {\n      return;\n    }\n\n    // Do not act if user performed touchmove\n    if (movedRef.current) {\n      movedRef.current = false;\n      return;\n    }\n    let insideDOM;\n\n    // If not enough, can use https://github.com/DieterHolvoet/event-propagation-path/blob/master/propagationPath.js\n    if (event.composedPath) {\n      insideDOM = event.composedPath().indexOf(nodeRef.current) > -1;\n    } else {\n      insideDOM = !doc.documentElement.contains(\n      // @ts-expect-error returns `false` as intended when not dispatched from a Node\n      event.target) || nodeRef.current.contains(\n      // @ts-expect-error returns `false` as intended when not dispatched from a Node\n      event.target);\n    }\n    if (!insideDOM && (disableReactTree || !insideReactTree)) {\n      onClickAway(event);\n    }\n  });\n\n  // Keep track of mouse/touch events that bubbled up through the portal.\n  const createHandleSynthetic = handlerName => event => {\n    syntheticEventRef.current = true;\n    const childrenPropsHandler = children.props[handlerName];\n    if (childrenPropsHandler) {\n      childrenPropsHandler(event);\n    }\n  };\n  const childrenProps = {\n    ref: handleRef\n  };\n  if (touchEvent !== false) {\n    childrenProps[touchEvent] = createHandleSynthetic(touchEvent);\n  }\n  React.useEffect(() => {\n    if (touchEvent !== false) {\n      const mappedTouchEvent = mapEventPropToEvent(touchEvent);\n      const doc = ownerDocument(nodeRef.current);\n      const handleTouchMove = () => {\n        movedRef.current = true;\n      };\n      doc.addEventListener(mappedTouchEvent, handleClickAway);\n      doc.addEventListener('touchmove', handleTouchMove);\n      return () => {\n        doc.removeEventListener(mappedTouchEvent, handleClickAway);\n        doc.removeEventListener('touchmove', handleTouchMove);\n      };\n    }\n    return undefined;\n  }, [handleClickAway, touchEvent]);\n  if (mouseEvent !== false) {\n    childrenProps[mouseEvent] = createHandleSynthetic(mouseEvent);\n  }\n  React.useEffect(() => {\n    if (mouseEvent !== false) {\n      const mappedMouseEvent = mapEventPropToEvent(mouseEvent);\n      const doc = ownerDocument(nodeRef.current);\n      doc.addEventListener(mappedMouseEvent, handleClickAway);\n      return () => {\n        doc.removeEventListener(mappedMouseEvent, handleClickAway);\n      };\n    }\n    return undefined;\n  }, [handleClickAway, mouseEvent]);\n  return /*#__PURE__*/_jsx(React.Fragment, {\n    children: /*#__PURE__*/React.cloneElement(children, childrenProps)\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? void 0 : void 0;\nif (process.env.NODE_ENV !== 'production') {\n  // eslint-disable-next-line\n  ClickAwayListener['propTypes' + ''] = exactProp(ClickAwayListener.propTypes);\n}\nexport { ClickAwayListener };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"open\", \"target\", \"onClickAway\", \"children\", \"position\", \"className\", \"onExited\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport ClickAwayListener from '@mui/material/ClickAwayListener';\nimport { unstable_composeClasses as composeClasses } from '@mui/material';\nimport Grow from '@mui/material/Grow';\nimport Paper from '@mui/material/Paper';\nimport Popper from '@mui/material/Popper';\nimport { styled } from '@mui/material/styles';\nimport { HTMLElementType } from '@mui/utils';\nimport { getDataGridUtilityClass, gridClasses } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['menu']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridMenuRoot = styled(Popper, {\n  name: 'MuiDataGrid',\n  slot: 'Menu',\n  overridesResolver: (props, styles) => styles.menu\n})(_ref => {\n  let {\n    theme\n  } = _ref;\n  return {\n    zIndex: theme.zIndex.modal,\n    [`& .${gridClasses.menuList}`]: {\n      outline: 0\n    }\n  };\n});\nconst transformOrigin = {\n  'bottom-start': 'top left',\n  'bottom-end': 'top right'\n};\nconst GridMenu = props => {\n  var _rootProps$components;\n  const {\n      open,\n      target,\n      onClickAway,\n      children,\n      position,\n      className,\n      onExited\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridApiContext();\n  const prevTarget = React.useRef(target);\n  const prevOpen = React.useRef(open);\n  const rootProps = useGridRootProps();\n  const classes = useUtilityClasses(rootProps);\n  React.useEffect(() => {\n    if (prevOpen.current && prevTarget.current) {\n      prevTarget.current.focus();\n    } // Emit menuOpen or menuClose events\n\n    const eventName = open ? 'menuOpen' : 'menuClose';\n    apiRef.current.publishEvent(eventName, {\n      target\n    });\n    prevOpen.current = open;\n    prevTarget.current = target;\n  }, [apiRef, open, target]);\n  const handleExited = popperOnExited => node => {\n    if (popperOnExited) {\n      popperOnExited();\n    }\n    if (onExited) {\n      onExited(node);\n    }\n  };\n  return /*#__PURE__*/_jsx(GridMenuRoot, _extends({\n    as: rootProps.components.BasePopper,\n    className: clsx(className, classes.root),\n    ownerState: rootProps,\n    open: open,\n    anchorEl: target,\n    transition: true,\n    placement: position\n  }, other, (_rootProps$components = rootProps.componentsProps) == null ? void 0 : _rootProps$components.basePopper, {\n    children: _ref2 => {\n      let {\n        TransitionProps,\n        placement\n      } = _ref2;\n      return /*#__PURE__*/_jsx(ClickAwayListener, {\n        onClickAway: onClickAway,\n        mouseEvent: \"onMouseDown\",\n        children: /*#__PURE__*/_jsx(Grow, _extends({}, TransitionProps, {\n          style: {\n            transformOrigin: transformOrigin[placement]\n          },\n          onExited: handleExited(TransitionProps == null ? void 0 : TransitionProps.onExited),\n          children: /*#__PURE__*/_jsx(Paper, {\n            children: children\n          })\n        }))\n      });\n    }\n  }));\n};\nprocess.env.NODE_ENV !== \"production\" ? GridMenu.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  children: PropTypes.node,\n  onClickAway: PropTypes.func.isRequired,\n  onExited: PropTypes.func,\n  /**\n   * If `true`, the component is shown.\n   */\n  open: PropTypes.bool.isRequired,\n  position: PropTypes.oneOf(['bottom-end', 'bottom-start', 'bottom', 'left-end', 'left-start', 'left', 'right-end', 'right-start', 'right', 'top-end', 'top-start', 'top']),\n  target: HTMLElementType\n} : void 0;\nexport { GridMenu };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"colDef\", \"id\", \"api\", \"hasFocus\", \"isEditable\", \"field\", \"value\", \"formattedValue\", \"row\", \"rowNode\", \"cellMode\", \"getValue\", \"tabIndex\", \"position\", \"focusElementRef\"];\nimport * as React from 'react';\nimport IconButton from '@mui/material/IconButton';\nimport MenuList from '@mui/material/MenuList';\nimport { unstable_useId as useId } from '@mui/material/utils';\nimport { gridClasses } from '../../constants/gridClasses';\nimport { GridMenu } from '../menu/GridMenu';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst hasActions = colDef => typeof colDef.getActions === 'function';\nconst GridActionsCell = props => {\n  const {\n      colDef,\n      id,\n      hasFocus,\n      tabIndex,\n      position = 'bottom-end',\n      focusElementRef\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const [focusedButtonIndex, setFocusedButtonIndex] = React.useState(-1);\n  const [open, setOpen] = React.useState(false);\n  const apiRef = useGridApiContext();\n  const rootRef = React.useRef(null);\n  const buttonRef = React.useRef(null);\n  const ignoreCallToFocus = React.useRef(false);\n  const touchRippleRefs = React.useRef({});\n  const menuId = useId();\n  const buttonId = useId();\n  const rootProps = useGridRootProps();\n  React.useLayoutEffect(() => {\n    if (!hasFocus) {\n      Object.entries(touchRippleRefs.current).forEach(_ref => {\n        let [index, ref] = _ref;\n        ref == null ? void 0 : ref.stop({}, () => {\n          delete touchRippleRefs.current[index];\n        });\n      });\n    }\n  }, [hasFocus]);\n  React.useEffect(() => {\n    if (focusedButtonIndex < 0 || !rootRef.current) {\n      return;\n    }\n    if (focusedButtonIndex >= rootRef.current.children.length) {\n      return;\n    }\n    const child = rootRef.current.children[focusedButtonIndex];\n    child.focus({\n      preventScroll: true\n    });\n  }, [focusedButtonIndex]);\n  React.useEffect(() => {\n    if (!hasFocus) {\n      setFocusedButtonIndex(-1);\n      ignoreCallToFocus.current = false;\n    }\n  }, [hasFocus]);\n  React.useImperativeHandle(focusElementRef, () => ({\n    focus() {\n      // If ignoreCallToFocus is true, then one of the buttons was clicked and the focus is already set\n      if (!ignoreCallToFocus.current) {\n        setFocusedButtonIndex(0);\n      }\n    }\n  }), []);\n  if (!hasActions(colDef)) {\n    throw new Error('MUI: Missing the `getActions` property in the `GridColDef`.');\n  }\n  const options = colDef.getActions(apiRef.current.getRowParams(id));\n  const iconButtons = options.filter(option => !option.props.showInMenu);\n  const menuButtons = options.filter(option => option.props.showInMenu);\n  const numberOfButtons = iconButtons.length + (menuButtons.length ? 1 : 0);\n  React.useEffect(() => {\n    if (focusedButtonIndex >= numberOfButtons) {\n      setFocusedButtonIndex(numberOfButtons - 1);\n    }\n  }, [focusedButtonIndex, numberOfButtons]);\n  const showMenu = () => {\n    setOpen(true);\n    setFocusedButtonIndex(numberOfButtons - 1);\n    ignoreCallToFocus.current = true;\n  };\n  const hideMenu = () => {\n    setOpen(false);\n  };\n  const handleTouchRippleRef = index => instance => {\n    touchRippleRefs.current[index] = instance;\n  };\n  const handleButtonClick = (index, onClick) => event => {\n    setFocusedButtonIndex(index);\n    ignoreCallToFocus.current = true;\n    if (onClick) {\n      onClick(event);\n    }\n  };\n  const handleRootKeyDown = event => {\n    if (numberOfButtons <= 1) {\n      return;\n    }\n    let newIndex = focusedButtonIndex;\n    if (event.key === 'ArrowRight') {\n      newIndex += 1;\n    } else if (event.key === 'ArrowLeft') {\n      newIndex -= 1;\n    }\n    if (newIndex < 0 || newIndex >= numberOfButtons) {\n      return; // We're already in the first or last item = do nothing and let the grid listen the event\n    }\n    if (newIndex !== focusedButtonIndex) {\n      event.preventDefault(); // Prevent scrolling\n\n      event.stopPropagation(); // Don't stop propagation for other keys, e.g. ArrowUp\n\n      setFocusedButtonIndex(newIndex);\n    }\n  };\n  const handleListKeyDown = event => {\n    if (event.key === 'Tab') {\n      event.preventDefault();\n    }\n    if (['Tab', 'Enter', 'Escape'].includes(event.key)) {\n      hideMenu();\n    }\n  };\n  return /*#__PURE__*/_jsxs(\"div\", _extends({\n    role: \"menu\",\n    ref: rootRef,\n    tabIndex: -1,\n    className: gridClasses.actionsCell,\n    onKeyDown: handleRootKeyDown\n  }, other, {\n    children: [iconButtons.map((button, index) => /*#__PURE__*/React.cloneElement(button, {\n      key: index,\n      touchRippleRef: handleTouchRippleRef(index),\n      onClick: handleButtonClick(index, button.props.onClick),\n      tabIndex: focusedButtonIndex === index ? tabIndex : -1\n    })), menuButtons.length > 0 && buttonId && /*#__PURE__*/_jsx(IconButton, {\n      ref: buttonRef,\n      id: buttonId,\n      \"aria-label\": apiRef.current.getLocaleText('actionsCellMore'),\n      \"aria-controls\": menuId,\n      \"aria-expanded\": open ? 'true' : undefined,\n      \"aria-haspopup\": \"true\",\n      role: \"menuitem\",\n      size: \"small\",\n      onClick: showMenu,\n      touchRippleRef: handleTouchRippleRef(buttonId),\n      tabIndex: focusedButtonIndex === iconButtons.length ? tabIndex : -1,\n      children: /*#__PURE__*/_jsx(rootProps.components.MoreActionsIcon, {\n        fontSize: \"small\"\n      })\n    }), menuButtons.length > 0 && /*#__PURE__*/_jsx(GridMenu, {\n      onClickAway: hideMenu,\n      onClick: hideMenu,\n      open: open,\n      target: buttonRef.current,\n      position: position,\n      children: /*#__PURE__*/_jsx(MenuList, {\n        id: menuId,\n        className: gridClasses.menuList,\n        onKeyDown: handleListKeyDown,\n        \"aria-labelledby\": buttonId,\n        variant: \"menu\",\n        autoFocusItem: true,\n        children: menuButtons.map((button, index) => /*#__PURE__*/React.cloneElement(button, {\n          key: index\n        }))\n      })\n    })]\n  }));\n};\nprocess.env.NODE_ENV !== \"production\" ? void 0 : void 0;\nexport { GridActionsCell };\nexport const renderActionsCell = params => /*#__PURE__*/_jsx(GridActionsCell, _extends({}, params));","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { GRID_STRING_COL_DEF } from './gridStringColDef';\nimport { renderActionsCell } from '../components/cell/GridActionsCell';\nexport const GRID_ACTIONS_COLUMN_TYPE = 'actions';\nexport const GRID_ACTIONS_COL_DEF = _extends({}, GRID_STRING_COL_DEF, {\n  sortable: false,\n  filterable: false,\n  // @ts-ignore\n  aggregable: false,\n  width: 100,\n  align: 'center',\n  headerAlign: 'center',\n  headerName: '',\n  disableColumnMenu: true,\n  disableExport: true,\n  renderCell: renderActionsCell,\n  getApplyQuickFilterFn: undefined\n});","import { GRID_STRING_COL_DEF } from './gridStringColDef';\nimport { GRID_NUMERIC_COL_DEF } from './gridNumericColDef';\nimport { GRID_DATE_COL_DEF, GRID_DATETIME_COL_DEF } from './gridDateColDef';\nimport { GRID_BOOLEAN_COL_DEF } from './gridBooleanColDef';\nimport { GRID_SINGLE_SELECT_COL_DEF } from './gridSingleSelectColDef';\nimport { GRID_ACTIONS_COL_DEF, GRID_ACTIONS_COLUMN_TYPE } from './gridActionsColDef';\nexport const DEFAULT_GRID_COL_TYPE_KEY = '__default__';\nexport const getGridDefaultColumnTypes = () => {\n  const nativeColumnTypes = {\n    string: GRID_STRING_COL_DEF,\n    number: GRID_NUMERIC_COL_DEF,\n    date: GRID_DATE_COL_DEF,\n    dateTime: GRID_DATETIME_COL_DEF,\n    boolean: GRID_BOOLEAN_COL_DEF,\n    singleSelect: GRID_SINGLE_SELECT_COL_DEF,\n    [GRID_ACTIONS_COLUMN_TYPE]: GRID_ACTIONS_COL_DEF,\n    [DEFAULT_GRID_COL_TYPE_KEY]: GRID_STRING_COL_DEF\n  };\n  return nativeColumnTypes;\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { DEFAULT_GRID_COL_TYPE_KEY, getGridDefaultColumnTypes } from '../../../colDef';\nimport { gridColumnsSelector, gridColumnVisibilityModelSelector } from './gridColumnsSelector';\nimport { clamp } from '../../../utils/utils';\nexport const COLUMNS_DIMENSION_PROPERTIES = ['maxWidth', 'minWidth', 'width', 'flex'];\nexport const computeColumnTypes = function () {\n  let customColumnTypes = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  const mergedColumnTypes = _extends({}, getGridDefaultColumnTypes());\n  Object.entries(customColumnTypes).forEach(_ref => {\n    let [colType, colTypeDef] = _ref;\n    if (mergedColumnTypes[colType]) {\n      mergedColumnTypes[colType] = _extends({}, mergedColumnTypes[colType], colTypeDef);\n    } else {\n      mergedColumnTypes[colType] = _extends({}, mergedColumnTypes[colTypeDef.extendType || DEFAULT_GRID_COL_TYPE_KEY], colTypeDef);\n    }\n  });\n  return mergedColumnTypes;\n};\n/**\n * Computes width for flex columns.\n * Based on CSS Flexbox specification:\n * https://drafts.csswg.org/css-flexbox-1/#resolve-flexible-lengths\n */\n\nexport function computeFlexColumnsWidth(_ref2) {\n  let {\n    initialFreeSpace,\n    totalFlexUnits,\n    flexColumns\n  } = _ref2;\n  const flexColumnsLookup = {\n    all: {},\n    frozenFields: [],\n    freeze: field => {\n      const value = flexColumnsLookup.all[field];\n      if (value && value.frozen !== true) {\n        flexColumnsLookup.all[field].frozen = true;\n        flexColumnsLookup.frozenFields.push(field);\n      }\n    }\n  }; // Step 5 of https://drafts.csswg.org/css-flexbox-1/#resolve-flexible-lengths\n\n  function loopOverFlexItems() {\n    // 5a: If all the flex items on the line are frozen, free space has been distributed.\n    if (flexColumnsLookup.frozenFields.length === flexColumns.length) {\n      return;\n    }\n    const violationsLookup = {\n      min: {},\n      max: {}\n    };\n    let remainingFreeSpace = initialFreeSpace;\n    let flexUnits = totalFlexUnits;\n    let totalViolation = 0; // 5b: Calculate the remaining free space\n\n    flexColumnsLookup.frozenFields.forEach(field => {\n      remainingFreeSpace -= flexColumnsLookup.all[field].computedWidth;\n      flexUnits -= flexColumnsLookup.all[field].flex;\n    });\n    for (let i = 0; i < flexColumns.length; i += 1) {\n      const column = flexColumns[i];\n      if (flexColumnsLookup.all[column.field] && flexColumnsLookup.all[column.field].frozen === true) {\n        // eslint-disable-next-line no-continue\n        continue;\n      } // 5c: Distribute remaining free space proportional to the flex factors\n\n      const widthPerFlexUnit = remainingFreeSpace / flexUnits;\n      let computedWidth = widthPerFlexUnit * column.flex; // 5d: Fix min/max violations\n\n      if (computedWidth < column.minWidth) {\n        totalViolation += column.minWidth - computedWidth;\n        computedWidth = column.minWidth;\n        violationsLookup.min[column.field] = true;\n      } else if (computedWidth > column.maxWidth) {\n        totalViolation += column.maxWidth - computedWidth;\n        computedWidth = column.maxWidth;\n        violationsLookup.max[column.field] = true;\n      }\n      flexColumnsLookup.all[column.field] = {\n        frozen: false,\n        computedWidth,\n        flex: column.flex\n      };\n    } // 5e: Freeze over-flexed items\n\n    if (totalViolation < 0) {\n      // Freeze all the items with max violations\n      Object.keys(violationsLookup.max).forEach(field => {\n        flexColumnsLookup.freeze(field);\n      });\n    } else if (totalViolation > 0) {\n      // Freeze all the items with min violations\n      Object.keys(violationsLookup.min).forEach(field => {\n        flexColumnsLookup.freeze(field);\n      });\n    } else {\n      // Freeze all items\n      flexColumns.forEach(_ref3 => {\n        let {\n          field\n        } = _ref3;\n        flexColumnsLookup.freeze(field);\n      });\n    } // 5f: Return to the start of this loop\n\n    loopOverFlexItems();\n  }\n  loopOverFlexItems();\n  return flexColumnsLookup.all;\n}\n/**\n * Compute the `computedWidth` (ie: the width the column should have during rendering) based on the `width` / `flex` / `minWidth` / `maxWidth` properties of `GridColDef`.\n * The columns already have been merged with there `type` default values for `minWidth`, `maxWidth` and `width`, thus the `!` for those properties below.\n * TODO: Unit test this function in depth and only keep basic cases for the whole grid testing.\n * TODO: Improve the `GridColDef` typing to reflect the fact that `minWidth` / `maxWidth` and `width` can't be null after the merge with the `type` default values.\n */\n\nexport const hydrateColumnsWidth = (rawState, viewportInnerWidth) => {\n  const columnsLookup = {};\n  let totalFlexUnits = 0;\n  let widthAllocatedBeforeFlex = 0;\n  const flexColumns = []; // For the non-flex columns, compute their width\n  // For the flex columns, compute there minimum width and how much width must be allocated during the flex allocation\n\n  rawState.all.forEach(columnField => {\n    const newColumn = _extends({}, rawState.lookup[columnField]);\n    if (rawState.columnVisibilityModel[columnField] === false) {\n      newColumn.computedWidth = 0;\n    } else {\n      let computedWidth;\n      if (newColumn.flex && newColumn.flex > 0) {\n        totalFlexUnits += newColumn.flex;\n        computedWidth = 0;\n        flexColumns.push(newColumn);\n      } else {\n        computedWidth = clamp(newColumn.width, newColumn.minWidth, newColumn.maxWidth);\n      }\n      widthAllocatedBeforeFlex += computedWidth;\n      newColumn.computedWidth = computedWidth;\n    }\n    columnsLookup[columnField] = newColumn;\n  });\n  const initialFreeSpace = Math.max(viewportInnerWidth - widthAllocatedBeforeFlex, 0); // Allocate the remaining space to the flex columns\n\n  if (totalFlexUnits > 0 && viewportInnerWidth > 0) {\n    const computedColumnWidths = computeFlexColumnsWidth({\n      initialFreeSpace,\n      totalFlexUnits,\n      flexColumns\n    });\n    Object.keys(computedColumnWidths).forEach(field => {\n      columnsLookup[field].computedWidth = computedColumnWidths[field].computedWidth;\n    });\n  }\n  return _extends({}, rawState, {\n    lookup: columnsLookup\n  });\n};\nlet columnTypeWarnedOnce = false;\n/**\n * Apply the order and the dimensions of the initial state.\n * The columns not registered in `orderedFields` will be placed after the imported columns.\n */\n\nexport const applyInitialState = (columnsState, initialState) => {\n  if (!initialState) {\n    return columnsState;\n  }\n  const {\n    orderedFields = [],\n    dimensions = {}\n  } = initialState;\n  const columnsWithUpdatedDimensions = Object.keys(dimensions);\n  if (columnsWithUpdatedDimensions.length === 0 && orderedFields.length === 0) {\n    return columnsState;\n  }\n  const orderedFieldsLookup = {};\n  const cleanOrderedFields = [];\n  for (let i = 0; i < orderedFields.length; i += 1) {\n    const field = orderedFields[i]; // Ignores the fields in the initialState that matches no field on the current column state\n\n    if (columnsState.lookup[field]) {\n      orderedFieldsLookup[field] = true;\n      cleanOrderedFields.push(field);\n    }\n  }\n  const newOrderedFields = cleanOrderedFields.length === 0 ? columnsState.all : [...cleanOrderedFields, ...columnsState.all.filter(field => !orderedFieldsLookup[field])];\n  const newColumnLookup = _extends({}, columnsState.lookup);\n  for (let i = 0; i < columnsWithUpdatedDimensions.length; i += 1) {\n    const field = columnsWithUpdatedDimensions[i];\n    const newColDef = _extends({}, newColumnLookup[field], {\n      hasBeenResized: true\n    });\n    Object.entries(dimensions[field]).forEach(_ref4 => {\n      let [key, value] = _ref4;\n      newColDef[key] = value === -1 ? Infinity : value;\n    });\n    newColumnLookup[field] = newColDef;\n  }\n  const newColumnsState = {\n    all: newOrderedFields,\n    lookup: newColumnLookup\n  };\n  return newColumnsState;\n};\n/**\n * @deprecated Should have been internal only, you can inline the logic.\n */\n\nexport const getGridColDef = (columnTypes, type) => {\n  if (!type) {\n    return columnTypes[DEFAULT_GRID_COL_TYPE_KEY];\n  }\n  if (process.env.NODE_ENV !== 'production') {\n    if (!columnTypeWarnedOnce && !columnTypes[type]) {\n      console.warn([`MUI: The column type \"${type}\" you are using is not supported.`, `Column type \"string\" is being used instead.`].join('\\n'));\n      columnTypeWarnedOnce = true;\n    }\n  }\n  if (!columnTypes[type]) {\n    return columnTypes[DEFAULT_GRID_COL_TYPE_KEY];\n  }\n  return columnTypes[type];\n};\nexport const createColumnsState = _ref5 => {\n  let {\n    apiRef,\n    columnsToUpsert,\n    initialState,\n    columnTypes,\n    currentColumnVisibilityModel = gridColumnVisibilityModelSelector(apiRef),\n    shouldRegenColumnVisibilityModelFromColumns,\n    keepOnlyColumnsToUpsert = false\n  } = _ref5;\n  var _apiRef$current$getRo, _apiRef$current$getRo2, _apiRef$current, _apiRef$current$getRo3;\n  const isInsideStateInitializer = !apiRef.current.state.columns;\n  let columnsStateWithoutColumnVisibilityModel;\n  if (isInsideStateInitializer) {\n    columnsStateWithoutColumnVisibilityModel = {\n      all: [],\n      lookup: {}\n    };\n  } else {\n    const currentState = gridColumnsSelector(apiRef.current.state);\n    columnsStateWithoutColumnVisibilityModel = {\n      all: keepOnlyColumnsToUpsert ? [] : [...currentState.all],\n      lookup: _extends({}, currentState.lookup) // Will be cleaned later if keepOnlyColumnsToUpsert=true\n    };\n  }\n  let columnsToKeep = {};\n  if (keepOnlyColumnsToUpsert && !isInsideStateInitializer) {\n    columnsToKeep = Object.keys(columnsStateWithoutColumnVisibilityModel.lookup).reduce((acc, key) => _extends({}, acc, {\n      [key]: false\n    }), {});\n  }\n  const columnsToUpsertLookup = {};\n  columnsToUpsert.forEach(newColumn => {\n    const {\n      field\n    } = newColumn;\n    columnsToUpsertLookup[field] = true;\n    columnsToKeep[field] = true;\n    let existingState = columnsStateWithoutColumnVisibilityModel.lookup[field];\n    if (existingState == null) {\n      // New Column\n      existingState = _extends({}, getGridColDef(columnTypes, newColumn.type), {\n        // TODO v6: Inline `getGridColDef`\n        field,\n        hasBeenResized: false\n      });\n      columnsStateWithoutColumnVisibilityModel.all.push(field);\n    } else if (keepOnlyColumnsToUpsert) {\n      columnsStateWithoutColumnVisibilityModel.all.push(field);\n    }\n    let hasBeenResized = existingState.hasBeenResized;\n    COLUMNS_DIMENSION_PROPERTIES.forEach(key => {\n      if (newColumn[key] !== undefined) {\n        hasBeenResized = true;\n        if (newColumn[key] === -1) {\n          newColumn[key] = Infinity;\n        }\n      }\n    });\n    columnsStateWithoutColumnVisibilityModel.lookup[field] = _extends({}, existingState, {\n      hide: newColumn.hide == null ? false : newColumn.hide\n    }, newColumn, {\n      hasBeenResized\n    });\n  });\n  if (keepOnlyColumnsToUpsert && !isInsideStateInitializer) {\n    Object.keys(columnsStateWithoutColumnVisibilityModel.lookup).forEach(field => {\n      if (!columnsToKeep[field]) {\n        delete columnsStateWithoutColumnVisibilityModel.lookup[field];\n      }\n    });\n  }\n  const columnsLookupBeforePreProcessing = _extends({}, columnsStateWithoutColumnVisibilityModel.lookup);\n  const columnsStateWithPreProcessing = apiRef.current.unstable_applyPipeProcessors('hydrateColumns', columnsStateWithoutColumnVisibilityModel); // TODO v6: remove the sync between the columns `hide` option and the model.\n\n  let columnVisibilityModel = {};\n  if (shouldRegenColumnVisibilityModelFromColumns) {\n    let hasModelChanged = false;\n    const newColumnVisibilityModel = _extends({}, currentColumnVisibilityModel);\n    if (isInsideStateInitializer) {\n      columnsStateWithPreProcessing.all.forEach(field => {\n        newColumnVisibilityModel[field] = !columnsStateWithoutColumnVisibilityModel.lookup[field].hide;\n      });\n    } else if (keepOnlyColumnsToUpsert) {\n      // At this point, `keepOnlyColumnsToUpsert` has a new meaning: keep the columns\n      // passed via `columnToUpsert` + columns added by the pre-processors. We do the following\n      // cleanup because a given column may have been removed from the `columns` prop but it still\n      // exists in the state.\n      Object.keys(newColumnVisibilityModel).forEach(field => {\n        if (!columnsStateWithPreProcessing.lookup[field]) {\n          delete newColumnVisibilityModel[field];\n          hasModelChanged = true;\n        }\n      });\n    }\n    columnsStateWithPreProcessing.all.forEach(field => {\n      // If neither the `columnsToUpsert` nor the pre-processors updated the column,\n      // Then we don't want to update the visibility status of the column in the model.\n      if (!columnsToUpsertLookup[field] && columnsLookupBeforePreProcessing[field] === columnsStateWithPreProcessing.lookup[field]) {\n        return;\n      } // We always assume that a column not in the model is visible by default. However, there's an\n      // edge case where the column is not in the model but it also doesn't exist in the `columns`\n      // prop, meaning that the column is being added. In that case, we assume that the column was\n      // not visible before for it be added to the model.\n\n      let isVisibleBefore = currentColumnVisibilityModel[field];\n      if (isVisibleBefore === undefined) {\n        if (isInsideStateInitializer) {\n          isVisibleBefore = true;\n        } else {\n          const currentState = gridColumnsSelector(apiRef.current.state);\n          isVisibleBefore = !!currentState.lookup[field];\n        }\n      }\n      const isVisibleAfter = !columnsStateWithPreProcessing.lookup[field].hide;\n      if (isVisibleAfter !== isVisibleBefore) {\n        hasModelChanged = true;\n        newColumnVisibilityModel[field] = isVisibleAfter;\n      }\n    });\n    if (hasModelChanged || isInsideStateInitializer) {\n      columnVisibilityModel = newColumnVisibilityModel;\n    } else {\n      columnVisibilityModel = currentColumnVisibilityModel;\n    }\n  } else {\n    columnVisibilityModel = currentColumnVisibilityModel;\n  }\n  const columnsStateWithPortableColumns = applyInitialState(columnsStateWithPreProcessing, initialState);\n  const columnsState = _extends({}, columnsStateWithPortableColumns, {\n    columnVisibilityModel\n  });\n  return hydrateColumnsWidth(columnsState, (_apiRef$current$getRo = (_apiRef$current$getRo2 = (_apiRef$current = apiRef.current).getRootDimensions) == null ? void 0 : (_apiRef$current$getRo3 = _apiRef$current$getRo2.call(_apiRef$current)) == null ? void 0 : _apiRef$current$getRo3.viewportInnerSize.width) != null ? _apiRef$current$getRo : 0);\n};\nexport const mergeColumnsState = columnsState => state => _extends({}, state, {\n  columns: columnsState\n});\nexport function getFirstNonSpannedColumnToRender(_ref6) {\n  let {\n    firstColumnToRender,\n    apiRef,\n    firstRowToRender,\n    lastRowToRender,\n    visibleRows\n  } = _ref6;\n  let firstNonSpannedColumnToRender = firstColumnToRender;\n  for (let i = firstRowToRender; i < lastRowToRender; i += 1) {\n    const row = visibleRows[i];\n    if (row) {\n      const rowId = visibleRows[i].id;\n      const cellColSpanInfo = apiRef.current.unstable_getCellColSpanInfo(rowId, firstColumnToRender);\n      if (cellColSpanInfo && cellColSpanInfo.spannedByColSpan) {\n        firstNonSpannedColumnToRender = cellColSpanInfo.leftVisibleCellIndex;\n      }\n    }\n  }\n  return firstNonSpannedColumnToRender;\n}\nexport function getFirstColumnIndexToRender(_ref7) {\n  let {\n    firstColumnIndex,\n    minColumnIndex,\n    columnBuffer,\n    firstRowToRender,\n    lastRowToRender,\n    apiRef,\n    visibleRows\n  } = _ref7;\n  const initialFirstColumnToRender = Math.max(firstColumnIndex - columnBuffer, minColumnIndex);\n  const firstColumnToRender = getFirstNonSpannedColumnToRender({\n    firstColumnToRender: initialFirstColumnToRender,\n    apiRef,\n    firstRowToRender,\n    lastRowToRender,\n    visibleRows\n  });\n  return firstColumnToRender;\n}","var GridPreferencePanelsValue;\n(function (GridPreferencePanelsValue) {\n  GridPreferencePanelsValue[\"filters\"] = \"filters\";\n  GridPreferencePanelsValue[\"columns\"] = \"columns\";\n})(GridPreferencePanelsValue || (GridPreferencePanelsValue = {}));\nexport { GridPreferencePanelsValue };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { useGridLogger } from '../../utils/useGridLogger';\nimport { gridColumnFieldsSelector, gridColumnDefinitionsSelector, gridColumnLookupSelector, gridColumnsMetaSelector, gridColumnsSelector, gridColumnVisibilityModelSelector, gridVisibleColumnDefinitionsSelector, gridColumnPositionsSelector } from './gridColumnsSelector';\nimport { useGridApiEventHandler, useGridApiOptionHandler } from '../../utils/useGridApiEventHandler';\nimport { useGridRegisterPipeProcessor, useGridRegisterPipeApplier } from '../../core/pipeProcessing';\nimport { hydrateColumnsWidth, computeColumnTypes, createColumnsState, mergeColumnsState, COLUMNS_DIMENSION_PROPERTIES } from './gridColumnsUtils';\nimport { GridPreferencePanelsValue } from '../preferencesPanel';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const columnsStateInitializer = (state, props, apiRef) => {\n  var _props$initialState, _props$initialState$c, _props$initialState2, _ref, _props$columnVisibili, _props$initialState3, _props$initialState3$;\n  const isUsingColumnVisibilityModel = !!props.columnVisibilityModel || !!((_props$initialState = props.initialState) != null && (_props$initialState$c = _props$initialState.columns) != null && _props$initialState$c.columnVisibilityModel);\n  apiRef.current.unstable_caches.columns = {\n    isUsingColumnVisibilityModel\n  };\n  const columnsTypes = computeColumnTypes(props.columnTypes);\n  const columnsState = createColumnsState({\n    apiRef,\n    columnTypes: columnsTypes,\n    columnsToUpsert: props.columns,\n    initialState: (_props$initialState2 = props.initialState) == null ? void 0 : _props$initialState2.columns,\n    shouldRegenColumnVisibilityModelFromColumns: !isUsingColumnVisibilityModel,\n    currentColumnVisibilityModel: (_ref = (_props$columnVisibili = props.columnVisibilityModel) != null ? _props$columnVisibili : (_props$initialState3 = props.initialState) == null ? void 0 : (_props$initialState3$ = _props$initialState3.columns) == null ? void 0 : _props$initialState3$.columnVisibilityModel) != null ? _ref : {},\n    keepOnlyColumnsToUpsert: true\n  });\n  return _extends({}, state, {\n    columns: columnsState\n  });\n};\n/**\n * @requires useGridParamsApi (method)\n * @requires useGridDimensions (method, event) - can be after\n * TODO: Impossible priority - useGridParamsApi also needs to be after useGridColumns\n */\n\nexport function useGridColumns(apiRef, props) {\n  var _props$initialState5, _props$componentsProp2;\n  const logger = useGridLogger(apiRef, 'useGridColumns');\n  const columnTypes = React.useMemo(() => computeColumnTypes(props.columnTypes), [props.columnTypes]);\n  const previousColumnsProp = React.useRef(props.columns);\n  const previousColumnTypesProp = React.useRef(columnTypes);\n  apiRef.current.unstable_registerControlState({\n    stateId: 'visibleColumns',\n    propModel: props.columnVisibilityModel,\n    propOnChange: props.onColumnVisibilityModelChange,\n    stateSelector: gridColumnVisibilityModelSelector,\n    changeEvent: 'columnVisibilityModelChange'\n  });\n  const setGridColumnsState = React.useCallback(columnsState => {\n    logger.debug('Updating columns state.');\n    apiRef.current.setState(mergeColumnsState(columnsState));\n    apiRef.current.forceUpdate();\n    apiRef.current.publishEvent('columnsChange', columnsState.all);\n  }, [logger, apiRef]);\n  /**\n   * API METHODS\n   */\n\n  const getColumn = React.useCallback(field => gridColumnLookupSelector(apiRef)[field], [apiRef]);\n  const getAllColumns = React.useCallback(() => gridColumnDefinitionsSelector(apiRef), [apiRef]);\n  const getVisibleColumns = React.useCallback(() => gridVisibleColumnDefinitionsSelector(apiRef), [apiRef]);\n  const getColumnsMeta = React.useCallback(() => gridColumnsMetaSelector(apiRef), [apiRef]);\n  const getColumnIndex = React.useCallback(function (field) {\n    let useVisibleColumns = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n    const columns = useVisibleColumns ? gridVisibleColumnDefinitionsSelector(apiRef) : gridColumnDefinitionsSelector(apiRef);\n    return columns.findIndex(col => col.field === field);\n  }, [apiRef]);\n  const getColumnPosition = React.useCallback(field => {\n    const index = getColumnIndex(field);\n    return gridColumnPositionsSelector(apiRef)[index];\n  }, [apiRef, getColumnIndex]);\n  const setColumnVisibilityModel = React.useCallback(model => {\n    const currentModel = gridColumnVisibilityModelSelector(apiRef);\n    if (currentModel !== model) {\n      apiRef.current.setState(state => _extends({}, state, {\n        columns: createColumnsState({\n          apiRef,\n          columnTypes,\n          columnsToUpsert: [],\n          initialState: undefined,\n          shouldRegenColumnVisibilityModelFromColumns: false,\n          currentColumnVisibilityModel: model,\n          keepOnlyColumnsToUpsert: false\n        })\n      }));\n      apiRef.current.forceUpdate();\n    }\n  }, [apiRef, columnTypes]);\n  const updateColumns = React.useCallback(columns => {\n    const columnsState = createColumnsState({\n      apiRef,\n      columnTypes,\n      columnsToUpsert: columns,\n      initialState: undefined,\n      shouldRegenColumnVisibilityModelFromColumns: true,\n      keepOnlyColumnsToUpsert: false\n    });\n    setGridColumnsState(columnsState);\n  }, [apiRef, setGridColumnsState, columnTypes]);\n  const updateColumn = React.useCallback(column => apiRef.current.updateColumns([column]), [apiRef]);\n  const setColumnVisibility = React.useCallback((field, isVisible) => {\n    // We keep updating the `hide` option of `GridColDef` when not controlling the model to avoid any breaking change.\n    // `updateColumns` take care of updating the model itself if needs be.\n    // TODO v6: stop using the `hide` field even when the model is not defined\n    if (apiRef.current.unstable_caches.columns.isUsingColumnVisibilityModel) {\n      var _columnVisibilityMode;\n      const columnVisibilityModel = gridColumnVisibilityModelSelector(apiRef);\n      const isCurrentlyVisible = (_columnVisibilityMode = columnVisibilityModel[field]) != null ? _columnVisibilityMode : true;\n      if (isVisible !== isCurrentlyVisible) {\n        const newModel = _extends({}, columnVisibilityModel, {\n          [field]: isVisible\n        });\n        apiRef.current.setColumnVisibilityModel(newModel);\n      }\n    } else {\n      const column = apiRef.current.getColumn(field);\n      const newColumn = _extends({}, column, {\n        hide: !isVisible\n      });\n      apiRef.current.updateColumns([newColumn]);\n      const params = {\n        field,\n        colDef: newColumn,\n        isVisible\n      };\n      apiRef.current.publishEvent('columnVisibilityChange', params);\n    }\n  }, [apiRef]);\n  const setColumnIndex = React.useCallback((field, targetIndexPosition) => {\n    const allColumns = gridColumnFieldsSelector(apiRef);\n    const oldIndexPosition = allColumns.findIndex(col => col === field);\n    if (oldIndexPosition === targetIndexPosition) {\n      return;\n    }\n    logger.debug(`Moving column ${field} to index ${targetIndexPosition}`);\n    const updatedColumns = [...allColumns];\n    const fieldRemoved = updatedColumns.splice(oldIndexPosition, 1)[0];\n    updatedColumns.splice(targetIndexPosition, 0, fieldRemoved);\n    setGridColumnsState(_extends({}, gridColumnsSelector(apiRef.current.state), {\n      all: updatedColumns\n    }));\n    const params = {\n      field,\n      element: apiRef.current.getColumnHeaderElement(field),\n      colDef: apiRef.current.getColumn(field),\n      targetIndex: targetIndexPosition,\n      oldIndex: oldIndexPosition\n    };\n    apiRef.current.publishEvent('columnOrderChange', params);\n  }, [apiRef, logger, setGridColumnsState]);\n  const setColumnWidth = React.useCallback((field, width) => {\n    logger.debug(`Updating column ${field} width to ${width}`);\n    const column = apiRef.current.getColumn(field);\n    const newColumn = _extends({}, column, {\n      width\n    });\n    apiRef.current.updateColumns([newColumn]);\n    apiRef.current.publishEvent('columnWidthChange', {\n      element: apiRef.current.getColumnHeaderElement(field),\n      colDef: newColumn,\n      width\n    });\n  }, [apiRef, logger]);\n  const columnApi = {\n    getColumn,\n    getAllColumns,\n    getColumnIndex,\n    getColumnPosition,\n    getVisibleColumns,\n    getColumnsMeta,\n    updateColumn,\n    updateColumns,\n    setColumnVisibilityModel,\n    setColumnVisibility,\n    setColumnIndex,\n    setColumnWidth\n  };\n  useGridApiMethod(apiRef, columnApi, 'GridColumnApi');\n  /**\n   * PRE-PROCESSING\n   */\n\n  const stateExportPreProcessing = React.useCallback((prevState, context) => {\n    const columnsStateToExport = {};\n    if (apiRef.current.unstable_caches.columns.isUsingColumnVisibilityModel) {\n      var _props$initialState$c2, _props$initialState4, _props$initialState4$;\n      const columnVisibilityModelToExport = gridColumnVisibilityModelSelector(apiRef);\n      const shouldExportColumnVisibilityModel =\n      // Always export if the `exportOnlyDirtyModels` property is activated\n      !context.exportOnlyDirtyModels ||\n      // Always export if the model is controlled\n      props.columnVisibilityModel != null ||\n      // Always export if the model has been initialized\n      // TODO v6 Do a nullish check instead to export even if the initial model equals \"{}\"\n      Object.keys((_props$initialState$c2 = (_props$initialState4 = props.initialState) == null ? void 0 : (_props$initialState4$ = _props$initialState4.columns) == null ? void 0 : _props$initialState4$.columnVisibilityModel) != null ? _props$initialState$c2 : {}).length > 0 ||\n      // Always export if the model is not empty\n      Object.keys(columnVisibilityModelToExport).length > 0;\n      if (shouldExportColumnVisibilityModel) {\n        columnsStateToExport.columnVisibilityModel = columnVisibilityModelToExport;\n      }\n    }\n    columnsStateToExport.orderedFields = gridColumnFieldsSelector(apiRef);\n    const columns = gridColumnDefinitionsSelector(apiRef);\n    const dimensions = {};\n    columns.forEach(colDef => {\n      if (colDef.hasBeenResized) {\n        const colDefDimensions = {};\n        COLUMNS_DIMENSION_PROPERTIES.forEach(propertyName => {\n          let propertyValue = colDef[propertyName];\n          if (propertyValue === Infinity) {\n            propertyValue = -1;\n          }\n          colDefDimensions[propertyName] = propertyValue;\n        });\n        dimensions[colDef.field] = colDefDimensions;\n      }\n    });\n    if (Object.keys(dimensions).length > 0) {\n      columnsStateToExport.dimensions = dimensions;\n    }\n    return _extends({}, prevState, {\n      columns: columnsStateToExport\n    });\n  }, [apiRef, props.columnVisibilityModel, (_props$initialState5 = props.initialState) == null ? void 0 : _props$initialState5.columns]);\n  const stateRestorePreProcessing = React.useCallback((params, context) => {\n    var _context$stateToResto;\n    const columnVisibilityModelToImport = apiRef.current.unstable_caches.columns.isUsingColumnVisibilityModel ? (_context$stateToResto = context.stateToRestore.columns) == null ? void 0 : _context$stateToResto.columnVisibilityModel : undefined;\n    const initialState = context.stateToRestore.columns;\n    if (columnVisibilityModelToImport == null && initialState == null) {\n      return params;\n    }\n    const columnsState = createColumnsState({\n      apiRef,\n      columnTypes,\n      columnsToUpsert: [],\n      initialState,\n      shouldRegenColumnVisibilityModelFromColumns: !apiRef.current.unstable_caches.columns.isUsingColumnVisibilityModel,\n      currentColumnVisibilityModel: columnVisibilityModelToImport,\n      keepOnlyColumnsToUpsert: false\n    });\n    apiRef.current.setState(mergeColumnsState(columnsState));\n    if (initialState != null) {\n      apiRef.current.publishEvent('columnsChange', columnsState.all);\n    }\n    return params;\n  }, [apiRef, columnTypes]);\n  const preferencePanelPreProcessing = React.useCallback((initialValue, value) => {\n    if (value === GridPreferencePanelsValue.columns) {\n      var _props$componentsProp;\n      const ColumnsPanel = props.components.ColumnsPanel;\n      return /*#__PURE__*/_jsx(ColumnsPanel, _extends({}, (_props$componentsProp = props.componentsProps) == null ? void 0 : _props$componentsProp.columnsPanel));\n    }\n    return initialValue;\n  }, [props.components.ColumnsPanel, (_props$componentsProp2 = props.componentsProps) == null ? void 0 : _props$componentsProp2.columnsPanel]);\n  useGridRegisterPipeProcessor(apiRef, 'exportState', stateExportPreProcessing);\n  useGridRegisterPipeProcessor(apiRef, 'restoreState', stateRestorePreProcessing);\n  useGridRegisterPipeProcessor(apiRef, 'preferencePanel', preferencePanelPreProcessing);\n  /**\n   * EVENTS\n   */\n\n  const prevInnerWidth = React.useRef(null);\n  const handleGridSizeChange = viewportInnerSize => {\n    if (prevInnerWidth.current !== viewportInnerSize.width) {\n      prevInnerWidth.current = viewportInnerSize.width;\n      setGridColumnsState(hydrateColumnsWidth(gridColumnsSelector(apiRef.current.state), viewportInnerSize.width));\n    }\n  };\n  useGridApiEventHandler(apiRef, 'viewportInnerSizeChange', handleGridSizeChange);\n  useGridApiOptionHandler(apiRef, 'columnVisibilityChange', props.onColumnVisibilityChange);\n  /**\n   * APPLIERS\n   */\n\n  const hydrateColumns = React.useCallback(() => {\n    logger.info(`Columns pipe processing have changed, regenerating the columns`);\n    const columnsState = createColumnsState({\n      apiRef,\n      columnTypes,\n      columnsToUpsert: [],\n      initialState: undefined,\n      shouldRegenColumnVisibilityModelFromColumns: !apiRef.current.unstable_caches.columns.isUsingColumnVisibilityModel,\n      keepOnlyColumnsToUpsert: false\n    });\n    setGridColumnsState(columnsState);\n  }, [apiRef, logger, setGridColumnsState, columnTypes]);\n  useGridRegisterPipeApplier(apiRef, 'hydrateColumns', hydrateColumns);\n  /**\n   * EFFECTS\n   */\n  // The effect do not track any value defined synchronously during the 1st render by hooks called after `useGridColumns`\n  // As a consequence, the state generated by the 1st run of this useEffect will always be equal to the initialization one\n\n  const isFirstRender = React.useRef(true);\n  React.useEffect(() => {\n    if (isFirstRender.current) {\n      isFirstRender.current = false;\n      return;\n    }\n    logger.info(`GridColumns have changed, new length ${props.columns.length}`);\n    if (previousColumnsProp.current === props.columns && previousColumnTypesProp.current === columnTypes) {\n      return;\n    }\n    const columnsState = createColumnsState({\n      apiRef,\n      columnTypes,\n      initialState: undefined,\n      // If the user provides a model, we don't want to set it in the state here because it has it's dedicated `useEffect` which calls `setColumnVisibilityModel`\n      shouldRegenColumnVisibilityModelFromColumns: !apiRef.current.unstable_caches.columns.isUsingColumnVisibilityModel,\n      columnsToUpsert: props.columns,\n      keepOnlyColumnsToUpsert: true\n    });\n    previousColumnsProp.current = props.columns;\n    previousColumnTypesProp.current = columnTypes;\n    setGridColumnsState(columnsState);\n  }, [logger, apiRef, setGridColumnsState, props.columns, columnTypes]);\n  React.useEffect(() => {\n    if (props.columnVisibilityModel !== undefined) {\n      apiRef.current.setColumnVisibilityModel(props.columnVisibilityModel);\n    }\n  }, [apiRef, logger, props.columnVisibilityModel]);\n}","/**\n * Available densities.\n */\n\n/**\n * Density enum.\n */\nvar GridDensityTypes;\n(function (GridDensityTypes) {\n  GridDensityTypes[\"Compact\"] = \"compact\";\n  GridDensityTypes[\"Standard\"] = \"standard\";\n  GridDensityTypes[\"Comfortable\"] = \"comfortable\";\n})(GridDensityTypes || (GridDensityTypes = {}));\nexport { GridDensityTypes };","export function isLeaf(node) {\n  return node.field !== undefined;\n}\n/**\n * A function used to process headerClassName params.\n */","import { createSelector } from '../../../utils/createSelector';\n\n/**\n * @category ColumnGrouping\n * @ignore - do not document.\n */\nexport const gridColumnGroupingSelector = state => state.columnGrouping;\nexport const gridColumnGroupsLookupSelector = createSelector(gridColumnGroupingSelector, columnGrouping => columnGrouping.lookup);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"groupId\", \"children\"];\nimport * as React from 'react';\nimport { isLeaf } from '../../../models/gridColumnGrouping';\nimport { gridColumnGroupsLookupSelector } from './gridColumnGroupsSelector';\nimport { gridColumnLookupSelector } from '../columns/gridColumnsSelector';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nexport function hasGroupPath(lookupElement) {\n  return lookupElement.groupPath !== undefined;\n}\n\n// This is the recurrence function that help writing `unwrapGroupingColumnModel()`\nconst recurrentUnwrapGroupingColumnModel = (columnGroupNode, parents, unwrappedGroupingModelToComplet) => {\n  if (isLeaf(columnGroupNode)) {\n    if (unwrappedGroupingModelToComplet[columnGroupNode.field] !== undefined) {\n      throw new Error([`MUI: columnGroupingModel contains duplicated field`, `column field ${columnGroupNode.field} occurrs two times in the grouping model:`, `- ${unwrappedGroupingModelToComplet[columnGroupNode.field].join(' > ')}`, `- ${parents.join(' > ')}`].join('\\n'));\n    }\n    unwrappedGroupingModelToComplet[columnGroupNode.field] = parents;\n    return;\n  }\n  const {\n    groupId,\n    children\n  } = columnGroupNode;\n  children.forEach(child => {\n    recurrentUnwrapGroupingColumnModel(child, [...parents, groupId], unwrappedGroupingModelToComplet);\n  });\n};\n/**\n * This is a function that provide for each column the array of its parents.\n * Parents are ordered from the root to the leaf.\n * @param columnGroupingModel The model such as provided in DataGrid props\n * @returns An object `{[field]: groupIds}` where `groupIds` is the parents of the column `field`\n */\n\nexport const unwrapGroupingColumnModel = columnGroupingModel => {\n  if (!columnGroupingModel) {\n    return {};\n  }\n  const unwrappedSubTree = {};\n  columnGroupingModel.forEach(columnGroupNode => {\n    recurrentUnwrapGroupingColumnModel(columnGroupNode, [], unwrappedSubTree);\n  });\n  return unwrappedSubTree;\n};\nconst createGroupLookup = columnGroupingModel => {\n  let groupLookup = {};\n  columnGroupingModel.forEach(node => {\n    if (isLeaf(node)) {\n      return;\n    }\n    const {\n        groupId,\n        children\n      } = node,\n      other = _objectWithoutPropertiesLoose(node, _excluded);\n    if (!groupId) {\n      throw new Error('MUI: An element of the columnGroupingModel does not have either `field` or `groupId`.');\n    }\n    if (!children) {\n      console.warn(`MUI: group groupId=${groupId} has no children.`);\n    }\n    const groupParam = _extends({}, other, {\n      groupId\n    });\n    const subTreeLookup = createGroupLookup(children);\n    if (subTreeLookup[groupId] !== undefined || groupLookup[groupId] !== undefined) {\n      throw new Error(`MUI: The groupId ${groupId} is used multiple times in the columnGroupingModel.`);\n    }\n    groupLookup = _extends({}, groupLookup, subTreeLookup, {\n      [groupId]: groupParam\n    });\n  });\n  return _extends({}, groupLookup);\n};\nexport const columnGroupsStateInitializer = (state, props) => {\n  var _props$columnGrouping;\n  const groupLookup = createGroupLookup((_props$columnGrouping = props.columnGroupingModel) != null ? _props$columnGrouping : []);\n  return _extends({}, state, {\n    columnGrouping: {\n      lookup: groupLookup,\n      groupCollapsedModel: {}\n    }\n  });\n};\n/**\n * @requires useGridColumns (method, event)\n * @requires useGridParamsApi (method)\n */\n\nexport const useGridColumnGrouping = (apiRef, props) => {\n  var _props$experimentalFe2;\n\n  /**\n   * API METHODS\n   */\n  const getColumnGroupPath = React.useCallback(field => {\n    var _columnLookup$field$g, _columnLookup$field;\n    const columnLookup = gridColumnLookupSelector(apiRef);\n    return (_columnLookup$field$g = (_columnLookup$field = columnLookup[field]) == null ? void 0 : _columnLookup$field.groupPath) != null ? _columnLookup$field$g : [];\n  }, [apiRef]);\n  const getAllGroupDetails = React.useCallback(() => {\n    const columnGroupLookup = gridColumnGroupsLookupSelector(apiRef);\n    return columnGroupLookup;\n  }, [apiRef]);\n  const columnGroupingApi = {\n    unstable_getColumnGroupPath: getColumnGroupPath,\n    unstable_getAllGroupDetails: getAllGroupDetails\n  };\n  useGridApiMethod(apiRef, columnGroupingApi, 'GridColumnGroupingApi');\n  /**\n   * EFFECTS\n   */\n  // The effect does not track any value defined synchronously during the 1st render by hooks called after `useGridColumns`\n  // As a consequence, the state generated by the 1st run of this useEffect will always be equal to the initialization one\n\n  const isFirstRender = React.useRef(true);\n  React.useEffect(() => {\n    var _props$experimentalFe, _props$columnGrouping2;\n    if (isFirstRender.current) {\n      isFirstRender.current = false;\n      return;\n    }\n    if (!((_props$experimentalFe = props.experimentalFeatures) != null && _props$experimentalFe.columnGrouping)) {\n      return;\n    }\n    const groupLookup = createGroupLookup((_props$columnGrouping2 = props.columnGroupingModel) != null ? _props$columnGrouping2 : []);\n    apiRef.current.setState(state => _extends({}, state, {\n      columnGrouping: _extends({}, state.columnGrouping, {\n        lookup: groupLookup\n      })\n    }));\n  }, [apiRef, props.columnGroupingModel, (_props$experimentalFe2 = props.experimentalFeatures) == null ? void 0 : _props$experimentalFe2.columnGrouping]);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { GridDensityTypes } from '../../../models/gridDensity';\nimport { useGridLogger } from '../../utils/useGridLogger';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { gridDensitySelector } from './densitySelector';\nimport { isDeepEqual } from '../../../utils/utils';\nimport { useGridSelector } from '../../utils/useGridSelector';\nimport { gridVisibleColumnDefinitionsSelector } from '../columns';\nimport { unwrapGroupingColumnModel } from '../columnGrouping/useGridColumnGrouping';\nexport const COMPACT_DENSITY_FACTOR = 0.7;\nexport const COMFORTABLE_DENSITY_FACTOR = 1.3; // TODO v6: revise keeping headerHeight and rowHeight in state\n\nconst getUpdatedDensityState = (newDensity, newHeaderHeight, newRowHeight, newMaxDepth) => {\n  switch (newDensity) {\n    case GridDensityTypes.Compact:\n      return {\n        value: newDensity,\n        headerHeight: Math.floor(newHeaderHeight * COMPACT_DENSITY_FACTOR),\n        rowHeight: Math.floor(newRowHeight * COMPACT_DENSITY_FACTOR),\n        headerGroupingMaxDepth: newMaxDepth,\n        factor: COMPACT_DENSITY_FACTOR\n      };\n    case GridDensityTypes.Comfortable:\n      return {\n        value: newDensity,\n        headerHeight: Math.floor(newHeaderHeight * COMFORTABLE_DENSITY_FACTOR),\n        rowHeight: Math.floor(newRowHeight * COMFORTABLE_DENSITY_FACTOR),\n        headerGroupingMaxDepth: newMaxDepth,\n        factor: COMFORTABLE_DENSITY_FACTOR\n      };\n    default:\n      return {\n        value: newDensity,\n        headerHeight: newHeaderHeight,\n        rowHeight: newRowHeight,\n        headerGroupingMaxDepth: newMaxDepth,\n        factor: 1\n      };\n  }\n};\nexport const densityStateInitializer = (state, props) => {\n  // TODO: think about improving this initialization. Could it be done in the useColumn initializer?\n  // TODO: manage to remove ts-ignore\n  let maxDepth;\n  if (props.columnGroupingModel == null || Object.keys(props.columnGroupingModel).length === 0) {\n    maxDepth = 0;\n  } else {\n    const unwrappedGroupingColumnModel = unwrapGroupingColumnModel(props.columnGroupingModel);\n    const columnsState = state.columns;\n    const visibleColumns = columnsState.all.filter(field => columnsState.columnVisibilityModel[field] !== false);\n    if (visibleColumns.length === 0) {\n      maxDepth = 0;\n    } else {\n      maxDepth = Math.max(...visibleColumns.map(field => {\n        var _unwrappedGroupingCol, _unwrappedGroupingCol2;\n        return (_unwrappedGroupingCol = (_unwrappedGroupingCol2 = unwrappedGroupingColumnModel[field]) == null ? void 0 : _unwrappedGroupingCol2.length) != null ? _unwrappedGroupingCol : 0;\n      }));\n    }\n  }\n  return _extends({}, state, {\n    density: getUpdatedDensityState(props.density, props.headerHeight, props.rowHeight, maxDepth)\n  });\n};\nexport const useGridDensity = (apiRef, props) => {\n  const visibleColumns = useGridSelector(apiRef, gridVisibleColumnDefinitionsSelector);\n  const maxDepth = visibleColumns.length > 0 ? Math.max(...visibleColumns.map(column => {\n    var _column$groupPath$len, _column$groupPath;\n    return (_column$groupPath$len = (_column$groupPath = column.groupPath) == null ? void 0 : _column$groupPath.length) != null ? _column$groupPath$len : 0;\n  })) : 0;\n  const logger = useGridLogger(apiRef, 'useDensity');\n  const setDensity = React.useCallback(function (newDensity) {\n    let newHeaderHeight = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : props.headerHeight;\n    let newRowHeight = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : props.rowHeight;\n    let newMaxDepth = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : maxDepth;\n    logger.debug(`Set grid density to ${newDensity}`);\n    apiRef.current.setState(state => {\n      const currentDensityState = gridDensitySelector(state);\n      const newDensityState = getUpdatedDensityState(newDensity, newHeaderHeight, newRowHeight, newMaxDepth);\n      if (isDeepEqual(currentDensityState, newDensityState)) {\n        return state;\n      }\n      return _extends({}, state, {\n        density: newDensityState\n      });\n    });\n    apiRef.current.forceUpdate();\n  }, [logger, apiRef, props.headerHeight, props.rowHeight, maxDepth]);\n  React.useEffect(() => {\n    apiRef.current.setDensity(props.density, props.headerHeight, props.rowHeight, maxDepth);\n  }, [apiRef, props.density, props.rowHeight, props.headerHeight, maxDepth]);\n  const densityApi = {\n    setDensity\n  };\n  useGridApiMethod(apiRef, densityApi, 'GridDensityApi');\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"field\", \"id\", \"value\", \"formattedValue\", \"row\", \"rowNode\", \"colDef\", \"isEditable\", \"cellMode\", \"hasFocus\", \"tabIndex\", \"getValue\", \"api\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_composeClasses as composeClasses } from '@mui/material';\nimport { useForkRef } from '@mui/material/utils';\nimport { isNavigationKey, isSpaceKey } from '../../utils/keyboardUtils';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['checkboxInput']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridCellCheckboxForwardRef = /*#__PURE__*/React.forwardRef(function GridCellCheckboxRenderer(props, ref) {\n  var _rootProps$components;\n  const {\n      field,\n      id,\n      value: isChecked,\n      rowNode,\n      hasFocus,\n      tabIndex\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const ownerState = {\n    classes: rootProps.classes\n  };\n  const classes = useUtilityClasses(ownerState);\n  const checkboxElement = React.useRef(null);\n  const rippleRef = React.useRef();\n  const handleRef = useForkRef(checkboxElement, ref);\n  const element = apiRef.current.getCellElement(id, field);\n  const handleChange = event => {\n    const params = {\n      value: event.target.checked,\n      id\n    };\n    apiRef.current.publishEvent('rowSelectionCheckboxChange', params, event);\n  };\n  React.useLayoutEffect(() => {\n    if (tabIndex === 0 && element) {\n      element.tabIndex = -1;\n    }\n  }, [element, tabIndex]);\n  React.useEffect(() => {\n    if (hasFocus) {\n      var _checkboxElement$curr;\n      const input = (_checkboxElement$curr = checkboxElement.current) == null ? void 0 : _checkboxElement$curr.querySelector('input');\n      input == null ? void 0 : input.focus({\n        preventScroll: true\n      });\n    } else if (rippleRef.current) {\n      // Only available in @mui/material v5.4.1 or later\n      rippleRef.current.stop({});\n    }\n  }, [hasFocus]);\n  const handleKeyDown = React.useCallback(event => {\n    if (isSpaceKey(event.key)) {\n      event.stopPropagation();\n    }\n    if (isNavigationKey(event.key) && !event.shiftKey) {\n      apiRef.current.publishEvent('cellNavigationKeyDown', props, event);\n    }\n  }, [apiRef, props]);\n  if (rowNode.position === 'footer') {\n    return null;\n  }\n  const isSelectable = apiRef.current.isRowSelectable(id);\n  const label = apiRef.current.getLocaleText(isChecked ? 'checkboxSelectionUnselectRow' : 'checkboxSelectionSelectRow');\n  if (rowNode.isPinned) {\n    return null;\n  }\n  return /*#__PURE__*/_jsx(rootProps.components.BaseCheckbox, _extends({\n    ref: handleRef,\n    tabIndex: tabIndex,\n    checked: isChecked,\n    onChange: handleChange,\n    className: classes.root,\n    inputProps: {\n      'aria-label': label\n    },\n    onKeyDown: handleKeyDown,\n    disabled: !isSelectable,\n    touchRippleRef: rippleRef\n  }, (_rootProps$components = rootProps.componentsProps) == null ? void 0 : _rootProps$components.baseCheckbox, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridCellCheckboxForwardRef.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n\n  /**\n   * GridApi that let you manipulate the grid.\n   * @deprecated Use the `apiRef` returned by `useGridApiContext` or `useGridApiRef` (only available in `@mui/x-data-grid-pro`)\n   */\n  api: PropTypes.any.isRequired,\n  /**\n   * The mode of the cell.\n   */\n  cellMode: PropTypes.oneOf(['edit', 'view']).isRequired,\n  /**\n   * The column of the row that the current cell belongs to.\n   */\n  colDef: PropTypes.object.isRequired,\n  /**\n   * The column field of the cell that triggered the event.\n   */\n  field: PropTypes.string.isRequired,\n  /**\n   * A ref allowing to set imperative focus.\n   * It can be passed to the element that should receive focus.\n   * @ignore - do not document.\n   */\n  focusElementRef: PropTypes.oneOfType([PropTypes.func, PropTypes.shape({\n    current: PropTypes.shape({\n      focus: PropTypes.func.isRequired\n    })\n  })]),\n  /**\n   * The cell value formatted with the column valueFormatter.\n   */\n  formattedValue: PropTypes.any,\n  /**\n   * Get the cell value of a row and field.\n   * @param {GridRowId} id The row id.\n   * @param {string} field The field.\n   * @returns {any} The cell value.\n   * @deprecated Use `params.row` to directly access the fields you want instead.\n   */\n  getValue: PropTypes.func.isRequired,\n  /**\n   * If true, the cell is the active element.\n   */\n  hasFocus: PropTypes.bool.isRequired,\n  /**\n   * The grid row id.\n   */\n  id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n  /**\n   * If true, the cell is editable.\n   */\n  isEditable: PropTypes.bool,\n  /**\n   * The row model of the row that the current cell belongs to.\n   */\n  row: PropTypes.any.isRequired,\n  /**\n   * The node of the row that the current cell belongs to.\n   */\n  rowNode: PropTypes.object.isRequired,\n  /**\n   * the tabIndex value.\n   */\n  tabIndex: PropTypes.oneOf([-1, 0]).isRequired,\n  /**\n   * The cell value.\n   * If the column has `valueGetter`, use `params.row` to directly access the fields.\n   */\n  value: PropTypes.any\n} : void 0;\nexport { GridCellCheckboxForwardRef };\nexport const GridCellCheckboxRenderer = GridCellCheckboxForwardRef;","import { createSelector } from '../../../utils/createSelector';\nexport const gridFocusStateSelector = state => state.focus;\nexport const gridFocusCellSelector = createSelector(gridFocusStateSelector, focusState => focusState.cell);\nexport const gridFocusColumnHeaderSelector = createSelector(gridFocusStateSelector, focusState => focusState.columnHeader);\nexport const gridTabIndexStateSelector = state => state.tabIndex;\nexport const gridTabIndexCellSelector = createSelector(gridTabIndexStateSelector, state => state.cell);\nexport const gridTabIndexColumnHeaderSelector = createSelector(gridTabIndexStateSelector, state => state.columnHeader);","import { createSelector } from '../../../utils/createSelector';\nimport { gridRowsLookupSelector } from '../rows/gridRowsSelector';\nexport const gridSelectionStateSelector = state => state.selection;\nexport const selectedGridRowsCountSelector = createSelector(gridSelectionStateSelector, selection => selection.length);\nexport const selectedGridRowsSelector = createSelector(gridSelectionStateSelector, gridRowsLookupSelector, (selectedRows, rowsLookup) => new Map(selectedRows.map(id => [id, rowsLookup[id]])));\nexport const selectedIdsLookupSelector = createSelector(gridSelectionStateSelector, selection => selection.reduce((lookup, rowId) => {\n  lookup[rowId] = rowId;\n  return lookup;\n}, {}));","import { createSelector } from '../../../utils/createSelector';\nimport { gridVisibleSortedRowEntriesSelector, gridVisibleSortedRowIdsSelector, gridVisibleSortedTopLevelRowEntriesSelector } from '../filter/gridFilterSelector';\nimport { gridRowTreeDepthSelector, gridRowTreeSelector } from '../rows/gridRowsSelector';\n/**\n * @category Pagination\n * @ignore - do not document.\n */\n\nexport const gridPaginationSelector = state => state.pagination;\n/**\n * Get the index of the page to render if the pagination is enabled\n * @category Pagination\n */\n\nexport const gridPageSelector = createSelector(gridPaginationSelector, pagination => pagination.page);\n/**\n * Get the maximum amount of rows to display on a single page if the pagination is enabled\n * @category Pagination\n */\n\nexport const gridPageSizeSelector = createSelector(gridPaginationSelector, pagination => pagination.pageSize);\n/**\n * Get the amount of pages needed to display all the rows if the pagination is enabled\n * @category Pagination\n */\n\nexport const gridPageCountSelector = createSelector(gridPaginationSelector, pagination => pagination.pageCount);\n/**\n * Get the index of the first and the last row to include in the current page if the pagination is enabled.\n * @category Pagination\n */\n\nexport const gridPaginationRowRangeSelector = createSelector(gridPaginationSelector, gridRowTreeSelector, gridRowTreeDepthSelector, gridVisibleSortedRowEntriesSelector, gridVisibleSortedTopLevelRowEntriesSelector, (pagination, rowTree, rowTreeDepth, visibleSortedRowEntries, visibleSortedTopLevelRowEntries) => {\n  const visibleTopLevelRowCount = visibleSortedTopLevelRowEntries.length;\n  const topLevelFirstRowIndex = Math.min(pagination.pageSize * pagination.page, visibleTopLevelRowCount - 1);\n  const topLevelLastRowIndex = Math.min(topLevelFirstRowIndex + pagination.pageSize - 1, visibleTopLevelRowCount - 1); // The range contains no element\n\n  if (topLevelFirstRowIndex === -1 || topLevelLastRowIndex === -1) {\n    return null;\n  } // The tree is flat, there is no need to look for children\n\n  if (rowTreeDepth < 2) {\n    return {\n      firstRowIndex: topLevelFirstRowIndex,\n      lastRowIndex: topLevelLastRowIndex\n    };\n  }\n  const topLevelFirstRow = visibleSortedTopLevelRowEntries[topLevelFirstRowIndex];\n  const topLevelRowsInCurrentPageCount = topLevelLastRowIndex - topLevelFirstRowIndex + 1;\n  const firstRowIndex = visibleSortedRowEntries.findIndex(row => row.id === topLevelFirstRow.id);\n  let lastRowIndex = firstRowIndex;\n  let topLevelRowAdded = 0;\n  while (lastRowIndex < visibleSortedRowEntries.length && topLevelRowAdded <= topLevelRowsInCurrentPageCount) {\n    const row = visibleSortedRowEntries[lastRowIndex];\n    const depth = rowTree[row.id].depth;\n    if (topLevelRowAdded < topLevelRowsInCurrentPageCount || depth > 0) {\n      lastRowIndex += 1;\n    }\n    if (depth === 0) {\n      topLevelRowAdded += 1;\n    }\n  }\n  return {\n    firstRowIndex,\n    lastRowIndex: lastRowIndex - 1\n  };\n});\n/**\n * Get the id and the model of each row to include in the current page if the pagination is enabled.\n * @category Pagination\n */\n\nexport const gridPaginatedVisibleSortedGridRowEntriesSelector = createSelector(gridVisibleSortedRowEntriesSelector, gridPaginationRowRangeSelector, (visibleSortedRowEntries, paginationRange) => {\n  if (!paginationRange) {\n    return [];\n  }\n  return visibleSortedRowEntries.slice(paginationRange.firstRowIndex, paginationRange.lastRowIndex + 1);\n});\n/**\n * Get the id of each row to include in the current page if the pagination is enabled.\n * @category Pagination\n */\n\nexport const gridPaginatedVisibleSortedGridRowIdsSelector = createSelector(gridVisibleSortedRowIdsSelector, gridPaginationRowRangeSelector, (visibleSortedRowIds, paginationRange) => {\n  if (!paginationRange) {\n    return [];\n  }\n  return visibleSortedRowIds.slice(paginationRange.firstRowIndex, paginationRange.lastRowIndex + 1);\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"field\", \"colDef\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_composeClasses as composeClasses } from '@mui/material';\nimport { useGridSelector } from '../../hooks/utils/useGridSelector';\nimport { gridTabIndexColumnHeaderSelector } from '../../hooks/features/focus/gridFocusStateSelector';\nimport { gridSelectionStateSelector } from '../../hooks/features/selection/gridSelectionSelector';\nimport { isNavigationKey } from '../../utils/keyboardUtils';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { gridVisibleSortedRowIdsSelector } from '../../hooks/features/filter/gridFilterSelector';\nimport { gridPaginatedVisibleSortedGridRowIdsSelector } from '../../hooks/features/pagination/gridPaginationSelector';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['checkboxInput']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridHeaderCheckbox = /*#__PURE__*/React.forwardRef(function GridHeaderCheckbox(props, ref) {\n  var _rootProps$components;\n  const other = _objectWithoutPropertiesLoose(props, _excluded);\n  const [, forceUpdate] = React.useState(false);\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const ownerState = {\n    classes: rootProps.classes\n  };\n  const classes = useUtilityClasses(ownerState);\n  const tabIndexState = useGridSelector(apiRef, gridTabIndexColumnHeaderSelector);\n  const selection = useGridSelector(apiRef, gridSelectionStateSelector);\n  const visibleRowIds = useGridSelector(apiRef, gridVisibleSortedRowIdsSelector);\n  const paginatedVisibleRowIds = useGridSelector(apiRef, gridPaginatedVisibleSortedGridRowIdsSelector);\n  const filteredSelection = React.useMemo(() => {\n    if (typeof rootProps.isRowSelectable !== 'function') {\n      return selection;\n    }\n    return selection.filter(id => {\n      // The row might have been deleted\n      if (!apiRef.current.getRow(id)) {\n        return false;\n      }\n      return rootProps.isRowSelectable(apiRef.current.getRowParams(id));\n    });\n  }, [apiRef, rootProps.isRowSelectable, selection]); // All the rows that could be selected / unselected by toggling this checkbox\n\n  const selectionCandidates = React.useMemo(() => {\n    const rowIds = !rootProps.pagination || !rootProps.checkboxSelectionVisibleOnly ? visibleRowIds : paginatedVisibleRowIds; // Convert to an object to make O(1) checking if a row exists or not\n    // TODO create selector that returns visibleRowIds/paginatedVisibleRowIds as an object\n\n    return rowIds.reduce((acc, id) => {\n      acc[id] = true;\n      return acc;\n    }, {});\n  }, [rootProps.pagination, rootProps.checkboxSelectionVisibleOnly, paginatedVisibleRowIds, visibleRowIds]); // Amount of rows selected and that are visible in the current page\n\n  const currentSelectionSize = React.useMemo(() => filteredSelection.filter(id => selectionCandidates[id]).length, [filteredSelection, selectionCandidates]);\n  const isIndeterminate = currentSelectionSize > 0 && currentSelectionSize < Object.keys(selectionCandidates).length;\n  const isChecked = currentSelectionSize > 0;\n  const handleChange = event => {\n    const params = {\n      value: event.target.checked\n    };\n    apiRef.current.publishEvent('headerSelectionCheckboxChange', params);\n  };\n  const tabIndex = tabIndexState !== null && tabIndexState.field === props.field ? 0 : -1;\n  React.useLayoutEffect(() => {\n    const element = apiRef.current.getColumnHeaderElement(props.field);\n    if (tabIndex === 0 && element) {\n      element.tabIndex = -1;\n    }\n  }, [tabIndex, apiRef, props.field]);\n  const handleKeyDown = React.useCallback(event => {\n    if (event.key === ' ') {\n      // imperative toggle the checkbox because Space is disable by some preventDefault\n      apiRef.current.publishEvent('headerSelectionCheckboxChange', {\n        value: !isChecked\n      });\n    } // TODO v6 remove columnHeaderNavigationKeyDown events which are not used internally anymore\n\n    if (isNavigationKey(event.key) && !event.shiftKey) {\n      apiRef.current.publishEvent('columnHeaderNavigationKeyDown', props, event);\n    }\n  }, [apiRef, props, isChecked]);\n  const handleSelectionChange = React.useCallback(() => {\n    forceUpdate(p => !p);\n  }, []);\n  React.useEffect(() => {\n    return apiRef.current.subscribeEvent('selectionChange', handleSelectionChange);\n  }, [apiRef, handleSelectionChange]);\n  const label = apiRef.current.getLocaleText(isChecked ? 'checkboxSelectionUnselectAllRows' : 'checkboxSelectionSelectAllRows');\n  return /*#__PURE__*/_jsx(rootProps.components.BaseCheckbox, _extends({\n    ref: ref,\n    indeterminate: isIndeterminate,\n    checked: isChecked,\n    onChange: handleChange,\n    className: classes.root,\n    inputProps: {\n      'aria-label': label\n    },\n    tabIndex: tabIndex,\n    onKeyDown: handleKeyDown\n  }, (_rootProps$components = rootProps.componentsProps) == null ? void 0 : _rootProps$components.baseCheckbox, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridHeaderCheckbox.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The column of the current header component.\n   */\n  colDef: PropTypes.object.isRequired,\n  /**\n   * The column field of the column that triggered the event\n   */\n  field: PropTypes.string.isRequired\n} : void 0;\nexport { GridHeaderCheckbox };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { GridCellCheckboxRenderer } from '../components/columnSelection/GridCellCheckboxRenderer';\nimport { GridHeaderCheckbox } from '../components/columnSelection/GridHeaderCheckbox';\nimport { selectedIdsLookupSelector } from '../hooks/features/selection/gridSelectionSelector';\nimport { GRID_BOOLEAN_COL_DEF } from './gridBooleanColDef';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const GRID_CHECKBOX_SELECTION_FIELD = '__check__';\nexport const GRID_CHECKBOX_SELECTION_COL_DEF = _extends({}, GRID_BOOLEAN_COL_DEF, {\n  field: GRID_CHECKBOX_SELECTION_FIELD,\n  type: 'checkboxSelection',\n  width: 50,\n  resizable: false,\n  sortable: false,\n  filterable: false,\n  // @ts-ignore\n  aggregable: false,\n  disableColumnMenu: true,\n  disableReorder: true,\n  disableExport: true,\n  getApplyQuickFilterFn: undefined,\n  valueGetter: params => {\n    const selectionLookup = selectedIdsLookupSelector(params.api.state, params.api.instanceId);\n    return selectionLookup[params.id] !== undefined;\n  },\n  renderHeader: params => /*#__PURE__*/_jsx(GridHeaderCheckbox, _extends({}, params)),\n  renderCell: params => /*#__PURE__*/_jsx(GridCellCheckboxRenderer, _extends({}, params))\n});","import { GRID_CHECKBOX_SELECTION_COL_DEF } from '../../../../colDef';\nimport { buildWarning } from '../../../../utils/warning';\nconst serializeCellValue = (value, delimiterCharacter) => {\n  if (typeof value === 'string') {\n    const formattedValue = value.replace(/\"/g, '\"\"'); // Make sure value containing delimiter or line break won't be split into multiple rows\n\n    if ([delimiterCharacter, '\\n', '\\r'].some(delimiter => formattedValue.includes(delimiter))) {\n      return `\"${formattedValue}\"`;\n    }\n    return formattedValue;\n  }\n  return value;\n};\nconst objectFormattedValueWarning = buildWarning(['MUI: When the value of a field is an object or a `renderCell` is provided, the CSV export might not display the value correctly.', 'You can provide a `valueFormatter` with a string representation to be used.']);\nconst serializeRow = (id, columns, getCellParams, delimiterCharacter) => columns.map(column => {\n  const cellParams = getCellParams(id, column.field);\n  if (process.env.NODE_ENV !== 'production') {\n    if (String(cellParams.formattedValue) === '[object Object]') {\n      objectFormattedValueWarning();\n    }\n  }\n  return serializeCellValue(cellParams.formattedValue, delimiterCharacter);\n});\nexport function buildCSV(options) {\n  const {\n    columns,\n    rowIds,\n    getCellParams,\n    delimiterCharacter,\n    includeHeaders\n  } = options;\n  const CSVBody = rowIds.reduce((acc, id) => `${acc}${serializeRow(id, columns, getCellParams, delimiterCharacter).join(delimiterCharacter)}\\r\\n`, '').trim();\n  if (!includeHeaders) {\n    return CSVBody;\n  }\n  const CSVHead = `${columns.filter(column => column.field !== GRID_CHECKBOX_SELECTION_COL_DEF.field).map(column => serializeCellValue(column.headerName || column.field, delimiterCharacter)).join(delimiterCharacter)}\\r\\n`;\n  return `${CSVHead}${CSVBody}`.trim();\n}","import { gridColumnDefinitionsSelector, gridVisibleColumnDefinitionsSelector } from '../columns';\nimport { gridFilteredSortedRowIdsSelector } from '../filter';\nimport { gridPinnedRowsSelector, gridRowTreeSelector } from '../rows/gridRowsSelector';\nexport const getColumnsToExport = _ref => {\n  let {\n    apiRef,\n    options\n  } = _ref;\n  const columns = gridColumnDefinitionsSelector(apiRef);\n  if (options.fields) {\n    return options.fields.map(field => columns.find(column => column.field === field)).filter(column => !!column);\n  }\n  const validColumns = options.allColumns ? columns : gridVisibleColumnDefinitionsSelector(apiRef);\n  return validColumns.filter(column => !column.disableExport);\n};\nexport const defaultGetRowsToExport = _ref2 => {\n  let {\n    apiRef\n  } = _ref2;\n  var _pinnedRows$top, _pinnedRows$bottom;\n  const filteredSortedRowIds = gridFilteredSortedRowIdsSelector(apiRef);\n  const rowTree = gridRowTreeSelector(apiRef);\n  const selectedRows = apiRef.current.getSelectedRows();\n  const bodyRows = filteredSortedRowIds.filter(id => {\n    var _rowTree$id$position;\n    return ((_rowTree$id$position = rowTree[id].position) != null ? _rowTree$id$position : 'body') === 'body';\n  });\n  const pinnedRows = gridPinnedRowsSelector(apiRef);\n  const topPinnedRowsIds = (pinnedRows == null ? void 0 : (_pinnedRows$top = pinnedRows.top) == null ? void 0 : _pinnedRows$top.map(row => row.id)) || [];\n  const bottomPinnedRowsIds = (pinnedRows == null ? void 0 : (_pinnedRows$bottom = pinnedRows.bottom) == null ? void 0 : _pinnedRows$bottom.map(row => row.id)) || [];\n  bodyRows.unshift(...topPinnedRowsIds);\n  bodyRows.push(...bottomPinnedRowsIds);\n  if (selectedRows.size > 0) {\n    return bodyRows.filter(id => selectedRows.has(id));\n  }\n  return bodyRows;\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"hideMenu\", \"options\"],\n  _excluded2 = [\"hideMenu\", \"options\"],\n  _excluded3 = [\"csvOptions\", \"printOptions\", \"excelOptions\"];\nimport * as React from 'react';\nimport MenuItem from '@mui/material/MenuItem';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { GridToolbarExportContainer } from './GridToolbarExportContainer';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const GridCsvExportMenuItem = props => {\n  const apiRef = useGridApiContext();\n  const {\n      hideMenu,\n      options\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  return /*#__PURE__*/_jsx(MenuItem, _extends({\n    onClick: () => {\n      apiRef.current.exportDataAsCsv(options);\n      hideMenu == null ? void 0 : hideMenu();\n    }\n  }, other, {\n    children: apiRef.current.getLocaleText('toolbarExportCSV')\n  }));\n};\nexport const GridPrintExportMenuItem = props => {\n  const apiRef = useGridApiContext();\n  const {\n      hideMenu,\n      options\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded2);\n  return /*#__PURE__*/_jsx(MenuItem, _extends({\n    onClick: () => {\n      apiRef.current.exportDataAsPrint(options);\n      hideMenu == null ? void 0 : hideMenu();\n    }\n  }, other, {\n    children: apiRef.current.getLocaleText('toolbarExportPrint')\n  }));\n};\nconst GridToolbarExport = /*#__PURE__*/React.forwardRef(function GridToolbarExport(props, ref) {\n  const {\n      csvOptions = {},\n      printOptions = {},\n      excelOptions\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded3);\n  const apiRef = useGridApiContext();\n  const preProcessedButtons = apiRef.current.unstable_applyPipeProcessors('exportMenu', [], {\n    excelOptions,\n    csvOptions,\n    printOptions\n  }).sort((a, b) => a.componentName > b.componentName ? 1 : -1);\n  if (preProcessedButtons.length === 0) {\n    return null;\n  }\n  return /*#__PURE__*/_jsx(GridToolbarExportContainer, _extends({}, other, {\n    ref: ref,\n    children: preProcessedButtons.map((button, index) => /*#__PURE__*/React.cloneElement(button.component, {\n      key: index\n    }))\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? void 0 : void 0;\nexport { GridToolbarExport };","import * as React from 'react';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { useGridLogger } from '../../utils/useGridLogger';\nimport { exportAs } from '../../../utils/exportAs';\nimport { buildCSV } from './serializers/csvSerializer';\nimport { getColumnsToExport, defaultGetRowsToExport } from './utils';\nimport { useGridRegisterPipeProcessor } from '../../core/pipeProcessing';\nimport { GridCsvExportMenuItem } from '../../../components/toolbar/GridToolbarExport';\n/**\n * @requires useGridColumns (state)\n * @requires useGridFilter (state)\n * @requires useGridSorting (state)\n * @requires useGridSelection (state)\n * @requires useGridParamsApi (method)\n */\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const useGridCsvExport = apiRef => {\n  const logger = useGridLogger(apiRef, 'useGridCsvExport');\n  const getDataAsCsv = React.useCallback(function () {\n    let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var _options$getRowsToExp, _options$includeHeade;\n    logger.debug(`Get data as CSV`);\n    const exportedColumns = getColumnsToExport({\n      apiRef,\n      options\n    });\n    const getRowsToExport = (_options$getRowsToExp = options.getRowsToExport) != null ? _options$getRowsToExp : defaultGetRowsToExport;\n    const exportedRowIds = getRowsToExport({\n      apiRef\n    });\n    return buildCSV({\n      columns: exportedColumns,\n      rowIds: exportedRowIds,\n      getCellParams: apiRef.current.getCellParams,\n      delimiterCharacter: options.delimiter || ',',\n      includeHeaders: (_options$includeHeade = options.includeHeaders) != null ? _options$includeHeade : true\n    });\n  }, [logger, apiRef]);\n  const exportDataAsCsv = React.useCallback(options => {\n    logger.debug(`Export data as CSV`);\n    const csv = getDataAsCsv(options);\n    const blob = new Blob([options != null && options.utf8WithBom ? new Uint8Array([0xef, 0xbb, 0xbf]) : '', csv], {\n      type: 'text/csv'\n    });\n    exportAs(blob, 'csv', options == null ? void 0 : options.fileName);\n  }, [logger, getDataAsCsv]);\n  const csvExportApi = {\n    getDataAsCsv,\n    exportDataAsCsv\n  };\n  useGridApiMethod(apiRef, csvExportApi, 'GridCsvExportApi');\n  /**\n   * PRE-PROCESSING\n   */\n\n  const addExportMenuButtons = React.useCallback((initialValue, options) => {\n    var _options$csvOptions;\n    if ((_options$csvOptions = options.csvOptions) != null && _options$csvOptions.disableToolbarButton) {\n      return initialValue;\n    }\n    return [...initialValue, {\n      component: /*#__PURE__*/_jsx(GridCsvExportMenuItem, {\n        options: options.csvOptions\n      }),\n      componentName: 'csvExport'\n    }];\n  }, []);\n  useGridRegisterPipeProcessor(apiRef, 'exportMenu', addExportMenuButtons);\n};","/**\n * I have hesitated to use https://github.com/eligrey/FileSaver.js.\n * If we get bug reports that this project solves, we should consider using it.\n *\n * Related resources.\n * https://blog.logrocket.com/programmatic-file-downloads-in-the-browser-9a5186298d5c/\n * https://github.com/mbrn/filefy/blob/ec4ed0b7415d93be7158c23029f2ea1fa0b8e2d9/src/core/BaseBuilder.ts\n * https://unpkg.com/browse/@progress/kendo-file-saver@1.0.7/dist/es/save-as.js\n * https://github.com/ag-grid/ag-grid/blob/9565c219b6210aa85fa833c929d0728f9d163a91/community-modules/csv-export/src/csvExport/downloader.ts\n */\nexport function exportAs(blob) {\n  let extension = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'csv';\n  let filename = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : document.title || 'untitled';\n  const fullName = `${filename}.${extension}`; // Test download attribute first\n  // https://github.com/eligrey/FileSaver.js/issues/193\n\n  if ('download' in HTMLAnchorElement.prototype) {\n    // Create an object URL for the blob object\n    const url = URL.createObjectURL(blob); // Create a new anchor element\n\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = fullName; // Programmatically trigger a click on the anchor element\n    // Useful if you want the download to happen automatically\n    // Without attaching the anchor element to the DOM\n\n    a.click(); // https://github.com/eligrey/FileSaver.js/issues/205\n\n    setTimeout(() => {\n      URL.revokeObjectURL(url);\n    });\n    return;\n  }\n  throw new Error('MUI: exportAs not supported');\n}","export const gridRowsMetaSelector = state => state.rowsMeta;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { ownerDocument } from '@mui/material/utils';\nimport { useGridLogger } from '../../utils/useGridLogger';\nimport { gridVisibleRowCountSelector } from '../filter/gridFilterSelector';\nimport { gridColumnDefinitionsSelector, gridColumnVisibilityModelSelector } from '../columns/gridColumnsSelector';\nimport { gridDensityTotalHeaderHeightSelector } from '../density/densitySelector';\nimport { gridClasses } from '../../../constants/gridClasses';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { gridRowsMetaSelector } from '../rows/gridRowsMetaSelector';\nimport { getColumnsToExport } from './utils';\nimport { useGridRegisterPipeProcessor } from '../../core/pipeProcessing';\nimport { GridPrintExportMenuItem } from '../../../components/toolbar/GridToolbarExport';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction raf() {\n  return new Promise(resolve => {\n    requestAnimationFrame(() => {\n      resolve();\n    });\n  });\n}\nfunction getChromeVersion() {\n  const raw = navigator.userAgent.match(/Chrom(e|ium)\\/([0-9]+)\\./);\n  return raw ? parseInt(raw[2], 10) : null;\n}\n\n/**\n * @requires useGridColumns (state)\n * @requires useGridFilter (state)\n * @requires useGridSorting (state)\n * @requires useGridParamsApi (method)\n */\nexport const useGridPrintExport = (apiRef, props) => {\n  const logger = useGridLogger(apiRef, 'useGridPrintExport');\n  const doc = React.useRef(null);\n  const previousGridState = React.useRef(null);\n  const previousColumnVisibility = React.useRef({});\n  React.useEffect(() => {\n    doc.current = ownerDocument(apiRef.current.rootElementRef.current);\n  }, [apiRef]); // Returns a promise because updateColumns triggers state update and\n  // the new state needs to be in place before the grid can be sized correctly\n\n  const updateGridColumnsForPrint = React.useCallback((fields, allColumns) => new Promise(resolve => {\n    // TODO remove unused Promise\n    if (!fields && !allColumns) {\n      resolve();\n      return;\n    }\n    const exportedColumnFields = getColumnsToExport({\n      apiRef,\n      options: {\n        fields,\n        allColumns\n      }\n    }).map(column => column.field);\n    const columns = gridColumnDefinitionsSelector(apiRef);\n    const newColumnVisibilityModel = {};\n    columns.forEach(column => {\n      newColumnVisibilityModel[column.field] = exportedColumnFields.includes(column.field);\n    });\n    apiRef.current.setColumnVisibilityModel(newColumnVisibilityModel);\n    resolve();\n  }), [apiRef]); // TODO move outside of this scope and remove React.useCallback\n\n  const buildPrintWindow = React.useCallback(title => {\n    const iframeEl = document.createElement('iframe');\n    iframeEl.style.position = 'absolute';\n    iframeEl.style.width = '0px';\n    iframeEl.style.height = '0px';\n    iframeEl.title = title || document.title;\n    return iframeEl;\n  }, []);\n  const handlePrintWindowLoad = React.useCallback((printWindow, options) => {\n    var _querySelector, _querySelector2;\n    const normalizeOptions = _extends({\n      copyStyles: true,\n      hideToolbar: false,\n      hideFooter: false\n    }, options);\n    const printDoc = printWindow.contentDocument;\n    if (!printDoc) {\n      return;\n    }\n    const totalHeaderHeight = gridDensityTotalHeaderHeightSelector(apiRef);\n    const rowsMeta = gridRowsMetaSelector(apiRef.current.state);\n    const gridRootElement = apiRef.current.rootElementRef.current;\n    const gridClone = gridRootElement.cloneNode(true);\n    const gridCloneViewport = gridClone.querySelector(`.${gridClasses.virtualScroller}`); // Expand the viewport window to prevent clipping\n\n    gridCloneViewport.style.height = 'auto';\n    gridCloneViewport.style.width = 'auto';\n    gridCloneViewport.parentElement.style.width = 'auto';\n    gridCloneViewport.parentElement.style.height = 'auto'; // Allow to overflow to not hide the border of the last row\n\n    const gridMain = gridClone.querySelector(`.${gridClasses.main}`);\n    gridMain.style.overflow = 'visible';\n    const chromeVersion = getChromeVersion();\n    if (chromeVersion && chromeVersion >= 108) {\n      // See https://support.google.com/chrome/thread/191619088?hl=en&msgid=193009642\n      gridClone.style.contain = 'size';\n    }\n    const columnHeaders = gridClone.querySelector(`.${gridClasses.columnHeaders}`);\n    const columnHeadersInner = columnHeaders.querySelector(`.${gridClasses.columnHeadersInner}`);\n    columnHeadersInner.style.width = '100%';\n    let gridToolbarElementHeight = ((_querySelector = gridRootElement.querySelector(`.${gridClasses.toolbarContainer}`)) == null ? void 0 : _querySelector.clientHeight) || 0;\n    let gridFooterElementHeight = ((_querySelector2 = gridRootElement.querySelector(`.${gridClasses.footerContainer}`)) == null ? void 0 : _querySelector2.clientHeight) || 0;\n    if (normalizeOptions.hideToolbar) {\n      var _gridClone$querySelec;\n      (_gridClone$querySelec = gridClone.querySelector(`.${gridClasses.toolbarContainer}`)) == null ? void 0 : _gridClone$querySelec.remove();\n      gridToolbarElementHeight = 0;\n    }\n    if (normalizeOptions.hideFooter) {\n      var _gridClone$querySelec2;\n      (_gridClone$querySelec2 = gridClone.querySelector(`.${gridClasses.footerContainer}`)) == null ? void 0 : _gridClone$querySelec2.remove();\n      gridFooterElementHeight = 0;\n    } // Expand container height to accommodate all rows\n\n    gridClone.style.height = `${rowsMeta.currentPageTotalHeight + totalHeaderHeight + gridToolbarElementHeight + gridFooterElementHeight}px`; // printDoc.body.appendChild(gridClone); should be enough but a clone isolation bug in Safari\n    // prevents us to do it\n\n    const container = document.createElement('div');\n    container.appendChild(gridClone);\n    printDoc.body.innerHTML = container.innerHTML;\n    const defaultPageStyle = typeof normalizeOptions.pageStyle === 'function' ? normalizeOptions.pageStyle() : normalizeOptions.pageStyle;\n    if (typeof defaultPageStyle === 'string') {\n      // TODO custom styles should always win\n      const styleElement = printDoc.createElement('style');\n      styleElement.appendChild(printDoc.createTextNode(defaultPageStyle));\n      printDoc.head.appendChild(styleElement);\n    }\n    if (normalizeOptions.bodyClassName) {\n      printDoc.body.classList.add(...normalizeOptions.bodyClassName.split(' '));\n    }\n    if (normalizeOptions.copyStyles) {\n      const headStyleElements = doc.current.querySelectorAll(\"style, link[rel='stylesheet']\");\n      for (let i = 0; i < headStyleElements.length; i += 1) {\n        const node = headStyleElements[i];\n        if (node.tagName === 'STYLE') {\n          const newHeadStyleElements = printDoc.createElement(node.tagName);\n          const sheet = node.sheet;\n          if (sheet) {\n            let styleCSS = ''; // NOTE: for-of is not supported by IE\n\n            for (let j = 0; j < sheet.cssRules.length; j += 1) {\n              if (typeof sheet.cssRules[j].cssText === 'string') {\n                styleCSS += `${sheet.cssRules[j].cssText}\\r\\n`;\n              }\n            }\n            newHeadStyleElements.appendChild(printDoc.createTextNode(styleCSS));\n            printDoc.head.appendChild(newHeadStyleElements);\n          }\n        } else if (node.getAttribute('href')) {\n          // If `href` tag is empty, avoid loading these links\n          const newHeadStyleElements = printDoc.createElement(node.tagName);\n          for (let j = 0; j < node.attributes.length; j += 1) {\n            const attr = node.attributes[j];\n            if (attr) {\n              newHeadStyleElements.setAttribute(attr.nodeName, attr.nodeValue || '');\n            }\n          }\n          printDoc.head.appendChild(newHeadStyleElements);\n        }\n      }\n    } // Trigger print\n\n    if (process.env.NODE_ENV !== 'test') {\n      printWindow.contentWindow.print();\n    }\n  }, [apiRef, doc]);\n  const handlePrintWindowAfterPrint = React.useCallback(printWindow => {\n    var _previousGridState$cu, _previousGridState$cu2;\n\n    // Remove the print iframe\n    doc.current.body.removeChild(printWindow); // Revert grid to previous state\n\n    apiRef.current.restoreState(previousGridState.current || {});\n    if (!((_previousGridState$cu = previousGridState.current) != null && (_previousGridState$cu2 = _previousGridState$cu.columns) != null && _previousGridState$cu2.columnVisibilityModel)) {\n      // if the apiRef.current.exportState(); did not exported the column visibility, we update it\n      apiRef.current.setColumnVisibilityModel(previousColumnVisibility.current);\n    }\n    apiRef.current.unstable_enableVirtualization(); // Clear local state\n\n    previousGridState.current = null;\n    previousColumnVisibility.current = {};\n  }, [apiRef]);\n  const exportDataAsPrint = React.useCallback(async options => {\n    logger.debug(`Export data as Print`);\n    if (!apiRef.current.rootElementRef.current) {\n      throw new Error('MUI: No grid root element available.');\n    }\n    previousGridState.current = apiRef.current.exportState(); // It appends that the visibility model is not exported, especially if columnVisibility is not controlled\n\n    previousColumnVisibility.current = gridColumnVisibilityModelSelector(apiRef);\n    if (props.pagination) {\n      const visibleRowCount = gridVisibleRowCountSelector(apiRef);\n      apiRef.current.setPageSize(visibleRowCount);\n    }\n    await updateGridColumnsForPrint(options == null ? void 0 : options.fields, options == null ? void 0 : options.allColumns);\n    apiRef.current.unstable_disableVirtualization();\n    await raf(); // wait for the state changes to take action\n\n    const printWindow = buildPrintWindow(options == null ? void 0 : options.fileName);\n    if (process.env.NODE_ENV === 'test') {\n      doc.current.body.appendChild(printWindow); // In test env, run the all pipeline without waiting for loading\n\n      handlePrintWindowLoad(printWindow, options);\n      handlePrintWindowAfterPrint(printWindow);\n    } else {\n      printWindow.onload = () => {\n        handlePrintWindowLoad(printWindow, options);\n        const mediaQueryList = printWindow.contentWindow.matchMedia('print');\n        mediaQueryList.addEventListener('change', mql => {\n          const isAfterPrint = mql.matches === false;\n          if (isAfterPrint) {\n            handlePrintWindowAfterPrint(printWindow);\n          }\n        });\n      };\n      doc.current.body.appendChild(printWindow);\n    }\n  }, [props, logger, apiRef, buildPrintWindow, handlePrintWindowLoad, handlePrintWindowAfterPrint, updateGridColumnsForPrint]);\n  const printExportApi = {\n    exportDataAsPrint\n  };\n  useGridApiMethod(apiRef, printExportApi, 'GridPrintExportApi');\n  /**\n   * PRE-PROCESSING\n   */\n\n  const addExportMenuButtons = React.useCallback((initialValue, options) => {\n    var _options$printOptions;\n    if ((_options$printOptions = options.printOptions) != null && _options$printOptions.disableToolbarButton) {\n      return initialValue;\n    }\n    return [...initialValue, {\n      component: /*#__PURE__*/_jsx(GridPrintExportMenuItem, {\n        options: options.printOptions\n      }),\n      componentName: 'printExport'\n    }];\n  }, []);\n  useGridRegisterPipeProcessor(apiRef, 'exportMenu', addExportMenuButtons);\n};","export const GridFeatureModeConstant = {\n  client: 'client',\n  server: 'server'\n};","/**\n * Filter item definition interface.\n */\nvar GridLinkOperator;\n(function (GridLinkOperator) {\n  GridLinkOperator[\"And\"] = \"and\";\n  GridLinkOperator[\"Or\"] = \"or\";\n})(GridLinkOperator || (GridLinkOperator = {}));\nexport { GridLinkOperator };","import { GridLinkOperator } from '../../../models/gridFilterItem';\nexport const getDefaultGridFilterModel = () => ({\n  items: [],\n  linkOperator: GridLinkOperator.And,\n  quickFilterValues: [],\n  quickFilterLogicOperator: GridLinkOperator.And\n});","import * as React from 'react';\nimport { useFirstRender } from '../../utils/useFirstRender';\nexport const useGridRegisterStrategyProcessor = (apiRef, strategyName, group, processor) => {\n  const registerPreProcessor = React.useCallback(() => {\n    apiRef.current.unstable_registerStrategyProcessor(strategyName, group, processor);\n  }, [apiRef, processor, group, strategyName]);\n  useFirstRender(() => {\n    registerPreProcessor();\n  });\n  const isFirstRender = React.useRef(true);\n  React.useEffect(() => {\n    if (isFirstRender.current) {\n      isFirstRender.current = false;\n    } else {\n      registerPreProcessor();\n    }\n  }, [registerPreProcessor]);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { GridLinkOperator } from '../../../models';\nimport { getDefaultGridFilterModel } from './gridFilterState';\nimport { buildWarning } from '../../../utils/warning';\nimport { gridColumnFieldsSelector, gridColumnLookupSelector } from '../columns';\n\n/**\n * Adds default values to the optional fields of a filter items.\n * @param {GridFilterItem} item The raw filter item.\n * @param {React.MutableRefObject<GridApiCommunity>} apiRef The API of the grid.\n * @return {GridFilterItem} The clean filter item with an uniq ID and an always-defined operatorValue.\n * TODO: Make the typing reflect the different between GridFilterInputItem and GridFilterItem.\n */\nexport const cleanFilterItem = (item, apiRef) => {\n  const cleanItem = _extends({}, item);\n  if (cleanItem.id == null) {\n    cleanItem.id = Math.round(Math.random() * 1e5);\n  }\n  if (cleanItem.operatorValue == null) {\n    // Selects a default operator\n    // We don't use `apiRef.current.getColumn` because it is not ready during state initialization\n    const column = gridColumnLookupSelector(apiRef)[cleanItem.columnField];\n    cleanItem.operatorValue = column && column.filterOperators[0].value;\n  }\n  return cleanItem;\n};\nconst filterModelDisableMultiColumnsFilteringWarning = buildWarning(['MUI: The `filterModel` can only contain a single item when the `disableMultipleColumnsFiltering` prop is set to `true`.', 'If you are using the community version of the `DataGrid`, this prop is always `true`.'], 'error');\nconst filterModelMissingItemIdWarning = buildWarning(\"MUI: The 'id' field is required on `filterModel.items` when you use multiple filters.\", 'error');\nconst filterModelMissingItemOperatorWarning = buildWarning(['MUI: One of your filtering item have no `operatorValue` provided.', 'This property will become required on `@mui/x-data-grid@6.X`.']);\nexport const sanitizeFilterModel = (model, disableMultipleColumnsFiltering, apiRef) => {\n  const hasSeveralItems = model.items.length > 1;\n  let items;\n  if (hasSeveralItems && disableMultipleColumnsFiltering) {\n    filterModelDisableMultiColumnsFilteringWarning();\n    items = [model.items[0]];\n  } else {\n    items = model.items;\n  }\n  const hasItemsWithoutIds = hasSeveralItems && items.some(item => item.id == null);\n  const hasItemWithoutOperator = items.some(item => item.operatorValue == null);\n  if (hasItemsWithoutIds) {\n    filterModelMissingItemIdWarning();\n  }\n  if (hasItemWithoutOperator) {\n    filterModelMissingItemOperatorWarning();\n  }\n  if (hasItemWithoutOperator || hasItemsWithoutIds) {\n    return _extends({}, model, {\n      items: items.map(item => cleanFilterItem(item, apiRef))\n    });\n  }\n  if (model.items !== items) {\n    return _extends({}, model, {\n      items\n    });\n  }\n  return model;\n};\nexport const mergeStateWithFilterModel = (filterModel, disableMultipleColumnsFiltering, apiRef) => filteringState => _extends({}, filteringState, {\n  filterModel: sanitizeFilterModel(filterModel, disableMultipleColumnsFiltering, apiRef)\n});\nconst getFilterCallbackFromItem = (filterItem, apiRef) => {\n  if (!filterItem.columnField || !filterItem.operatorValue) {\n    return null;\n  }\n  const column = apiRef.current.getColumn(filterItem.columnField);\n  if (!column) {\n    return null;\n  }\n  let parsedValue;\n  if (column.valueParser) {\n    var _filterItem$value;\n    const parser = column.valueParser;\n    parsedValue = Array.isArray(filterItem.value) ? (_filterItem$value = filterItem.value) == null ? void 0 : _filterItem$value.map(x => parser(x)) : parser(filterItem.value);\n  } else {\n    parsedValue = filterItem.value;\n  }\n  const newFilterItem = _extends({}, filterItem, {\n    value: parsedValue\n  });\n  const filterOperators = column.filterOperators;\n  if (!(filterOperators != null && filterOperators.length)) {\n    throw new Error(`MUI: No filter operators found for column '${column.field}'.`);\n  }\n  const filterOperator = filterOperators.find(operator => operator.value === newFilterItem.operatorValue);\n  if (!filterOperator) {\n    throw new Error(`MUI: No filter operator found for column '${column.field}' and operator value '${newFilterItem.operatorValue}'.`);\n  }\n  const applyFilterOnRow = filterOperator.getApplyFilterFn(newFilterItem, column);\n  if (typeof applyFilterOnRow !== 'function') {\n    return null;\n  }\n  const fn = rowId => {\n    const cellParams = apiRef.current.getCellParams(rowId, newFilterItem.columnField);\n    return applyFilterOnRow(cellParams);\n  };\n  return {\n    fn,\n    item: newFilterItem\n  };\n};\n/**\n * Generates a method to easily check if a row is matching the current filter model.\n * @param {GridFilterModel} filterModel The model with which we want to filter the rows.\n * @param {React.MutableRefObject<GridApiCommunity>} apiRef The API of the grid.\n * @returns {GridAggregatedFilterItemApplier | null} A method that checks if a row is matching the current filter model. If `null`, we consider that all the rows are matching the filters.\n */\n\nexport const buildAggregatedFilterItemsApplier = (filterModel, apiRef) => {\n  const {\n    items\n  } = filterModel;\n  const appliers = items.map(item => getFilterCallbackFromItem(item, apiRef)).filter(callback => !!callback);\n  if (appliers.length === 0) {\n    return null;\n  }\n  return (rowId, shouldApplyFilter) => {\n    const resultPerItemId = {};\n    const filteredAppliers = shouldApplyFilter ? appliers.filter(applier => shouldApplyFilter(applier.item.columnField)) : appliers;\n    filteredAppliers.forEach(applier => {\n      resultPerItemId[applier.item.id] = applier.fn(rowId);\n    });\n    return resultPerItemId;\n  };\n};\n/**\n * Generates a method to easily check if a row is matching the current quick filter.\n * @param {any[]} values The model with which we want to filter the rows.\n * @param {React.MutableRefObject<GridApiCommunity>} apiRef The API of the grid.\n * @returns {GridAggregatedFilterItemApplier | null} A method that checks if a row is matching the current filter model. If `null`, we consider that all the rows are matching the filters.\n */\n\nexport const buildAggregatedQuickFilterApplier = (filterModel, apiRef) => {\n  const {\n    quickFilterValues = []\n  } = filterModel;\n  if (quickFilterValues.length === 0) {\n    return null;\n  }\n  const columnsFields = gridColumnFieldsSelector(apiRef);\n  const appliersPerColumnField = {};\n  columnsFields.forEach(field => {\n    const column = apiRef.current.getColumn(field);\n    const getApplyQuickFilterFn = column == null ? void 0 : column.getApplyQuickFilterFn;\n    if (!getApplyQuickFilterFn) {\n      return;\n    }\n    appliersPerColumnField[field] = quickFilterValues.map(value => getApplyQuickFilterFn(value, column, apiRef));\n  }); // If some value does not have an applier we ignore them\n\n  const sanitizedQuickFilterValues = quickFilterValues.filter((value, index) => Object.keys(appliersPerColumnField).some(field => appliersPerColumnField[field][index] != null));\n  if (sanitizedQuickFilterValues.length === 0) {\n    return null;\n  }\n  return (rowId, shouldApplyFilter) => {\n    const usedCellParams = {};\n    const columnsFieldsToFilter = [];\n    Object.keys(appliersPerColumnField).forEach(columnField => {\n      if (!shouldApplyFilter || shouldApplyFilter(columnField)) {\n        usedCellParams[columnField] = apiRef.current.getCellParams(rowId, columnField);\n        columnsFieldsToFilter.push(columnField);\n      }\n    });\n    const quickFilterValueResult = {};\n    sanitizedQuickFilterValues.forEach((value, index) => {\n      const isPassing = columnsFieldsToFilter.some(field => {\n        var _appliersPerColumnFie, _appliersPerColumnFie2;\n        if (appliersPerColumnField[field][index] == null) {\n          return false;\n        }\n        return (_appliersPerColumnFie = (_appliersPerColumnFie2 = appliersPerColumnField[field])[index]) == null ? void 0 : _appliersPerColumnFie.call(_appliersPerColumnFie2, usedCellParams[field]);\n      });\n      quickFilterValueResult[value] = isPassing;\n    });\n    return quickFilterValueResult;\n  };\n};\nexport const buildAggregatedFilterApplier = (filterModel, apiRef) => {\n  const isRowMatchingFilterItems = buildAggregatedFilterItemsApplier(filterModel, apiRef);\n  const isRowMatchingQuickFilter = buildAggregatedQuickFilterApplier(filterModel, apiRef);\n  return (rowId, shouldApplyFilter) => ({\n    passingFilterItems: isRowMatchingFilterItems && isRowMatchingFilterItems(rowId, shouldApplyFilter),\n    passingQuickFilterValues: isRowMatchingQuickFilter && isRowMatchingQuickFilter(rowId, shouldApplyFilter)\n  });\n};\nexport const passFilterLogic = (allFilterItemResults, allQuickFilterResults, filterModel, apiRef) => {\n  var _filterModel$quickFil, _filterModel$linkOper;\n  const cleanedFilterItems = filterModel.items.filter(item => getFilterCallbackFromItem(item, apiRef) !== null);\n  const cleanedAllFilterItemResults = allFilterItemResults.filter(result => result != null);\n  const cleanedAllQuickFilterResults = allQuickFilterResults.filter(result => result != null); // Defaultize operators\n\n  const quickFilterLogicOperator = (_filterModel$quickFil = filterModel.quickFilterLogicOperator) != null ? _filterModel$quickFil : getDefaultGridFilterModel().quickFilterLogicOperator;\n  const linkOperator = (_filterModel$linkOper = filterModel.linkOperator) != null ? _filterModel$linkOper : getDefaultGridFilterModel().linkOperator; // get result for filter items model\n\n  if (cleanedAllFilterItemResults.length > 0) {\n    // Return true if the item pass with one of the rows\n    const filterItemPredicate = item => {\n      return cleanedAllFilterItemResults.some(filterItemResult => filterItemResult[item.id]);\n    };\n    if (linkOperator === GridLinkOperator.And) {\n      const passesAllFilters = cleanedFilterItems.every(filterItemPredicate);\n      if (!passesAllFilters) {\n        return false;\n      }\n    } else {\n      const passesSomeFilters = cleanedFilterItems.some(filterItemPredicate);\n      if (!passesSomeFilters) {\n        return false;\n      }\n    }\n  } // get result for quick filter model\n\n  if (cleanedAllQuickFilterResults.length > 0 && filterModel.quickFilterValues != null) {\n    // Return true if the item pass with one of the rows\n    const quickFilterValuePredicate = value => {\n      return cleanedAllQuickFilterResults.some(quickFilterValueResult => quickFilterValueResult[value]);\n    };\n    if (quickFilterLogicOperator === GridLinkOperator.And) {\n      const passesAllQuickFilterValues = filterModel.quickFilterValues.every(quickFilterValuePredicate);\n      if (!passesAllQuickFilterValues) {\n        return false;\n      }\n    } else {\n      const passesSomeQuickFilterValues = filterModel.quickFilterValues.some(quickFilterValuePredicate);\n      if (!passesSomeQuickFilterValues) {\n        return false;\n      }\n    }\n  }\n  return true;\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { GridFeatureModeConstant } from '../../../models/gridFeatureMode';\nimport { useGridApiEventHandler } from '../../utils/useGridApiEventHandler';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { useGridLogger } from '../../utils/useGridLogger';\nimport { gridFilterableColumnLookupSelector } from '../columns/gridColumnsSelector';\nimport { GridPreferencePanelsValue } from '../preferencesPanel/gridPreferencePanelsValue';\nimport { getDefaultGridFilterModel } from './gridFilterState';\nimport { gridFilterModelSelector, gridVisibleSortedRowEntriesSelector } from './gridFilterSelector';\nimport { useFirstRender } from '../../utils/useFirstRender';\nimport { gridRowIdsSelector } from '../rows';\nimport { useGridRegisterPipeProcessor } from '../../core/pipeProcessing';\nimport { GRID_DEFAULT_STRATEGY, useGridRegisterStrategyProcessor } from '../../core/strategyProcessing';\nimport { buildAggregatedFilterApplier, sanitizeFilterModel, mergeStateWithFilterModel, cleanFilterItem, passFilterLogic } from './gridFilterUtils';\nimport { isDeepEqual } from '../../../utils/utils';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const filterStateInitializer = (state, props, apiRef) => {\n  var _ref, _props$filterModel, _props$initialState, _props$initialState$f;\n  const filterModel = (_ref = (_props$filterModel = props.filterModel) != null ? _props$filterModel : (_props$initialState = props.initialState) == null ? void 0 : (_props$initialState$f = _props$initialState.filter) == null ? void 0 : _props$initialState$f.filterModel) != null ? _ref : getDefaultGridFilterModel();\n  return _extends({}, state, {\n    filter: {\n      filterModel: sanitizeFilterModel(filterModel, props.disableMultipleColumnsFiltering, apiRef),\n      visibleRowsLookup: {},\n      filteredDescendantCountLookup: {}\n    }\n  });\n};\n/**\n * @requires useGridColumns (method, event)\n * @requires useGridParamsApi (method)\n * @requires useGridRows (event)\n */\n\nexport const useGridFilter = (apiRef, props) => {\n  var _props$initialState3, _props$initialState3$, _props$componentsProp2;\n  const logger = useGridLogger(apiRef, 'useGridFilter');\n  apiRef.current.unstable_registerControlState({\n    stateId: 'filter',\n    propModel: props.filterModel,\n    propOnChange: props.onFilterModelChange,\n    stateSelector: gridFilterModelSelector,\n    changeEvent: 'filterModelChange'\n  });\n  const updateFilteredRows = React.useCallback(() => {\n    apiRef.current.setState(state => {\n      const filterModel = gridFilterModelSelector(state, apiRef.current.instanceId);\n      const isRowMatchingFilters = props.filterMode === GridFeatureModeConstant.client ? buildAggregatedFilterApplier(filterModel, apiRef) : null;\n      const filteringResult = apiRef.current.unstable_applyStrategyProcessor('filtering', {\n        isRowMatchingFilters,\n        filterModel: filterModel != null ? filterModel : getDefaultGridFilterModel()\n      });\n      return _extends({}, state, {\n        filter: _extends({}, state.filter, filteringResult)\n      });\n    });\n    apiRef.current.publishEvent('filteredRowsSet');\n  }, [props.filterMode, apiRef]);\n  /**\n   * API METHODS\n   */\n\n  const applyFilters = React.useCallback(() => {\n    updateFilteredRows();\n    apiRef.current.forceUpdate();\n  }, [apiRef, updateFilteredRows]);\n  const upsertFilterItem = React.useCallback(item => {\n    const filterModel = gridFilterModelSelector(apiRef);\n    const items = [...filterModel.items];\n    const itemIndex = items.findIndex(filterItem => filterItem.id === item.id);\n    if (itemIndex === -1) {\n      items.push(item);\n    } else {\n      items[itemIndex] = item;\n    }\n    apiRef.current.setFilterModel(_extends({}, filterModel, {\n      items\n    }), 'upsertFilterItem');\n  }, [apiRef]);\n  const upsertFilterItems = React.useCallback(items => {\n    const filterModel = gridFilterModelSelector(apiRef);\n    const existingItems = [...filterModel.items];\n    items.forEach(item => {\n      const itemIndex = items.findIndex(filterItem => filterItem.id === item.id);\n      if (itemIndex === -1) {\n        existingItems.push(item);\n      } else {\n        existingItems[itemIndex] = item;\n      }\n    });\n    apiRef.current.setFilterModel(_extends({}, filterModel, {\n      items\n    }), 'upsertFilterItems');\n  }, [apiRef]);\n  const deleteFilterItem = React.useCallback(itemToDelete => {\n    const filterModel = gridFilterModelSelector(apiRef);\n    const items = filterModel.items.filter(item => item.id !== itemToDelete.id);\n    if (items.length === filterModel.items.length) {\n      return;\n    }\n    apiRef.current.setFilterModel(_extends({}, filterModel, {\n      items\n    }), 'deleteFilterItem');\n  }, [apiRef]);\n  const showFilterPanel = React.useCallback(targetColumnField => {\n    logger.debug('Displaying filter panel');\n    if (targetColumnField) {\n      const filterModel = gridFilterModelSelector(apiRef);\n      const filterItemsWithValue = filterModel.items.filter(item => {\n        var _column$filterOperato;\n        if (item.value !== undefined) {\n          return true;\n        }\n        const column = apiRef.current.getColumn(item.columnField);\n        const filterOperator = (_column$filterOperato = column.filterOperators) == null ? void 0 : _column$filterOperato.find(operator => operator.value === item.operatorValue);\n        const requiresFilterValue = typeof (filterOperator == null ? void 0 : filterOperator.requiresFilterValue) === 'undefined' ? true : filterOperator == null ? void 0 : filterOperator.requiresFilterValue; // Operators like `isEmpty` don't have and don't require `item.value`.\n        // So we don't want to remove them from the filter model if `item.value === undefined`.\n        // See https://github.com/mui/mui-x/issues/5402\n\n        if (requiresFilterValue) {\n          return false;\n        }\n        return true;\n      });\n      let newFilterItems;\n      const filterItemOnTarget = filterItemsWithValue.find(item => item.columnField === targetColumnField);\n      if (filterItemOnTarget) {\n        newFilterItems = filterItemsWithValue;\n      } else if (props.disableMultipleColumnsFiltering) {\n        newFilterItems = [cleanFilterItem({\n          columnField: targetColumnField\n        }, apiRef)];\n      } else {\n        newFilterItems = [...filterItemsWithValue, cleanFilterItem({\n          columnField: targetColumnField\n        }, apiRef)];\n      }\n      apiRef.current.setFilterModel(_extends({}, filterModel, {\n        items: newFilterItems\n      }));\n    }\n    apiRef.current.showPreferences(GridPreferencePanelsValue.filters);\n  }, [apiRef, logger, props.disableMultipleColumnsFiltering]);\n  const hideFilterPanel = React.useCallback(() => {\n    logger.debug('Hiding filter panel');\n    apiRef.current.hidePreferences();\n  }, [apiRef, logger]);\n  const setFilterLinkOperator = React.useCallback(linkOperator => {\n    const filterModel = gridFilterModelSelector(apiRef);\n    if (filterModel.linkOperator === linkOperator) {\n      return;\n    }\n    apiRef.current.setFilterModel(_extends({}, filterModel, {\n      linkOperator\n    }), 'changeLogicOperator');\n  }, [apiRef]);\n  const setQuickFilterValues = React.useCallback(values => {\n    const filterModel = gridFilterModelSelector(apiRef);\n    if (isDeepEqual(filterModel.quickFilterValues, values)) {\n      return;\n    }\n    apiRef.current.setFilterModel(_extends({}, filterModel, {\n      quickFilterValues: [...values]\n    }));\n  }, [apiRef]);\n  const setFilterModel = React.useCallback((model, reason) => {\n    const currentModel = gridFilterModelSelector(apiRef);\n    if (currentModel !== model) {\n      logger.debug('Setting filter model');\n      apiRef.current.unstable_updateControlState('filter', mergeStateWithFilterModel(model, props.disableMultipleColumnsFiltering, apiRef), reason);\n      apiRef.current.unstable_applyFilters();\n    }\n  }, [apiRef, logger, props.disableMultipleColumnsFiltering]);\n  const getVisibleRowModels = React.useCallback(() => {\n    const visibleSortedRows = gridVisibleSortedRowEntriesSelector(apiRef);\n    return new Map(visibleSortedRows.map(row => [row.id, row.model]));\n  }, [apiRef]);\n  const filterApi = {\n    setFilterLinkOperator,\n    unstable_applyFilters: applyFilters,\n    deleteFilterItem,\n    upsertFilterItem,\n    upsertFilterItems,\n    setFilterModel,\n    showFilterPanel,\n    hideFilterPanel,\n    getVisibleRowModels,\n    setQuickFilterValues\n  };\n  useGridApiMethod(apiRef, filterApi, 'GridFilterApi');\n  /**\n   * PRE-PROCESSING\n   */\n\n  const stateExportPreProcessing = React.useCallback((prevState, context) => {\n    var _props$initialState2, _props$initialState2$;\n    const filterModelToExport = gridFilterModelSelector(apiRef);\n    const shouldExportFilterModel =\n    // Always export if the `exportOnlyDirtyModels` property is activated\n    !context.exportOnlyDirtyModels ||\n    // Always export if the model is controlled\n    props.filterModel != null ||\n    // Always export if the model has been initialized\n    ((_props$initialState2 = props.initialState) == null ? void 0 : (_props$initialState2$ = _props$initialState2.filter) == null ? void 0 : _props$initialState2$.filterModel) != null ||\n    // Export if the model is not equal to the default value\n    !isDeepEqual(filterModelToExport, getDefaultGridFilterModel());\n    if (!shouldExportFilterModel) {\n      return prevState;\n    }\n    return _extends({}, prevState, {\n      filter: {\n        filterModel: filterModelToExport\n      }\n    });\n  }, [apiRef, props.filterModel, (_props$initialState3 = props.initialState) == null ? void 0 : (_props$initialState3$ = _props$initialState3.filter) == null ? void 0 : _props$initialState3$.filterModel]);\n  const stateRestorePreProcessing = React.useCallback((params, context) => {\n    var _context$stateToResto;\n    const filterModel = (_context$stateToResto = context.stateToRestore.filter) == null ? void 0 : _context$stateToResto.filterModel;\n    if (filterModel == null) {\n      return params;\n    }\n    apiRef.current.unstable_updateControlState('filter', mergeStateWithFilterModel(filterModel, props.disableMultipleColumnsFiltering, apiRef), 'restoreState');\n    return _extends({}, params, {\n      callbacks: [...params.callbacks, apiRef.current.unstable_applyFilters]\n    });\n  }, [apiRef, props.disableMultipleColumnsFiltering]);\n  const preferencePanelPreProcessing = React.useCallback((initialValue, value) => {\n    if (value === GridPreferencePanelsValue.filters) {\n      var _props$componentsProp;\n      const FilterPanel = props.components.FilterPanel;\n      return /*#__PURE__*/_jsx(FilterPanel, _extends({}, (_props$componentsProp = props.componentsProps) == null ? void 0 : _props$componentsProp.filterPanel));\n    }\n    return initialValue;\n  }, [props.components.FilterPanel, (_props$componentsProp2 = props.componentsProps) == null ? void 0 : _props$componentsProp2.filterPanel]);\n  const flatFilteringMethod = React.useCallback(params => {\n    if (props.filterMode === GridFeatureModeConstant.client && params.isRowMatchingFilters) {\n      const rowIds = gridRowIdsSelector(apiRef);\n      const filteredRowsLookup = {};\n      for (let i = 0; i < rowIds.length; i += 1) {\n        const rowId = rowIds[i];\n        let isRowPassing;\n        if (typeof rowId === 'string' && rowId.startsWith('auto-generated-group-footer')) {\n          isRowPassing = true;\n        } else {\n          const {\n            passingFilterItems,\n            passingQuickFilterValues\n          } = params.isRowMatchingFilters(rowId);\n          isRowPassing = passFilterLogic([passingFilterItems], [passingQuickFilterValues], params.filterModel, apiRef);\n        }\n        filteredRowsLookup[rowId] = isRowPassing;\n      }\n      return {\n        filteredRowsLookup,\n        // For flat tree, the `visibleRowsLookup` and the `filteredRowsLookup` since no row is collapsed.\n        visibleRowsLookup: filteredRowsLookup,\n        filteredDescendantCountLookup: {}\n      };\n    }\n    return {\n      visibleRowsLookup: {},\n      filteredRowsLookup: {},\n      filteredDescendantCountLookup: {}\n    };\n  }, [apiRef, props.filterMode]);\n  useGridRegisterPipeProcessor(apiRef, 'exportState', stateExportPreProcessing);\n  useGridRegisterPipeProcessor(apiRef, 'restoreState', stateRestorePreProcessing);\n  useGridRegisterPipeProcessor(apiRef, 'preferencePanel', preferencePanelPreProcessing);\n  useGridRegisterStrategyProcessor(apiRef, GRID_DEFAULT_STRATEGY, 'filtering', flatFilteringMethod);\n  /**\n   * EVENTS\n   */\n\n  const handleColumnsChange = React.useCallback(() => {\n    logger.debug('onColUpdated - GridColumns changed, applying filters');\n    const filterModel = gridFilterModelSelector(apiRef);\n    const filterableColumnsLookup = gridFilterableColumnLookupSelector(apiRef);\n    const newFilterItems = filterModel.items.filter(item => item.columnField && filterableColumnsLookup[item.columnField]);\n    if (newFilterItems.length < filterModel.items.length) {\n      apiRef.current.setFilterModel(_extends({}, filterModel, {\n        items: newFilterItems\n      }));\n    }\n  }, [apiRef, logger]);\n  const handleStrategyProcessorChange = React.useCallback(methodName => {\n    if (methodName === 'filtering') {\n      apiRef.current.unstable_applyFilters();\n    }\n  }, [apiRef]); // Do not call `apiRef.current.forceUpdate` to avoid re-render before updating the sorted rows.\n  // Otherwise, the state is not consistent during the render\n\n  useGridApiEventHandler(apiRef, 'rowsSet', updateFilteredRows);\n  useGridApiEventHandler(apiRef, 'rowExpansionChange', apiRef.current.unstable_applyFilters);\n  useGridApiEventHandler(apiRef, 'columnsChange', handleColumnsChange);\n  useGridApiEventHandler(apiRef, 'activeStrategyProcessorChange', handleStrategyProcessorChange);\n  /**\n   * 1ST RENDER\n   */\n\n  useFirstRender(() => {\n    apiRef.current.unstable_applyFilters();\n  });\n  /**\n   * EFFECTS\n   */\n\n  React.useEffect(() => {\n    if (props.filterModel !== undefined) {\n      apiRef.current.setFilterModel(props.filterModel);\n    }\n  }, [apiRef, logger, props.filterModel]);\n};","import * as React from 'react';\nimport { gridPaginationRowRangeSelector, gridPaginatedVisibleSortedGridRowEntriesSelector } from '../features/pagination/gridPaginationSelector';\nimport { gridVisibleSortedRowEntriesSelector } from '../features/filter/gridFilterSelector';\nexport const getVisibleRows = (apiRef, props) => {\n  let rows;\n  let range;\n  if (props.pagination && props.paginationMode === 'client') {\n    range = gridPaginationRowRangeSelector(apiRef);\n    rows = gridPaginatedVisibleSortedGridRowEntriesSelector(apiRef);\n  } else {\n    rows = gridVisibleSortedRowEntriesSelector(apiRef);\n    if (rows.length === 0) {\n      range = null;\n    } else {\n      range = {\n        firstRowIndex: 0,\n        lastRowIndex: rows.length - 1\n      };\n    }\n  }\n  return {\n    rows,\n    range\n  };\n};\n/**\n * Computes the list of rows that are reachable by scroll.\n * Depending on whether pagination is enabled, it will return the rows in the current page.\n * - If the pagination is disabled or in server mode, it equals all the visible rows.\n * - If the row tree has several layers, it contains up to `state.pageSize` top level rows and all their descendants.\n * - If the row tree is flat, it only contains up to `state.pageSize` rows.\n */\n\nexport const useGridVisibleRows = (apiRef, props) => {\n  const response = getVisibleRows(apiRef, props);\n  return React.useMemo(() => ({\n    rows: response.rows,\n    range: response.range\n  }), [response.rows, response.range]);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { ownerDocument } from '@mui/material/utils';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { useGridLogger } from '../../utils/useGridLogger';\nimport { useGridApiEventHandler } from '../../utils/useGridApiEventHandler';\nimport { isNavigationKey } from '../../../utils/keyboardUtils';\nimport { gridFocusCellSelector } from './gridFocusStateSelector';\nimport { gridVisibleColumnDefinitionsSelector } from '../columns/gridColumnsSelector';\nimport { getVisibleRows } from '../../utils/useGridVisibleRows';\nimport { clamp } from '../../../utils/utils';\nexport const focusStateInitializer = state => _extends({}, state, {\n  focus: {\n    cell: null,\n    columnHeader: null\n  },\n  tabIndex: {\n    cell: null,\n    columnHeader: null\n  }\n});\n/**\n * @requires useGridParamsApi (method)\n * @requires useGridRows (method)\n * @requires useGridEditing (event)\n */\n\nexport const useGridFocus = (apiRef, props) => {\n  const logger = useGridLogger(apiRef, 'useGridFocus');\n  const lastClickedCell = React.useRef(null);\n  const publishCellFocusOut = React.useCallback((cell, event) => {\n    if (cell) {\n      // The row might have been deleted\n      if (apiRef.current.getRow(cell.id)) {\n        apiRef.current.publishEvent('cellFocusOut', apiRef.current.getCellParams(cell.id, cell.field), event);\n      }\n    }\n  }, [apiRef]);\n  const setCellFocus = React.useCallback((id, field) => {\n    const focusedCell = gridFocusCellSelector(apiRef);\n    if ((focusedCell == null ? void 0 : focusedCell.id) === id && (focusedCell == null ? void 0 : focusedCell.field) === field) {\n      return;\n    }\n    apiRef.current.setState(state => {\n      logger.debug(`Focusing on cell with id=${id} and field=${field}`);\n      return _extends({}, state, {\n        tabIndex: {\n          cell: {\n            id,\n            field\n          },\n          columnHeader: null\n        },\n        focus: {\n          cell: {\n            id,\n            field\n          },\n          columnHeader: null\n        }\n      });\n    });\n    apiRef.current.forceUpdate(); // The row might have been deleted\n\n    if (!apiRef.current.getRow(id)) {\n      return;\n    }\n    if (focusedCell) {\n      // There's a focused cell but another cell was clicked\n      // Publishes an event to notify that the focus was lost\n      publishCellFocusOut(focusedCell, {});\n    }\n    apiRef.current.publishEvent('cellFocusIn', apiRef.current.getCellParams(id, field));\n  }, [apiRef, logger, publishCellFocusOut]);\n  const setColumnHeaderFocus = React.useCallback(function (field) {\n    let event = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    const cell = gridFocusCellSelector(apiRef);\n    publishCellFocusOut(cell, event);\n    apiRef.current.setState(state => {\n      logger.debug(`Focusing on column header with colIndex=${field}`);\n      return _extends({}, state, {\n        tabIndex: {\n          columnHeader: {\n            field\n          },\n          cell: null\n        },\n        focus: {\n          columnHeader: {\n            field\n          },\n          cell: null\n        }\n      });\n    });\n    apiRef.current.forceUpdate();\n  }, [apiRef, logger, publishCellFocusOut]);\n  const moveFocusToRelativeCell = React.useCallback((id, field, direction) => {\n    let columnIndexToFocus = apiRef.current.getColumnIndex(field);\n    let rowIndexToFocus = apiRef.current.getRowIndexRelativeToVisibleRows(id);\n    const visibleColumns = gridVisibleColumnDefinitionsSelector(apiRef);\n    if (direction === 'right') {\n      columnIndexToFocus += 1;\n    } else if (direction === 'left') {\n      columnIndexToFocus -= 1;\n    } else {\n      rowIndexToFocus += 1;\n    }\n    const currentPage = getVisibleRows(apiRef, {\n      pagination: props.pagination,\n      paginationMode: props.paginationMode\n    });\n    if (columnIndexToFocus >= visibleColumns.length) {\n      // Go to next row if we are after the last column\n      rowIndexToFocus += 1;\n      if (rowIndexToFocus < currentPage.rows.length) {\n        // Go to first column of the next row if there's one more row\n        columnIndexToFocus = 0;\n      }\n    } else if (columnIndexToFocus < 0) {\n      // Go to previous row if we are before the first column\n      rowIndexToFocus -= 1;\n      if (rowIndexToFocus >= 0) {\n        // Go to last column of the previous if there's one more row\n        columnIndexToFocus = visibleColumns.length - 1;\n      }\n    }\n    rowIndexToFocus = clamp(rowIndexToFocus, 0, currentPage.rows.length - 1);\n    const rowToFocus = currentPage.rows[rowIndexToFocus];\n    const colSpanInfo = apiRef.current.unstable_getCellColSpanInfo(rowToFocus.id, columnIndexToFocus);\n    if (colSpanInfo && colSpanInfo.spannedByColSpan) {\n      if (direction === 'left' || direction === 'below') {\n        columnIndexToFocus = colSpanInfo.leftVisibleCellIndex;\n      } else if (direction === 'right') {\n        columnIndexToFocus = colSpanInfo.rightVisibleCellIndex;\n      }\n    }\n    columnIndexToFocus = clamp(columnIndexToFocus, 0, visibleColumns.length - 1);\n    const columnToFocus = visibleColumns[columnIndexToFocus];\n    apiRef.current.setCellFocus(rowToFocus.id, columnToFocus.field);\n  }, [apiRef, props.pagination, props.paginationMode]);\n  const handleCellDoubleClick = React.useCallback(_ref => {\n    let {\n      id,\n      field\n    } = _ref;\n    apiRef.current.setCellFocus(id, field);\n  }, [apiRef]);\n  const handleCellKeyDown = React.useCallback((params, event) => {\n    // GRID_CELL_NAVIGATION_KEY_DOWN handles the focus on Enter, Tab and navigation keys\n    if (event.key === 'Enter' || event.key === 'Tab' || isNavigationKey(event.key)) {\n      return;\n    }\n    apiRef.current.setCellFocus(params.id, params.field);\n  }, [apiRef]);\n  const handleColumnHeaderFocus = React.useCallback((_ref2, event) => {\n    let {\n      field\n    } = _ref2;\n    if (event.target !== event.currentTarget) {\n      return;\n    }\n    apiRef.current.setColumnHeaderFocus(field, event);\n  }, [apiRef]);\n  const handleBlur = React.useCallback(() => {\n    logger.debug(`Clearing focus`);\n    apiRef.current.setState(state => _extends({}, state, {\n      focus: {\n        cell: null,\n        columnHeader: null\n      }\n    }));\n  }, [logger, apiRef]);\n  const handleCellMouseDown = React.useCallback(params => {\n    lastClickedCell.current = params;\n  }, []);\n  const handleDocumentClick = React.useCallback(event => {\n    const cellParams = lastClickedCell.current;\n    lastClickedCell.current = null;\n    const focusedCell = gridFocusCellSelector(apiRef);\n    if (!focusedCell) {\n      if (cellParams) {\n        apiRef.current.setCellFocus(cellParams.id, cellParams.field);\n      }\n      return;\n    }\n    if ((cellParams == null ? void 0 : cellParams.id) === focusedCell.id && (cellParams == null ? void 0 : cellParams.field) === focusedCell.field) {\n      return;\n    }\n    const cellElement = apiRef.current.getCellElement(focusedCell.id, focusedCell.field);\n    if (cellElement != null && cellElement.contains(event.target)) {\n      return;\n    }\n    if (cellParams) {\n      apiRef.current.setCellFocus(cellParams.id, cellParams.field);\n    } else {\n      apiRef.current.setState(state => _extends({}, state, {\n        focus: {\n          cell: null,\n          columnHeader: null\n        }\n      }));\n      apiRef.current.forceUpdate(); // There's a focused cell but another element (not a cell) was clicked\n      // Publishes an event to notify that the focus was lost\n\n      publishCellFocusOut(focusedCell, event);\n    }\n  }, [apiRef, publishCellFocusOut]);\n  const handleCellModeChange = React.useCallback(params => {\n    if (params.cellMode === 'view') {\n      return;\n    }\n    const cell = gridFocusCellSelector(apiRef);\n    if ((cell == null ? void 0 : cell.id) !== params.id || (cell == null ? void 0 : cell.field) !== params.field) {\n      apiRef.current.setCellFocus(params.id, params.field);\n    }\n  }, [apiRef]);\n  const handleRowSet = React.useCallback(() => {\n    const cell = gridFocusCellSelector(apiRef); // If the focused cell is in a row which does not exist anymore, then remove the focus\n\n    if (cell && !apiRef.current.getRow(cell.id)) {\n      apiRef.current.setState(state => _extends({}, state, {\n        focus: {\n          cell: null,\n          columnHeader: null\n        }\n      }));\n    }\n  }, [apiRef]);\n  useGridApiMethod(apiRef, {\n    setCellFocus,\n    setColumnHeaderFocus,\n    unstable_moveFocusToRelativeCell: moveFocusToRelativeCell\n  }, 'GridFocusApi');\n  React.useEffect(() => {\n    const doc = ownerDocument(apiRef.current.rootElementRef.current);\n    doc.addEventListener('click', handleDocumentClick);\n    return () => {\n      doc.removeEventListener('click', handleDocumentClick);\n    };\n  }, [apiRef, handleDocumentClick]);\n  useGridApiEventHandler(apiRef, 'columnHeaderBlur', handleBlur);\n  useGridApiEventHandler(apiRef, 'cellDoubleClick', handleCellDoubleClick);\n  useGridApiEventHandler(apiRef, 'cellMouseDown', handleCellMouseDown);\n  useGridApiEventHandler(apiRef, 'cellKeyDown', handleCellKeyDown);\n  useGridApiEventHandler(apiRef, 'cellModeChange', handleCellModeChange);\n  useGridApiEventHandler(apiRef, 'columnHeaderFocus', handleColumnHeaderFocus);\n  useGridApiEventHandler(apiRef, 'rowsSet', handleRowSet);\n};","import * as React from 'react';\nimport { gridVisibleColumnDefinitionsSelector } from '../columns/gridColumnsSelector';\nimport { useGridLogger } from '../../utils/useGridLogger';\nimport { useGridApiEventHandler } from '../../utils/useGridApiEventHandler';\nimport { gridVisibleSortedRowEntriesSelector } from '../filter/gridFilterSelector';\nimport { useGridVisibleRows } from '../../utils/useGridVisibleRows';\nimport { GRID_CHECKBOX_SELECTION_COL_DEF } from '../../../colDef/gridCheckboxSelectionColDef';\nimport { gridClasses } from '../../../constants/gridClasses';\nimport { GridCellModes } from '../../../models/gridEditRowModel';\nimport { isNavigationKey } from '../../../utils/keyboardUtils';\nimport { GRID_DETAIL_PANEL_TOGGLE_FIELD } from '../../../constants/gridDetailPanelToggleField';\nimport { gridPinnedRowsSelector } from '../rows/gridRowsSelector';\nfunction enrichPageRowsWithPinnedRows(apiRef, rows) {\n  const pinnedRows = gridPinnedRowsSelector(apiRef) || {};\n  return [...(pinnedRows.top || []), ...rows, ...(pinnedRows.bottom || [])];\n}\n/**\n * @requires useGridSorting (method) - can be after\n * @requires useGridFilter (state) - can be after\n * @requires useGridColumns (state, method) - can be after\n * @requires useGridDimensions (method) - can be after\n * @requires useGridFocus (method) - can be after\n * @requires useGridScroll (method) - can be after\n * @requires useGridColumnSpanning (method) - can be after\n */\n\nexport const useGridKeyboardNavigation = (apiRef, props) => {\n  const logger = useGridLogger(apiRef, 'useGridKeyboardNavigation');\n  const initialCurrentPageRows = useGridVisibleRows(apiRef, props).rows;\n  const currentPageRows = React.useMemo(() => enrichPageRowsWithPinnedRows(apiRef, initialCurrentPageRows), [apiRef, initialCurrentPageRows]);\n  /**\n   * @param {number} colIndex Index of the column to focus\n   * @param {number} rowIndex index of the row to focus\n   * @param {string} closestColumnToUse Which closest column cell to use when the cell is spanned by `colSpan`.\n   * TODO replace with apiRef.current.unstable_moveFocusToRelativeCell()\n   */\n\n  const goToCell = React.useCallback(function (colIndex, rowId) {\n    let closestColumnToUse = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'left';\n    const visibleSortedRows = gridVisibleSortedRowEntriesSelector(apiRef);\n    const nextCellColSpanInfo = apiRef.current.unstable_getCellColSpanInfo(rowId, colIndex);\n    if (nextCellColSpanInfo && nextCellColSpanInfo.spannedByColSpan) {\n      if (closestColumnToUse === 'left') {\n        colIndex = nextCellColSpanInfo.leftVisibleCellIndex;\n      } else if (closestColumnToUse === 'right') {\n        colIndex = nextCellColSpanInfo.rightVisibleCellIndex;\n      }\n    } // `scrollToIndexes` requires a rowIndex relative to all visible rows.\n    // Those rows do not include pinned rows, but pinned rows do not need scroll anyway.\n\n    const rowIndexRelativeToAllRows = visibleSortedRows.findIndex(row => row.id === rowId);\n    logger.debug(`Navigating to cell row ${rowIndexRelativeToAllRows}, col ${colIndex}`);\n    apiRef.current.scrollToIndexes({\n      colIndex,\n      rowIndex: rowIndexRelativeToAllRows\n    });\n    const field = apiRef.current.getVisibleColumns()[colIndex].field;\n    apiRef.current.setCellFocus(rowId, field);\n  }, [apiRef, logger]);\n  const goToHeader = React.useCallback((colIndex, event) => {\n    logger.debug(`Navigating to header col ${colIndex}`);\n    apiRef.current.scrollToIndexes({\n      colIndex\n    });\n    const field = apiRef.current.getVisibleColumns()[colIndex].field;\n    apiRef.current.setColumnHeaderFocus(field, event);\n  }, [apiRef, logger]);\n  const getRowIdFromIndex = React.useCallback(rowIndex => {\n    return currentPageRows[rowIndex].id;\n  }, [currentPageRows]);\n  const handleCellNavigationKeyDown = React.useCallback((params, event) => {\n    const dimensions = apiRef.current.getRootDimensions();\n    if (currentPageRows.length === 0 || !dimensions) {\n      return;\n    }\n    const viewportPageSize = apiRef.current.unstable_getViewportPageSize();\n    const colIndexBefore = params.field ? apiRef.current.getColumnIndex(params.field) : 0;\n    const rowIndexBefore = currentPageRows.findIndex(row => row.id === params.id);\n    const firstRowIndexInPage = 0;\n    const lastRowIndexInPage = currentPageRows.length - 1;\n    const firstColIndex = 0;\n    const lastColIndex = gridVisibleColumnDefinitionsSelector(apiRef).length - 1;\n    let shouldPreventDefault = true;\n    switch (event.key) {\n      case 'ArrowDown':\n      case 'Enter':\n        {\n          // TODO v6: Remove Enter case because `cellNavigationKeyDown` is not fired by the new editing API\n          // \"Enter\" is only triggered by the row / cell editing feature\n          if (rowIndexBefore < lastRowIndexInPage) {\n            goToCell(colIndexBefore, getRowIdFromIndex(rowIndexBefore + 1));\n          }\n          break;\n        }\n      case 'ArrowUp':\n        {\n          if (rowIndexBefore > firstRowIndexInPage) {\n            goToCell(colIndexBefore, getRowIdFromIndex(rowIndexBefore - 1));\n          } else {\n            goToHeader(colIndexBefore, event);\n          }\n          break;\n        }\n      case 'ArrowRight':\n        {\n          if (colIndexBefore < lastColIndex) {\n            goToCell(colIndexBefore + 1, getRowIdFromIndex(rowIndexBefore), 'right');\n          }\n          break;\n        }\n      case 'ArrowLeft':\n        {\n          if (colIndexBefore > firstColIndex) {\n            goToCell(colIndexBefore - 1, getRowIdFromIndex(rowIndexBefore));\n          }\n          break;\n        }\n      case 'Tab':\n        {\n          // \"Tab\" is only triggered by the row / cell editing feature\n          if (event.shiftKey && colIndexBefore > firstColIndex) {\n            goToCell(colIndexBefore - 1, getRowIdFromIndex(rowIndexBefore), 'left');\n          } else if (!event.shiftKey && colIndexBefore < lastColIndex) {\n            goToCell(colIndexBefore + 1, getRowIdFromIndex(rowIndexBefore), 'right');\n          }\n          break;\n        }\n      case ' ':\n        {\n          const field = params.field;\n          if (field === GRID_DETAIL_PANEL_TOGGLE_FIELD) {\n            break;\n          }\n          const colDef = params.colDef;\n          if (colDef && colDef.type === 'treeDataGroup') {\n            break;\n          }\n          if (!event.shiftKey && rowIndexBefore < lastRowIndexInPage) {\n            goToCell(colIndexBefore, getRowIdFromIndex(Math.min(rowIndexBefore + viewportPageSize, lastRowIndexInPage)));\n          }\n          break;\n        }\n      case 'PageDown':\n        {\n          if (rowIndexBefore < lastRowIndexInPage) {\n            goToCell(colIndexBefore, getRowIdFromIndex(Math.min(rowIndexBefore + viewportPageSize, lastRowIndexInPage)));\n          }\n          break;\n        }\n      case 'PageUp':\n        {\n          // Go to the first row before going to header\n          const nextRowIndex = Math.max(rowIndexBefore - viewportPageSize, firstRowIndexInPage);\n          if (nextRowIndex !== rowIndexBefore && nextRowIndex >= firstRowIndexInPage) {\n            goToCell(colIndexBefore, getRowIdFromIndex(nextRowIndex));\n          } else {\n            goToHeader(colIndexBefore, event);\n          }\n          break;\n        }\n      case 'Home':\n        {\n          if (event.ctrlKey || event.metaKey || event.shiftKey) {\n            goToCell(firstColIndex, getRowIdFromIndex(firstRowIndexInPage));\n          } else {\n            goToCell(firstColIndex, getRowIdFromIndex(rowIndexBefore));\n          }\n          break;\n        }\n      case 'End':\n        {\n          if (event.ctrlKey || event.metaKey || event.shiftKey) {\n            goToCell(lastColIndex, getRowIdFromIndex(lastRowIndexInPage));\n          } else {\n            goToCell(lastColIndex, getRowIdFromIndex(rowIndexBefore));\n          }\n          break;\n        }\n      default:\n        {\n          shouldPreventDefault = false;\n        }\n    }\n    if (shouldPreventDefault) {\n      event.preventDefault();\n    }\n  }, [apiRef, currentPageRows, goToCell, goToHeader, getRowIdFromIndex]);\n  const handleColumnHeaderKeyDown = React.useCallback((params, event) => {\n    const headerTitleNode = event.currentTarget.querySelector(`.${gridClasses.columnHeaderTitleContainerContent}`);\n    const isFromInsideContent = !!headerTitleNode && headerTitleNode.contains(event.target);\n    if (isFromInsideContent && params.field !== GRID_CHECKBOX_SELECTION_COL_DEF.field) {\n      // When focus is on a nested input, keyboard events have no effect to avoid conflicts with native events.\n      // There is one exception for the checkBoxHeader\n      return;\n    }\n    const dimensions = apiRef.current.getRootDimensions();\n    if (!dimensions) {\n      return;\n    }\n    const viewportPageSize = apiRef.current.unstable_getViewportPageSize();\n    const colIndexBefore = params.field ? apiRef.current.getColumnIndex(params.field) : 0;\n    const firstRowIndexInPage = 0;\n    const lastRowIndexInPage = currentPageRows.length - 1;\n    const firstColIndex = 0;\n    const lastColIndex = gridVisibleColumnDefinitionsSelector(apiRef).length - 1;\n    let shouldPreventDefault = true;\n    switch (event.key) {\n      case 'ArrowDown':\n        {\n          if (firstRowIndexInPage !== null) {\n            goToCell(colIndexBefore, getRowIdFromIndex(firstRowIndexInPage));\n          }\n          break;\n        }\n      case 'ArrowRight':\n        {\n          if (colIndexBefore < lastColIndex) {\n            goToHeader(colIndexBefore + 1, event);\n          }\n          break;\n        }\n      case 'ArrowLeft':\n        {\n          if (colIndexBefore > firstColIndex) {\n            goToHeader(colIndexBefore - 1, event);\n          }\n          break;\n        }\n      case 'PageDown':\n        {\n          if (firstRowIndexInPage !== null && lastRowIndexInPage !== null) {\n            goToCell(colIndexBefore, getRowIdFromIndex(Math.min(firstRowIndexInPage + viewportPageSize, lastRowIndexInPage)));\n          }\n          break;\n        }\n      case 'Home':\n        {\n          goToHeader(firstColIndex, event);\n          break;\n        }\n      case 'End':\n        {\n          goToHeader(lastColIndex, event);\n          break;\n        }\n      case 'Enter':\n        {\n          if (event.ctrlKey || event.metaKey) {\n            apiRef.current.toggleColumnMenu(params.field);\n          }\n          break;\n        }\n      case ' ':\n        {\n          // prevent Space event from scrolling\n          break;\n        }\n      default:\n        {\n          shouldPreventDefault = false;\n        }\n    }\n    if (shouldPreventDefault) {\n      event.preventDefault();\n    }\n  }, [apiRef, currentPageRows, goToCell, goToHeader, getRowIdFromIndex]);\n  const handleCellKeyDown = React.useCallback((params, event) => {\n    // Ignore portal\n    if (!event.currentTarget.contains(event.target)) {\n      return;\n    } // Get the most recent params because the cell mode may have changed by another listener\n\n    const cellParams = apiRef.current.getCellParams(params.id, params.field);\n    if (cellParams.cellMode !== GridCellModes.Edit && isNavigationKey(event.key)) {\n      apiRef.current.publishEvent('cellNavigationKeyDown', cellParams, event);\n    }\n  }, [apiRef]);\n  useGridApiEventHandler(apiRef, 'cellNavigationKeyDown', handleCellNavigationKeyDown);\n  useGridApiEventHandler(apiRef, 'columnHeaderKeyDown', handleColumnHeaderKeyDown);\n  useGridApiEventHandler(apiRef, 'cellKeyDown', handleCellKeyDown);\n};","// Can't import from pro package - hence duplication\nexport const GRID_DETAIL_PANEL_TOGGLE_FIELD = '__detail_panel_toggle__';","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"rowsBeforePartialUpdates\"];\nimport { gridPinnedRowsSelector } from './gridRowsSelector';\n/**\n * A helper function to check if the id provided is valid.\n * @param {GridRowId} id Id as [[GridRowId]].\n * @param {GridRowModel | Partial<GridRowModel>} row Row as [[GridRowModel]].\n * @param {string} detailErrorMessage A custom error message to display for invalid IDs\n */\n\nexport function checkGridRowIdIsValid(id, row) {\n  let detailErrorMessage = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'A row was provided without id in the rows prop:';\n  if (id == null) {\n    throw new Error(['MUI: The data grid component requires all rows to have a unique `id` property.', 'Alternatively, you can use the `getRowId` prop to specify a custom id for each row.', detailErrorMessage, JSON.stringify(row)].join('\\n'));\n  }\n}\nexport const getRowIdFromRowModel = (rowModel, getRowId, detailErrorMessage) => {\n  const id = getRowId ? getRowId(rowModel) : rowModel.id;\n  checkGridRowIdIsValid(id, rowModel, detailErrorMessage);\n  return id;\n};\nexport const createRowsInternalCache = _ref => {\n  let {\n    rows,\n    getRowId,\n    loading,\n    rowCount\n  } = _ref;\n  const cache = {\n    rowsBeforePartialUpdates: rows,\n    loadingPropBeforePartialUpdates: loading,\n    rowCountPropBeforePartialUpdates: rowCount,\n    idRowsLookup: {},\n    idToIdLookup: {},\n    ids: []\n  };\n  for (let i = 0; i < rows.length; i += 1) {\n    const row = rows[i];\n    const id = getRowIdFromRowModel(row, getRowId);\n    cache.idRowsLookup[id] = row;\n    cache.idToIdLookup[id] = id;\n    cache.ids.push(id);\n  }\n  return cache;\n};\nexport const getRowsStateFromCache = _ref2 => {\n  let {\n    apiRef,\n    previousTree,\n    rowCountProp,\n    loadingProp\n  } = _ref2;\n  const _apiRef$current$unsta = apiRef.current.unstable_caches.rows,\n    cacheForGrouping = _objectWithoutPropertiesLoose(_apiRef$current$unsta, _excluded);\n  const rowCount = rowCountProp != null ? rowCountProp : 0;\n  const groupingResponse = apiRef.current.unstable_applyStrategyProcessor('rowTreeCreation', _extends({}, cacheForGrouping, {\n    previousTree\n  }));\n  const processedGroupingResponse = apiRef.current.unstable_applyPipeProcessors('hydrateRows', groupingResponse);\n  const dataTopLevelRowCount = processedGroupingResponse.treeDepth === 1 ? processedGroupingResponse.ids.length : Object.values(processedGroupingResponse.tree).filter(node => node.parent == null && !node.isPinned).length;\n  return _extends({}, processedGroupingResponse, {\n    groupingResponseBeforeRowHydration: groupingResponse,\n    loading: loadingProp,\n    totalRowCount: Math.max(rowCount, processedGroupingResponse.ids.length),\n    totalTopLevelRowCount: Math.max(rowCount, dataTopLevelRowCount)\n  });\n};\nexport const getTreeNodeDescendants = (tree, parentId, skipAutoGeneratedRows) => {\n  var _tree$parentId;\n  const children = (_tree$parentId = tree[parentId]) == null ? void 0 : _tree$parentId.children;\n  if (children == null) {\n    return [];\n  }\n  const validDescendants = [];\n  for (let i = 0; i < children.length; i += 1) {\n    const child = children[i];\n    const childNode = tree[child];\n    if (!skipAutoGeneratedRows || !childNode.isAutoGenerated) {\n      validDescendants.push(child);\n    }\n    validDescendants.push(...getTreeNodeDescendants(tree, childNode.id, skipAutoGeneratedRows));\n  }\n  return validDescendants;\n};\nexport function calculatePinnedRowsHeight(apiRef) {\n  var _pinnedRows$top, _pinnedRows$bottom;\n  const pinnedRows = gridPinnedRowsSelector(apiRef);\n  const topPinnedRowsHeight = (pinnedRows == null ? void 0 : (_pinnedRows$top = pinnedRows.top) == null ? void 0 : _pinnedRows$top.reduce((acc, value) => {\n    acc += apiRef.current.unstable_getRowHeight(value.id);\n    return acc;\n  }, 0)) || 0;\n  const bottomPinnedRowsHeight = (pinnedRows == null ? void 0 : (_pinnedRows$bottom = pinnedRows.bottom) == null ? void 0 : _pinnedRows$bottom.reduce((acc, value) => {\n    acc += apiRef.current.unstable_getRowHeight(value.id);\n    return acc;\n  }, 0)) || 0;\n  return {\n    top: topPinnedRowsHeight,\n    bottom: bottomPinnedRowsHeight\n  };\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridLogger, useGridApiMethod, useGridApiEventHandler, useGridSelector } from '../../utils';\nimport { gridPageSizeSelector } from './gridPaginationSelector';\nimport { gridDensityRowHeightSelector } from '../density';\nimport { useGridRegisterPipeProcessor } from '../../core/pipeProcessing';\nimport { calculatePinnedRowsHeight } from '../rows/gridRowsUtils';\nexport const defaultPageSize = autoPageSize => autoPageSize ? 0 : 100;\nconst mergeStateWithPageSize = pageSize => state => _extends({}, state, {\n  pagination: _extends({}, state.pagination, {\n    pageSize\n  })\n});\n/**\n * @requires useGridDimensions (event) - can be after\n */\n\nexport const useGridPageSize = (apiRef, props) => {\n  var _props$initialState2, _props$initialState2$;\n  const logger = useGridLogger(apiRef, 'useGridPageSize');\n  const rowHeight = useGridSelector(apiRef, gridDensityRowHeightSelector);\n  apiRef.current.unstable_registerControlState({\n    stateId: 'pageSize',\n    propModel: props.pageSize,\n    propOnChange: props.onPageSizeChange,\n    stateSelector: gridPageSizeSelector,\n    changeEvent: 'pageSizeChange'\n  });\n  /**\n   * API METHODS\n   */\n\n  const setPageSize = React.useCallback(pageSize => {\n    if (pageSize === gridPageSizeSelector(apiRef)) {\n      return;\n    }\n    logger.debug(`Setting page size to ${pageSize}`);\n    apiRef.current.setState(mergeStateWithPageSize(pageSize));\n    apiRef.current.forceUpdate();\n  }, [apiRef, logger]);\n  const pageSizeApi = {\n    setPageSize\n  };\n  useGridApiMethod(apiRef, pageSizeApi, 'GridPageSizeApi');\n  /**\n   * PRE-PROCESSING\n   */\n\n  const stateExportPreProcessing = React.useCallback((prevState, context) => {\n    var _props$initialState, _props$initialState$p;\n    const pageSizeToExport = gridPageSizeSelector(apiRef);\n    const shouldExportPageSize =\n    // Always export if the `exportOnlyDirtyModels` property is activated\n    !context.exportOnlyDirtyModels ||\n    // Always export if the page size is controlled\n    props.pageSize != null ||\n    // Always export if the page size has been initialized\n    ((_props$initialState = props.initialState) == null ? void 0 : (_props$initialState$p = _props$initialState.pagination) == null ? void 0 : _props$initialState$p.pageSize) != null ||\n    // Export if the page size is not equal to the default value\n    pageSizeToExport !== defaultPageSize(props.autoPageSize);\n    if (!shouldExportPageSize) {\n      return prevState;\n    }\n    return _extends({}, prevState, {\n      pagination: _extends({}, prevState.pagination, {\n        pageSize: pageSizeToExport\n      })\n    });\n  }, [apiRef, props.pageSize, (_props$initialState2 = props.initialState) == null ? void 0 : (_props$initialState2$ = _props$initialState2.pagination) == null ? void 0 : _props$initialState2$.pageSize, props.autoPageSize]);\n  /**\n   * TODO: Add error if `prop.autoHeight = true`\n   */\n\n  const stateRestorePreProcessing = React.useCallback((params, context) => {\n    var _context$stateToResto;\n    const pageSize = (_context$stateToResto = context.stateToRestore.pagination) == null ? void 0 : _context$stateToResto.pageSize;\n    if (pageSize != null) {\n      apiRef.current.setState(mergeStateWithPageSize(pageSize));\n    }\n    return params;\n  }, [apiRef]);\n  useGridRegisterPipeProcessor(apiRef, 'exportState', stateExportPreProcessing);\n  useGridRegisterPipeProcessor(apiRef, 'restoreState', stateRestorePreProcessing);\n  /**\n   * EVENTS\n   */\n\n  const handleUpdateAutoPageSize = React.useCallback(() => {\n    const dimensions = apiRef.current.getRootDimensions();\n    if (!props.autoPageSize || !dimensions) {\n      return;\n    }\n    const pinnedRowsHeight = calculatePinnedRowsHeight(apiRef);\n    const maximumPageSizeWithoutScrollBar = Math.floor((dimensions.viewportInnerSize.height - pinnedRowsHeight.top - pinnedRowsHeight.bottom) / rowHeight);\n    apiRef.current.setPageSize(maximumPageSizeWithoutScrollBar);\n  }, [apiRef, props.autoPageSize, rowHeight]);\n  useGridApiEventHandler(apiRef, 'viewportInnerSizeChange', handleUpdateAutoPageSize);\n  /**\n   * EFFECTS\n   */\n\n  React.useEffect(() => {\n    if (props.pageSize != null && !props.autoPageSize) {\n      apiRef.current.setPageSize(props.pageSize);\n    }\n  }, [apiRef, props.autoPageSize, props.pageSize]);\n  React.useEffect(() => {\n    handleUpdateAutoPageSize();\n  }, [handleUpdateAutoPageSize]);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridLogger, useGridSelector, useGridApiMethod, useGridApiEventHandler } from '../../utils';\nimport { gridVisibleTopLevelRowCountSelector } from '../filter';\nimport { gridPageSelector, gridPageSizeSelector } from './gridPaginationSelector';\nimport { useGridRegisterPipeProcessor } from '../../core/pipeProcessing';\nimport { buildWarning } from '../../../utils/warning';\nexport const getPageCount = (rowCount, pageSize) => {\n  if (pageSize > 0 && rowCount > 0) {\n    return Math.ceil(rowCount / pageSize);\n  }\n  return 0;\n};\nconst applyValidPage = paginationState => {\n  if (!paginationState.pageCount) {\n    return paginationState;\n  }\n  return _extends({}, paginationState, {\n    page: Math.max(Math.min(paginationState.page, paginationState.pageCount - 1), 0)\n  });\n};\nconst mergeStateWithPage = page => state => _extends({}, state, {\n  pagination: applyValidPage(_extends({}, state.pagination, {\n    page\n  }))\n});\nconst noRowCountInServerMode = buildWarning([\"MUI: the 'rowCount' prop is undefined while using paginationMode='server'\", 'For more detail, see http://mui.com/components/data-grid/pagination/#basic-implementation'], 'error');\n/**\n * @requires useGridPageSize (event)\n */\n\nexport const useGridPage = (apiRef, props) => {\n  var _props$initialState2, _props$initialState2$;\n  const logger = useGridLogger(apiRef, 'useGridPage');\n  const visibleTopLevelRowCount = useGridSelector(apiRef, gridVisibleTopLevelRowCountSelector);\n  apiRef.current.unstable_registerControlState({\n    stateId: 'page',\n    propModel: props.page,\n    propOnChange: props.onPageChange,\n    stateSelector: gridPageSelector,\n    changeEvent: 'pageChange'\n  });\n  /**\n   * API METHODS\n   */\n\n  const setPage = React.useCallback(page => {\n    logger.debug(`Setting page to ${page}`);\n    apiRef.current.setState(mergeStateWithPage(page));\n    apiRef.current.forceUpdate();\n  }, [apiRef, logger]);\n  const pageApi = {\n    setPage\n  };\n  useGridApiMethod(apiRef, pageApi, 'GridPageApi');\n  /**\n   * PRE-PROCESSING\n   */\n\n  const stateExportPreProcessing = React.useCallback((prevState, context) => {\n    var _props$initialState, _props$initialState$p;\n    const pageToExport = gridPageSelector(apiRef);\n    const shouldExportPage =\n    // Always export if the `exportOnlyDirtyModels` property is activated\n    !context.exportOnlyDirtyModels ||\n    // Always export if the page is controlled\n    props.page != null ||\n    // Always export if the page has been initialized\n    ((_props$initialState = props.initialState) == null ? void 0 : (_props$initialState$p = _props$initialState.pagination) == null ? void 0 : _props$initialState$p.page) != null ||\n    // Export if the page is not equal to the default value\n    pageToExport !== 0;\n    if (!shouldExportPage) {\n      return prevState;\n    }\n    return _extends({}, prevState, {\n      pagination: _extends({}, prevState.pagination, {\n        page: pageToExport\n      })\n    });\n  }, [apiRef, props.page, (_props$initialState2 = props.initialState) == null ? void 0 : (_props$initialState2$ = _props$initialState2.pagination) == null ? void 0 : _props$initialState2$.page]);\n  const stateRestorePreProcessing = React.useCallback((params, context) => {\n    var _context$stateToResto, _context$stateToResto2;\n\n    // We apply the constraint even if the page did not change in case the pageSize changed.\n    const page = (_context$stateToResto = (_context$stateToResto2 = context.stateToRestore.pagination) == null ? void 0 : _context$stateToResto2.page) != null ? _context$stateToResto : gridPageSelector(apiRef);\n    apiRef.current.setState(mergeStateWithPage(page));\n    return params;\n  }, [apiRef]);\n  useGridRegisterPipeProcessor(apiRef, 'exportState', stateExportPreProcessing);\n  useGridRegisterPipeProcessor(apiRef, 'restoreState', stateRestorePreProcessing);\n  /**\n   * EVENTS\n   */\n\n  const handlePageSizeChange = pageSize => {\n    apiRef.current.setState(state => {\n      const pageCount = getPageCount(state.pagination.rowCount, pageSize);\n      return _extends({}, state, {\n        pagination: applyValidPage(_extends({}, state.pagination, {\n          pageCount,\n          page: state.pagination.page\n        }))\n      });\n    });\n    apiRef.current.forceUpdate();\n  };\n  const handlePageChange = () => apiRef.current.scrollToIndexes({\n    rowIndex: gridPageSelector(apiRef) * gridPageSizeSelector(apiRef)\n  });\n  useGridApiEventHandler(apiRef, 'pageSizeChange', handlePageSizeChange);\n  useGridApiEventHandler(apiRef, 'pageChange', handlePageChange);\n  /**\n   * EFFECTS\n   */\n\n  React.useEffect(() => {\n    if (process.env.NODE_ENV !== 'production') {\n      if (props.paginationMode === 'server' && props.rowCount == null) {\n        noRowCountInServerMode();\n      }\n    }\n  }, [props.rowCount, props.paginationMode]);\n  React.useEffect(() => {\n    apiRef.current.setState(state => {\n      const rowCount = props.rowCount !== undefined ? props.rowCount : visibleTopLevelRowCount;\n      const pageCount = getPageCount(rowCount, state.pagination.pageSize);\n      const page = props.page == null ? state.pagination.page : props.page;\n      return _extends({}, state, {\n        pagination: applyValidPage(_extends({}, state.pagination, {\n          page,\n          rowCount,\n          pageCount\n        }))\n      });\n    });\n    apiRef.current.forceUpdate();\n  }, [visibleTopLevelRowCount, props.rowCount, props.page, props.paginationMode, apiRef]);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { useGridPageSize, defaultPageSize } from './useGridPageSize';\nimport { useGridPage, getPageCount } from './useGridPage';\nexport const paginationStateInitializer = (state, props) => {\n  var _props$initialState, _props$initialState$p, _ref, _props$page, _props$initialState2, _props$initialState2$, _props$rowCount, _props$rowCount2;\n  let pageSize;\n  if (props.pageSize != null) {\n    pageSize = props.pageSize;\n  } else if (((_props$initialState = props.initialState) == null ? void 0 : (_props$initialState$p = _props$initialState.pagination) == null ? void 0 : _props$initialState$p.pageSize) != null) {\n    pageSize = props.initialState.pagination.pageSize;\n  } else {\n    pageSize = defaultPageSize(props.autoPageSize);\n  }\n  return _extends({}, state, {\n    pagination: {\n      pageSize,\n      page: (_ref = (_props$page = props.page) != null ? _props$page : (_props$initialState2 = props.initialState) == null ? void 0 : (_props$initialState2$ = _props$initialState2.pagination) == null ? void 0 : _props$initialState2$.page) != null ? _ref : 0,\n      pageCount: getPageCount((_props$rowCount = props.rowCount) != null ? _props$rowCount : 0, pageSize),\n      rowCount: (_props$rowCount2 = props.rowCount) != null ? _props$rowCount2 : 0\n    }\n  });\n};\n/**\n * @requires useGridFilter (state)\n * @requires useGridDimensions (event) - can be after\n */\n\nexport const useGridPagination = (apiRef, props) => {\n  useGridPageSize(apiRef, props);\n  useGridPage(apiRef, props);\n};","export const gridPreferencePanelStateSelector = state => state.preferencePanel;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { useGridLogger } from '../../utils/useGridLogger';\nimport { useGridRegisterPipeProcessor } from '../../core/pipeProcessing';\nimport { gridPreferencePanelStateSelector } from './gridPreferencePanelSelector';\nexport const preferencePanelStateInitializer = (state, props) => {\n  var _props$initialState$p, _props$initialState;\n  return _extends({}, state, {\n    preferencePanel: (_props$initialState$p = (_props$initialState = props.initialState) == null ? void 0 : _props$initialState.preferencePanel) != null ? _props$initialState$p : {\n      open: false\n    }\n  });\n};\n/**\n * TODO: Add a single `setPreferencePanel` method to avoid multiple `setState`\n */\n\nexport const useGridPreferencesPanel = (apiRef, props) => {\n  var _props$initialState3;\n  const logger = useGridLogger(apiRef, 'useGridPreferencesPanel');\n  const hideTimeout = React.useRef();\n  const immediateTimeout = React.useRef();\n  /**\n   * API METHODS\n   */\n\n  const hidePreferences = React.useCallback(() => {\n    logger.debug('Hiding Preferences Panel');\n    const preferencePanelState = gridPreferencePanelStateSelector(apiRef.current.state);\n    if (preferencePanelState.openedPanelValue) {\n      apiRef.current.publishEvent('preferencePanelClose', {\n        openedPanelValue: preferencePanelState.openedPanelValue\n      });\n    }\n    apiRef.current.setState(state => _extends({}, state, {\n      preferencePanel: {\n        open: false\n      }\n    }));\n    apiRef.current.forceUpdate();\n  }, [apiRef, logger]); // This is to prevent the preferences from closing when you open a select box or another panel,\n  // The issue is in MUI core V4 => Fixed in V5\n\n  const doNotHidePanel = React.useCallback(() => {\n    immediateTimeout.current = setTimeout(() => clearTimeout(hideTimeout.current), 0);\n  }, []); // This is a hack for the issue with Core V4, by delaying hiding the panel on the clickAwayListener,\n  // we can cancel the action if the trigger element still need the panel...\n\n  const hidePreferencesDelayed = React.useCallback(() => {\n    hideTimeout.current = setTimeout(hidePreferences, 100);\n  }, [hidePreferences]);\n  const showPreferences = React.useCallback(newValue => {\n    logger.debug('Opening Preferences Panel');\n    doNotHidePanel();\n    apiRef.current.setState(state => _extends({}, state, {\n      preferencePanel: _extends({}, state.preferencePanel, {\n        open: true,\n        openedPanelValue: newValue\n      })\n    }));\n    apiRef.current.publishEvent('preferencePanelOpen', {\n      openedPanelValue: newValue\n    });\n    apiRef.current.forceUpdate();\n  }, [logger, doNotHidePanel, apiRef]);\n  useGridApiMethod(apiRef, {\n    showPreferences,\n    hidePreferences: hidePreferencesDelayed\n  }, 'ColumnMenuApi');\n  /**\n   * PRE-PROCESSING\n   */\n\n  const stateExportPreProcessing = React.useCallback((prevState, context) => {\n    var _props$initialState2;\n    const preferencePanelToExport = gridPreferencePanelStateSelector(apiRef.current.state);\n    const shouldExportPreferencePanel =\n    // Always export if the `exportOnlyDirtyModels` property is activated\n    !context.exportOnlyDirtyModels ||\n    // Always export if the panel was initialized\n    ((_props$initialState2 = props.initialState) == null ? void 0 : _props$initialState2.preferencePanel) != null ||\n    // Always export if the panel is opened\n    preferencePanelToExport.open;\n    if (!shouldExportPreferencePanel) {\n      return prevState;\n    }\n    return _extends({}, prevState, {\n      preferencePanel: preferencePanelToExport\n    });\n  }, [apiRef, (_props$initialState3 = props.initialState) == null ? void 0 : _props$initialState3.preferencePanel]);\n  const stateRestorePreProcessing = React.useCallback((params, context) => {\n    const preferencePanel = context.stateToRestore.preferencePanel;\n    if (preferencePanel != null) {\n      apiRef.current.setState(state => _extends({}, state, {\n        preferencePanel\n      }));\n    }\n    return params;\n  }, [apiRef]);\n  useGridRegisterPipeProcessor(apiRef, 'exportState', stateExportPreProcessing);\n  useGridRegisterPipeProcessor(apiRef, 'restoreState', stateRestorePreProcessing);\n  /**\n   * EFFECTS\n   */\n\n  React.useEffect(() => {\n    return () => {\n      clearTimeout(hideTimeout.current);\n      clearTimeout(immediateTimeout.current);\n    };\n  }, []);\n};","// TODO v6: rename to gridEditingStateSelector\nexport const gridEditRowsStateSelector = state => state.editRows;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useEventCallback } from '@mui/material/utils';\nimport { useGridApiOptionHandler, useGridApiEventHandler } from '../../utils/useGridApiEventHandler';\nimport { GridCellModes, GridEditModes } from '../../../models/gridEditRowModel';\nimport { isKeyboardEvent, isPrintableKey, isCellEnterEditModeKeys, isCellExitEditModeKeys, isCellEditCommitKeys, isDeleteKeys } from '../../../utils/keyboardUtils';\nimport { useGridLogger } from '../../utils/useGridLogger';\nimport { gridFocusCellSelector } from '../focus/gridFocusStateSelector';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { gridEditRowsStateSelector } from './gridEditRowsSelector';\nfunction isPromise(promise) {\n  return typeof promise.then === 'function';\n}\nexport const useCellEditing = (apiRef, props) => {\n  var _props$experimentalFe2;\n  const logger = useGridLogger(apiRef, 'useGridEditRows');\n  const buildCallback = callback => function () {\n    if (props.editMode === GridEditModes.Cell) {\n      callback(...arguments);\n    }\n  };\n  const setCellMode = React.useCallback((id, field, mode) => {\n    if (apiRef.current.getCellMode(id, field) === mode) {\n      return;\n    }\n    logger.debug(`Switching cell id: ${id} field: ${field} to mode: ${mode}`);\n    apiRef.current.setState(state => {\n      const newEditRowsState = _extends({}, state.editRows);\n      newEditRowsState[id] = _extends({}, newEditRowsState[id]);\n      if (mode === GridCellModes.Edit) {\n        newEditRowsState[id][field] = {\n          value: apiRef.current.getCellValue(id, field)\n        };\n      } else {\n        delete newEditRowsState[id][field];\n        if (!Object.keys(newEditRowsState[id]).length) {\n          delete newEditRowsState[id];\n        }\n      }\n      return _extends({}, state, {\n        editRows: newEditRowsState\n      });\n    });\n    apiRef.current.forceUpdate();\n    apiRef.current.publishEvent('cellModeChange', apiRef.current.getCellParams(id, field));\n  }, [apiRef, logger]);\n  const getCellMode = React.useCallback((id, field) => {\n    const editRowsState = gridEditRowsStateSelector(apiRef.current.state);\n    const isEditing = editRowsState[id] && editRowsState[id][field];\n    return isEditing ? GridCellModes.Edit : GridCellModes.View;\n  }, [apiRef]); // TODO v6: it should always return a promise\n\n  const commitCellChange = React.useCallback(function (params) {\n    let event = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var _props$experimentalFe;\n    const {\n      id,\n      field\n    } = params;\n    apiRef.current.unstable_runPendingEditCellValueMutation(id, field);\n    const model = apiRef.current.getEditRowsModel();\n    if (!model[id] || !model[id][field]) {\n      throw new Error(`MUI: Cell at id: ${id} and field: ${field} is not in edit mode.`);\n    }\n    const editCellProps = model[id][field];\n    const column = apiRef.current.getColumn(field);\n    const row = apiRef.current.getRow(id);\n    if ((_props$experimentalFe = props.experimentalFeatures) != null && _props$experimentalFe.preventCommitWhileValidating) {\n      const cellProps = model[id][field];\n      if (cellProps.isValidating || cellProps.error) {\n        return false;\n      }\n    }\n    const commitParams = _extends({}, params, {\n      value: editCellProps.value\n    });\n    let hasError = !!editCellProps.error;\n    if (!hasError && typeof column.preProcessEditCellProps === 'function') {\n      const result = column.preProcessEditCellProps({\n        id,\n        row,\n        props: editCellProps\n      });\n      if (isPromise(result)) {\n        return result.then(newEditCellProps => {\n          apiRef.current.unstable_setEditCellProps({\n            id,\n            field,\n            props: newEditCellProps\n          });\n          if (newEditCellProps.error) {\n            return false;\n          }\n          apiRef.current.publishEvent('cellEditCommit', commitParams, event);\n          return true;\n        });\n      }\n      apiRef.current.unstable_setEditCellProps({\n        id,\n        field,\n        props: result\n      });\n      hasError = !!result.error;\n    }\n    if (!hasError) {\n      apiRef.current.publishEvent('cellEditCommit', commitParams, event);\n      return true;\n    }\n    return false;\n  }, [apiRef, (_props$experimentalFe2 = props.experimentalFeatures) == null ? void 0 : _props$experimentalFe2.preventCommitWhileValidating]);\n  const setCellEditingEditCellValue = React.useCallback(params => {\n    const column = apiRef.current.getColumn(params.field);\n    const row = apiRef.current.getRow(params.id);\n    return new Promise(resolve => {\n      let newEditCellProps = {\n        value: params.value\n      };\n      const model = apiRef.current.getEditRowsModel();\n      const editCellProps = model[params.id][params.field];\n      if (typeof column.preProcessEditCellProps !== 'function') {\n        apiRef.current.unstable_setEditCellProps(_extends({}, params, {\n          props: newEditCellProps\n        }));\n        resolve(true);\n        return;\n      } // setEditCellProps runs the value parser and returns the updated props\n\n      newEditCellProps = apiRef.current.unstable_setEditCellProps(_extends({}, params, {\n        props: _extends({}, editCellProps, {\n          isValidating: true\n        })\n      }));\n      Promise.resolve(column.preProcessEditCellProps({\n        id: params.id,\n        row,\n        props: _extends({}, newEditCellProps, {\n          value: apiRef.current.unstable_parseValue(params.id, params.field, params.value)\n        })\n      })).then(newEditCellPropsProcessed => {\n        apiRef.current.unstable_setEditCellProps(_extends({}, params, {\n          props: _extends({}, newEditCellPropsProcessed, {\n            isValidating: false\n          })\n        }));\n        resolve(!newEditCellPropsProcessed.error);\n      });\n    });\n  }, [apiRef]);\n  const cellEditingApi = {\n    setCellMode,\n    getCellMode,\n    commitCellChange,\n    unstable_setCellEditingEditCellValue: setCellEditingEditCellValue\n  };\n  useGridApiMethod(apiRef, cellEditingApi, 'EditRowApi');\n  const handleCellKeyDown = React.useCallback(async (params, event) => {\n    // Wait until IME is settled for Asian languages like Japanese and Chinese\n    // TODO: `event.which` is depricated but this is a temporary workaround\n    if (event.which === 229) {\n      return;\n    }\n    const {\n      id,\n      field,\n      cellMode,\n      isEditable\n    } = params;\n    if (!isEditable) {\n      return;\n    }\n    const isEditMode = cellMode === GridCellModes.Edit;\n    const isModifierKeyPressed = event.ctrlKey || event.metaKey || event.altKey;\n    if (!isEditMode && isCellEnterEditModeKeys(event) && !isModifierKeyPressed && !(event.key === ' ' && event.shiftKey)) {\n      apiRef.current.publishEvent('cellEditStart', params, event);\n    }\n    if (!isEditMode && isDeleteKeys(event.key)) {\n      apiRef.current.setEditCellValue({\n        id,\n        field,\n        value: ''\n      });\n      apiRef.current.commitCellChange({\n        id,\n        field\n      }, event);\n      apiRef.current.publishEvent('cellEditStop', params, event);\n    }\n    if (isEditMode && isCellEditCommitKeys(event.key)) {\n      const commitParams = {\n        id,\n        field\n      };\n      const isValid = await apiRef.current.commitCellChange(commitParams, event);\n      if (!isValid) {\n        return;\n      }\n    }\n    if (isEditMode && isCellExitEditModeKeys(event.key)) {\n      apiRef.current.publishEvent('cellEditStop', params, event);\n    }\n  }, [apiRef]);\n  const handleCellDoubleClick = React.useCallback((params, event) => {\n    if (!params.isEditable) {\n      return;\n    }\n    apiRef.current.publishEvent('cellEditStart', params, event);\n  }, [apiRef]);\n  const commitPropsAndExit = async (params, event) => {\n    if (params.cellMode === GridCellModes.View) {\n      return;\n    }\n    await apiRef.current.commitCellChange(params, event);\n    apiRef.current.publishEvent('cellEditStop', params, event);\n  };\n  const handleCellFocusOut = useEventCallback((params, event) => {\n    commitPropsAndExit(params, event);\n  });\n  const handleColumnHeaderDragStart = useEventCallback(() => {\n    const cell = gridFocusCellSelector(apiRef);\n    if (!cell) {\n      return;\n    }\n    const params = apiRef.current.getCellParams(cell.id, cell.field);\n    commitPropsAndExit(params, {});\n  });\n  const handleCellEditStart = React.useCallback((params, event) => {\n    if (!params.isEditable) {\n      return;\n    }\n    apiRef.current.setCellMode(params.id, params.field, GridCellModes.Edit);\n    if (isKeyboardEvent(event) && isPrintableKey(event)) {\n      apiRef.current.unstable_setEditCellProps({\n        id: params.id,\n        field: params.field,\n        props: {\n          value: ''\n        }\n      });\n    }\n  }, [apiRef]);\n  const handleCellEditStop = React.useCallback((params, event) => {\n    apiRef.current.setCellMode(params.id, params.field, GridCellModes.View);\n    if (!isKeyboardEvent(event)) {\n      return;\n    }\n    if (isCellEditCommitKeys(event.key)) {\n      apiRef.current.publishEvent('cellNavigationKeyDown', params, event);\n      return;\n    }\n    if (event.key === 'Escape' || isDeleteKeys(event.key)) {\n      apiRef.current.setCellFocus(params.id, params.field);\n    }\n  }, [apiRef]);\n  const handleCellEditCommit = React.useCallback(params => {\n    const {\n      id,\n      field\n    } = params;\n    const model = apiRef.current.getEditRowsModel();\n    const {\n      value\n    } = model[id][field];\n    logger.debug(`Setting cell id: ${id} field: ${field} to value: ${value == null ? void 0 : value.toString()}`);\n    const row = apiRef.current.getRow(id);\n    if (row) {\n      const column = apiRef.current.getColumn(params.field);\n      let rowUpdate = _extends({}, row, {\n        [field]: value\n      });\n      if (column.valueSetter) {\n        rowUpdate = column.valueSetter({\n          row,\n          value\n        });\n      }\n      apiRef.current.updateRows([rowUpdate]);\n    }\n  }, [apiRef, logger]);\n  const handleEditCellPropsChange = React.useCallback(params => {\n    const row = apiRef.current.getRow(params.id);\n    const column = apiRef.current.getColumn(params.field);\n    const editCellProps = column.preProcessEditCellProps ? column.preProcessEditCellProps({\n      id: params.id,\n      row,\n      props: params.props\n    }) : params.props;\n    if (isPromise(editCellProps)) {\n      editCellProps.then(newEditCellProps => {\n        apiRef.current.unstable_setEditCellProps(_extends({}, params, {\n          props: newEditCellProps\n        }));\n      });\n    } else {\n      apiRef.current.unstable_setEditCellProps(_extends({}, params, {\n        props: editCellProps\n      }));\n    }\n  }, [apiRef]);\n  useGridApiEventHandler(apiRef, 'cellKeyDown', buildCallback(handleCellKeyDown));\n  useGridApiEventHandler(apiRef, 'cellDoubleClick', buildCallback(handleCellDoubleClick));\n  useGridApiEventHandler(apiRef, 'cellFocusOut', buildCallback(handleCellFocusOut));\n  useGridApiEventHandler(apiRef, 'columnHeaderDragStart', buildCallback(handleColumnHeaderDragStart));\n  useGridApiEventHandler(apiRef, 'cellEditStart', buildCallback(handleCellEditStart));\n  useGridApiEventHandler(apiRef, 'cellEditStop', buildCallback(handleCellEditStop));\n  useGridApiEventHandler(apiRef, 'cellEditCommit', buildCallback(handleCellEditCommit));\n  useGridApiEventHandler(apiRef, 'editCellPropsChange', buildCallback(handleEditCellPropsChange));\n  useGridApiOptionHandler(apiRef, 'cellEditCommit', props.onCellEditCommit);\n  useGridApiOptionHandler(apiRef, 'cellEditStart', props.onCellEditStart);\n  useGridApiOptionHandler(apiRef, 'cellEditStop', props.onCellEditStop);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { GridCellModes } from '../../../models/gridEditRowModel';\nimport { useGridApiEventHandler, useGridApiOptionHandler } from '../../utils/useGridApiEventHandler';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { useGridLogger } from '../../utils/useGridLogger';\nimport { gridEditRowsStateSelector } from './gridEditRowsSelector';\nimport { useCellEditing } from './useGridCellEditing.old';\nimport { useGridRowEditing } from './useGridRowEditing.old';\nexport const editingStateInitializer = state => _extends({}, state, {\n  editRows: {}\n});\n/**\n * @requires useGridFocus - can be after, async only\n * @requires useGridParamsApi (method)\n * @requires useGridColumns (state)\n */\n\nexport function useGridEditing(apiRef, props) {\n  var _props$experimentalFe2;\n  const logger = useGridLogger(apiRef, 'useGridEditRows');\n  useCellEditing(apiRef, props);\n  useGridRowEditing(apiRef, props);\n  const debounceMap = React.useRef({});\n  apiRef.current.unstable_registerControlState({\n    stateId: 'editRows',\n    propModel: props.editRowsModel,\n    propOnChange: props.onEditRowsModelChange,\n    stateSelector: gridEditRowsStateSelector,\n    changeEvent: 'editRowsModelChange'\n  });\n  const isCellEditable = React.useCallback(params => !params.rowNode.isAutoGenerated && !params.rowNode.isPinned && !!params.colDef.editable && !!params.colDef.renderEditCell && (!props.isCellEditable || props.isCellEditable(params)),\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  [props.isCellEditable]);\n  const maybeDebounce = (id, field, debounceMs, callback) => {\n    if (!debounceMs) {\n      callback();\n      return;\n    }\n    if (!debounceMap.current[id]) {\n      debounceMap.current[id] = {};\n    }\n    if (debounceMap.current[id][field]) {\n      const [timeout] = debounceMap.current[id][field];\n      clearTimeout(timeout);\n    }\n    const callbackToRunImmediately = () => {\n      callback();\n      const [timeout] = debounceMap.current[id][field];\n      clearTimeout(timeout);\n      delete debounceMap.current[id][field];\n    };\n    const timeout = setTimeout(() => {\n      callback();\n      delete debounceMap.current[id][field];\n    }, debounceMs);\n    debounceMap.current[id][field] = [timeout, callbackToRunImmediately];\n  };\n  const runPendingEditCellValueMutation = React.useCallback((id, field) => {\n    if (!debounceMap.current[id]) {\n      return;\n    }\n    if (!field) {\n      Object.keys(debounceMap.current[id]).forEach(debouncedField => {\n        const [, callback] = debounceMap.current[id][debouncedField];\n        callback();\n      });\n    } else if (debounceMap.current[id][field]) {\n      const [, callback] = debounceMap.current[id][field];\n      callback();\n    }\n  }, []);\n  const setEditCellValue = React.useCallback(function (params) {\n    let event = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    maybeDebounce(params.id, params.field, params.debounceMs, () => {\n      var _props$experimentalFe;\n      if ((_props$experimentalFe = props.experimentalFeatures) != null && _props$experimentalFe.preventCommitWhileValidating) {\n        if (props.editMode === 'row') {\n          return apiRef.current.unstable_setRowEditingEditCellValue(params);\n        }\n        return apiRef.current.unstable_setCellEditingEditCellValue(params);\n      }\n      const newParams = {\n        id: params.id,\n        field: params.field,\n        props: {\n          value: params.value\n        }\n      };\n      return apiRef.current.publishEvent('editCellPropsChange', newParams, event);\n    });\n  }, [apiRef, props.editMode, (_props$experimentalFe2 = props.experimentalFeatures) == null ? void 0 : _props$experimentalFe2.preventCommitWhileValidating]);\n  const parseValue = React.useCallback((id, field, value) => {\n    const column = apiRef.current.getColumn(field);\n    return column.valueParser ? column.valueParser(value, apiRef.current.getCellParams(id, field)) : value;\n  }, [apiRef]);\n  const setEditCellProps = React.useCallback(params => {\n    const {\n      id,\n      field,\n      props: editProps\n    } = params;\n    logger.debug(`Setting cell props on id: ${id} field: ${field}`);\n    apiRef.current.setState(state => {\n      const editRowsModel = _extends({}, state.editRows);\n      editRowsModel[id] = _extends({}, state.editRows[id]);\n      editRowsModel[id][field] = _extends({}, editProps, {\n        value: parseValue(id, field, editProps.value)\n      });\n      return _extends({}, state, {\n        editRows: editRowsModel\n      });\n    });\n    apiRef.current.forceUpdate();\n    const editRowsState = gridEditRowsStateSelector(apiRef.current.state);\n    return editRowsState[id][field];\n  }, [apiRef, logger, parseValue]);\n  const setEditRowsModel = React.useCallback(model => {\n    const currentModel = gridEditRowsStateSelector(apiRef.current.state);\n    if (currentModel !== model) {\n      logger.debug(`Setting editRows model`);\n      apiRef.current.setState(state => _extends({}, state, {\n        editRows: model\n      }));\n      apiRef.current.forceUpdate();\n    }\n  }, [apiRef, logger]);\n  const getEditRowsModel = React.useCallback(() => gridEditRowsStateSelector(apiRef.current.state), [apiRef]);\n  const preventTextSelection = React.useCallback((params, event) => {\n    const isMoreThanOneClick = event.detail > 1;\n    if (params.isEditable && params.cellMode === GridCellModes.View && isMoreThanOneClick) {\n      // If we click more than one time, then we prevent the default behavior of selecting the text cell.\n      event.preventDefault();\n    }\n  }, []);\n  useGridApiEventHandler(apiRef, 'cellMouseDown', preventTextSelection);\n  useGridApiOptionHandler(apiRef, 'editCellPropsChange', props.onEditCellPropsChange); // TODO v6: remove, use `preProcessEditCellProps` instead\n\n  const editingSharedApi = {\n    isCellEditable,\n    setEditRowsModel,\n    getEditRowsModel,\n    setEditCellValue,\n    unstable_setEditCellProps: setEditCellProps,\n    unstable_parseValue: parseValue,\n    unstable_runPendingEditCellValueMutation: runPendingEditCellValueMutation\n  };\n  useGridApiMethod(apiRef, editingSharedApi, 'EditRowApi');\n  React.useEffect(() => {\n    if (props.editRowsModel !== undefined) {\n      apiRef.current.setEditRowsModel(props.editRowsModel);\n    }\n  }, [apiRef, props.editRowsModel]);\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useEventCallback } from '@mui/material/utils';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { GridRowModes, GridEditModes, GridCellModes } from '../../../models/gridEditRowModel';\nimport { useGridSelector } from '../../utils/useGridSelector';\nimport { gridColumnDefinitionsSelector } from '../columns/gridColumnsSelector';\nimport { gridEditRowsStateSelector } from './gridEditRowsSelector';\nimport { gridFocusCellSelector } from '../focus/gridFocusStateSelector';\nimport { useGridApiOptionHandler, useGridApiEventHandler } from '../../utils/useGridApiEventHandler';\nexport const useGridRowEditing = (apiRef, props) => {\n  var _props$experimentalFe2, _props$experimentalFe4;\n  const focusTimeout = React.useRef(null);\n  const nextFocusedCell = React.useRef(null);\n  const columns = useGridSelector(apiRef, gridColumnDefinitionsSelector);\n  const buildCallback = callback => function () {\n    if (props.editMode === GridEditModes.Row) {\n      callback(...arguments);\n    }\n  };\n  const setRowMode = React.useCallback((id, mode) => {\n    if (mode === apiRef.current.getRowMode(id)) {\n      return;\n    }\n    apiRef.current.setState(state => {\n      const newEditRowsState = _extends({}, state.editRows);\n      if (mode === GridRowModes.Edit) {\n        newEditRowsState[id] = {};\n        columns.forEach(column => {\n          const cellParams = apiRef.current.getCellParams(id, column.field);\n          if (cellParams.isEditable) {\n            newEditRowsState[id][column.field] = {\n              value: cellParams.value\n            };\n          }\n        });\n      } else {\n        delete newEditRowsState[id];\n      }\n      return _extends({}, state, {\n        editRows: newEditRowsState\n      });\n    });\n    apiRef.current.forceUpdate();\n  }, [apiRef, columns]);\n  const getRowMode = React.useCallback(id => {\n    if (props.editMode === GridEditModes.Cell) {\n      return GridRowModes.View;\n    }\n    const editRowsState = gridEditRowsStateSelector(apiRef.current.state);\n    return editRowsState[id] ? GridRowModes.Edit : GridRowModes.View;\n  }, [apiRef, props.editMode]);\n  const commitRowChange = React.useCallback(function (id) {\n    let event = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var _props$experimentalFe;\n    if (props.editMode === GridEditModes.Cell) {\n      throw new Error(`MUI: You can't commit changes when the edit mode is 'cell'.`);\n    }\n    apiRef.current.unstable_runPendingEditCellValueMutation(id);\n    const model = apiRef.current.getEditRowsModel();\n    const editRowProps = model[id];\n    if (!editRowProps) {\n      throw new Error(`MUI: Row at id: ${id} is not being edited.`);\n    }\n    if ((_props$experimentalFe = props.experimentalFeatures) != null && _props$experimentalFe.preventCommitWhileValidating) {\n      const isValid = Object.keys(editRowProps).reduce((acc, field) => {\n        return acc && !editRowProps[field].isValidating && !editRowProps[field].error;\n      }, true);\n      if (!isValid) {\n        return false;\n      }\n    }\n    const hasFieldWithError = Object.values(editRowProps).some(value => !!value.error);\n    if (hasFieldWithError) {\n      return false;\n    }\n    const fieldsWithValidator = Object.keys(editRowProps).filter(field => {\n      const column = apiRef.current.getColumn(field);\n      return typeof column.preProcessEditCellProps === 'function';\n    });\n    if (fieldsWithValidator.length > 0) {\n      const row = apiRef.current.getRow(id);\n      const validatorErrors = fieldsWithValidator.map(async field => {\n        const column = apiRef.current.getColumn(field);\n        const newEditCellProps = await Promise.resolve(column.preProcessEditCellProps({\n          id,\n          row,\n          props: editRowProps[field]\n        }));\n        apiRef.current.unstable_setEditCellProps({\n          id,\n          field,\n          props: newEditCellProps\n        });\n        return newEditCellProps.error;\n      });\n      return Promise.all(validatorErrors).then(errors => {\n        if (errors.some(error => !!error)) {\n          return false;\n        }\n        apiRef.current.publishEvent('rowEditCommit', id, event);\n        return true;\n      });\n    }\n    apiRef.current.publishEvent('rowEditCommit', id, event);\n    return true;\n  }, [apiRef, props.editMode, (_props$experimentalFe2 = props.experimentalFeatures) == null ? void 0 : _props$experimentalFe2.preventCommitWhileValidating]);\n  const setRowEditingEditCellValue = React.useCallback(params => {\n    const model = apiRef.current.getEditRowsModel();\n    const editRow = model[params.id];\n    const row = apiRef.current.getRow(params.id);\n    let isValid = true;\n    return new Promise(resolve => {\n      Object.keys(editRow).forEach(async field => {\n        const column = apiRef.current.getColumn(field);\n        let editCellProps = field === params.field ? {\n          value: params.value\n        } : editRow[field]; // setEditCellProps runs the value parser and returns the updated props\n\n        editCellProps = apiRef.current.unstable_setEditCellProps({\n          id: params.id,\n          field,\n          props: _extends({}, editCellProps, {\n            isValidating: true\n          })\n        });\n        if (column.preProcessEditCellProps) {\n          editCellProps = await Promise.resolve(column.preProcessEditCellProps({\n            id: params.id,\n            row,\n            props: _extends({}, editCellProps, {\n              value: field === params.field ? apiRef.current.unstable_parseValue(params.id, field, params.value) : editCellProps.value\n            })\n          }));\n        }\n        if (editCellProps.error) {\n          isValid = false;\n        }\n        apiRef.current.unstable_setEditCellProps({\n          id: params.id,\n          field,\n          props: _extends({}, editCellProps, {\n            isValidating: false\n          })\n        });\n      });\n      resolve(isValid);\n    });\n  }, [apiRef]);\n  const rowEditingApi = {\n    setRowMode,\n    getRowMode,\n    commitRowChange,\n    unstable_setRowEditingEditCellValue: setRowEditingEditCellValue\n  };\n  useGridApiMethod(apiRef, rowEditingApi, 'EditRowApi');\n  const handleCellKeyDown = React.useCallback(async (params, event) => {\n    // Wait until IME is settled for Asian languages like Japanese and Chinese\n    // TODO: `event.which` is depricated but this is a temporary workaround\n    if (event.which === 229) {\n      return;\n    }\n    const {\n      cellMode,\n      isEditable\n    } = params;\n    if (!isEditable) {\n      return;\n    }\n    const isEditMode = cellMode === GridCellModes.Edit;\n    const rowParams = apiRef.current.getRowParams(params.id);\n    if (isEditMode) {\n      if (event.key === 'Enter') {\n        var _props$experimentalFe3;\n\n        // TODO: check the return before firing 'rowEditStop'\n        // On cell editing, it won't exits the edit mode with error\n        const isValid = await apiRef.current.commitRowChange(params.id);\n        if (!isValid && (_props$experimentalFe3 = props.experimentalFeatures) != null && _props$experimentalFe3.preventCommitWhileValidating) {\n          return;\n        }\n        apiRef.current.publishEvent('rowEditStop', rowParams, event);\n      } else if (event.key === 'Escape') {\n        apiRef.current.publishEvent('rowEditStop', rowParams, event);\n      }\n    } else if (event.key === 'Enter') {\n      apiRef.current.publishEvent('rowEditStart', rowParams, event);\n    }\n  }, [apiRef, (_props$experimentalFe4 = props.experimentalFeatures) == null ? void 0 : _props$experimentalFe4.preventCommitWhileValidating]);\n  const handleCellDoubleClick = React.useCallback((params, event) => {\n    if (!params.isEditable) {\n      return;\n    }\n    const rowParams = apiRef.current.getRowParams(params.id);\n    apiRef.current.publishEvent('rowEditStart', rowParams, event);\n  }, [apiRef]);\n  const handleEditCellPropsChange = React.useCallback(params => {\n    const row = apiRef.current.getRow(params.id);\n    const model = apiRef.current.getEditRowsModel();\n    const editRow = model[params.id];\n    Object.keys(editRow).forEach(async field => {\n      const column = apiRef.current.getColumn(field);\n      if (column.preProcessEditCellProps) {\n        const editCellProps = field === params.field ? params.props : editRow[field];\n        const newEditCellProps = await Promise.resolve(column.preProcessEditCellProps({\n          id: params.id,\n          row,\n          props: editCellProps\n        }));\n        apiRef.current.unstable_setEditCellProps({\n          id: params.id,\n          field,\n          props: newEditCellProps\n        });\n      } else if (field === params.field) {\n        apiRef.current.unstable_setEditCellProps(params);\n      }\n    });\n  }, [apiRef]);\n  const handleRowEditStart = React.useCallback(params => {\n    apiRef.current.setRowMode(params.id, GridRowModes.Edit);\n  }, [apiRef]);\n  const handleRowEditStop = React.useCallback((params, event) => {\n    apiRef.current.setRowMode(params.id, GridRowModes.View);\n    if (event.key === 'Enter') {\n      apiRef.current.publishEvent('cellNavigationKeyDown', params, event);\n    }\n  }, [apiRef]);\n  const handleRowEditCommit = React.useCallback(id => {\n    const model = apiRef.current.getEditRowsModel();\n    const editRow = model[id];\n    if (!editRow) {\n      throw new Error(`MUI: Row at id: ${id} is not being edited.`);\n    }\n    const row = apiRef.current.getRow(id);\n    if (row) {\n      let rowUpdate = _extends({}, row);\n      Object.keys(editRow).forEach(field => {\n        const column = apiRef.current.getColumn(field);\n        const value = editRow[field].value;\n        if (column.valueSetter) {\n          rowUpdate = column.valueSetter({\n            row: rowUpdate,\n            value\n          });\n        } else {\n          rowUpdate[field] = value;\n        }\n      });\n      apiRef.current.updateRows([rowUpdate]);\n    }\n  }, [apiRef]);\n  const handleCellFocusIn = React.useCallback(params => {\n    nextFocusedCell.current = params;\n  }, []);\n  const commitPropsAndExit = async (params, event) => {\n    if (params.cellMode === GridCellModes.View) {\n      return;\n    }\n    nextFocusedCell.current = null;\n    focusTimeout.current = setTimeout(async () => {\n      var _nextFocusedCell$curr;\n      if (((_nextFocusedCell$curr = nextFocusedCell.current) == null ? void 0 : _nextFocusedCell$curr.id) !== params.id) {\n        await apiRef.current.commitRowChange(params.id, event);\n        const rowParams = apiRef.current.getRowParams(params.id);\n        apiRef.current.publishEvent('rowEditStop', rowParams, event);\n      }\n    });\n  };\n  const handleCellFocusOut = useEventCallback((params, event) => {\n    commitPropsAndExit(params, event);\n  });\n  const handleColumnHeaderDragStart = useEventCallback(() => {\n    const cell = gridFocusCellSelector(apiRef);\n    if (!cell) {\n      return;\n    }\n    const params = apiRef.current.getCellParams(cell.id, cell.field);\n    commitPropsAndExit(params, {});\n  });\n  useGridApiEventHandler(apiRef, 'cellKeyDown', buildCallback(handleCellKeyDown));\n  useGridApiEventHandler(apiRef, 'cellDoubleClick', buildCallback(handleCellDoubleClick));\n  useGridApiEventHandler(apiRef, 'editCellPropsChange', buildCallback(handleEditCellPropsChange));\n  useGridApiEventHandler(apiRef, 'rowEditStart', buildCallback(handleRowEditStart));\n  useGridApiEventHandler(apiRef, 'rowEditStop', buildCallback(handleRowEditStop));\n  useGridApiEventHandler(apiRef, 'rowEditCommit', buildCallback(handleRowEditCommit));\n  useGridApiEventHandler(apiRef, 'cellFocusIn', buildCallback(handleCellFocusIn));\n  useGridApiEventHandler(apiRef, 'cellFocusOut', buildCallback(handleCellFocusOut));\n  useGridApiEventHandler(apiRef, 'columnHeaderDragStart', buildCallback(handleColumnHeaderDragStart));\n  useGridApiOptionHandler(apiRef, 'rowEditCommit', props.onRowEditCommit);\n  useGridApiOptionHandler(apiRef, 'rowEditStart', props.onRowEditStart);\n  useGridApiOptionHandler(apiRef, 'rowEditStop', props.onRowEditStop);\n};","// TODO v6 - remove\n\n/**\n * Params passed to `apiRef.current.setEditCellValue`.\n */\n// TODO v6 - remove\n// TODO v6 - remove\nvar GridCellEditStartReasons;\n/**\n * Params passed to the `cellEditStart` event.\n */\n\n(function (GridCellEditStartReasons) {\n  GridCellEditStartReasons[\"enterKeyDown\"] = \"enterKeyDown\";\n  GridCellEditStartReasons[\"cellDoubleClick\"] = \"cellDoubleClick\";\n  GridCellEditStartReasons[\"printableKeyDown\"] = \"printableKeyDown\";\n  GridCellEditStartReasons[\"deleteKeyDown\"] = \"deleteKeyDown\";\n})(GridCellEditStartReasons || (GridCellEditStartReasons = {}));\nvar GridCellEditStopReasons;\n/**\n * Params passed to the `cellEditStop event.\n */\n\n(function (GridCellEditStopReasons) {\n  GridCellEditStopReasons[\"cellFocusOut\"] = \"cellFocusOut\";\n  GridCellEditStopReasons[\"escapeKeyDown\"] = \"escapeKeyDown\";\n  GridCellEditStopReasons[\"enterKeyDown\"] = \"enterKeyDown\";\n  GridCellEditStopReasons[\"tabKeyDown\"] = \"tabKeyDown\";\n  GridCellEditStopReasons[\"shiftTabKeyDown\"] = \"shiftTabKeyDown\";\n})(GridCellEditStopReasons || (GridCellEditStopReasons = {}));\n\n// https://github.com/mui/mui-x/pull/3738#discussion_r798504277\nexport { GridCellEditStartReasons, GridCellEditStopReasons };","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _toPropertyKey from \"@babel/runtime/helpers/esm/toPropertyKey\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"id\", \"field\"],\n  _excluded2 = [\"id\", \"field\"];\nimport * as React from 'react';\nimport { unstable_useEventCallback as useEventCallback } from '@mui/utils';\nimport { useGridApiEventHandler, useGridApiOptionHandler, GridSignature } from '../../utils/useGridApiEventHandler';\nimport { GridEditModes, GridCellModes } from '../../../models/gridEditRowModel';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { gridEditRowsStateSelector } from './gridEditRowsSelector';\nimport { isPrintableKey } from '../../../utils/keyboardUtils';\nimport { buildWarning } from '../../../utils/warning';\nimport { gridRowsIdToIdLookupSelector } from '../rows/gridRowsSelector';\nimport { deepClone } from '../../../utils/utils';\nimport { GridCellEditStartReasons, GridCellEditStopReasons } from '../../../models/params/gridEditCellParams';\nconst missingOnProcessRowUpdateErrorWarning = buildWarning(['MUI: A call to `processRowUpdate` threw an error which was not handled because `onProcessRowUpdateError` is missing.', 'To handle the error pass a callback to the `onProcessRowUpdateError` prop, e.g. `<DataGrid onProcessRowUpdateError={(error) => ...} />`.', 'For more detail, see http://mui.com/components/data-grid/editing/#persistence.'], 'error');\nexport const useGridCellEditing = (apiRef, props) => {\n  const [cellModesModel, setCellModesModel] = React.useState({});\n  const cellModesModelRef = React.useRef(cellModesModel);\n  const prevCellModesModel = React.useRef({});\n  const {\n    processRowUpdate,\n    onProcessRowUpdateError,\n    cellModesModel: cellModesModelProp,\n    onCellModesModelChange,\n    signature\n  } = props;\n  const runIfEditModeIsCell = callback => function () {\n    if (props.editMode === GridEditModes.Cell) {\n      callback(...arguments);\n    }\n  };\n  const throwIfNotEditable = React.useCallback((id, field) => {\n    const params = apiRef.current.getCellParams(id, field);\n    if (!apiRef.current.isCellEditable(params)) {\n      throw new Error(`MUI: The cell with id=${id} and field=${field} is not editable.`);\n    }\n  }, [apiRef]);\n  const throwIfNotInMode = React.useCallback((id, field, mode) => {\n    if (apiRef.current.getCellMode(id, field) !== mode) {\n      throw new Error(`MUI: The cell with id=${id} and field=${field} is not in ${mode} mode.`);\n    }\n  }, [apiRef]);\n  const handleCellDoubleClick = React.useCallback((params, event) => {\n    if (!params.isEditable) {\n      return;\n    }\n    if (params.cellMode === GridCellModes.Edit) {\n      return;\n    }\n    const newParams = _extends({}, params, {\n      reason: GridCellEditStartReasons.cellDoubleClick\n    });\n    apiRef.current.publishEvent('cellEditStart', newParams, event);\n  }, [apiRef]);\n  const handleCellFocusOut = React.useCallback((params, event) => {\n    if (params.cellMode === GridCellModes.View) {\n      return;\n    }\n    if (apiRef.current.getCellMode(params.id, params.field) === GridCellModes.View) {\n      return;\n    }\n    const newParams = _extends({}, params, {\n      reason: GridCellEditStopReasons.cellFocusOut\n    });\n    apiRef.current.publishEvent('cellEditStop', newParams, event);\n  }, [apiRef]);\n  const handleCellKeyDown = React.useCallback((params, event) => {\n    if (params.cellMode === GridCellModes.Edit) {\n      // Wait until IME is settled for Asian languages like Japanese and Chinese\n      // TODO: `event.which` is depricated but this is a temporary workaround\n      if (event.which === 229) {\n        return;\n      }\n      let reason;\n      if (event.key === 'Escape') {\n        reason = GridCellEditStopReasons.escapeKeyDown;\n      } else if (event.key === 'Enter') {\n        reason = GridCellEditStopReasons.enterKeyDown;\n      } else if (event.key === 'Tab') {\n        reason = event.shiftKey ? GridCellEditStopReasons.shiftTabKeyDown : GridCellEditStopReasons.tabKeyDown;\n        event.preventDefault(); // Prevent going to the next element in the tab sequence\n      }\n      if (reason) {\n        const newParams = _extends({}, params, {\n          reason\n        });\n        apiRef.current.publishEvent('cellEditStop', newParams, event);\n      }\n    } else if (params.isEditable) {\n      let reason;\n      if (event.key === ' ' && event.shiftKey) {\n        return; // Shift + Space is used to select the row\n      }\n      if (isPrintableKey(event)) {\n        reason = GridCellEditStartReasons.printableKeyDown;\n      } else if ((event.ctrlKey || event.metaKey) && event.key === 'v') {\n        reason = GridCellEditStartReasons.printableKeyDown;\n      } else if (event.key === 'Enter') {\n        reason = GridCellEditStartReasons.enterKeyDown;\n      } else if (event.key === 'Delete' || event.key === 'Backspace') {\n        // Delete on Windows, Backspace on macOS\n        reason = GridCellEditStartReasons.deleteKeyDown;\n      }\n      if (reason) {\n        const newParams = _extends({}, params, {\n          reason,\n          key: event.key\n        });\n        apiRef.current.publishEvent('cellEditStart', newParams, event);\n      }\n    }\n  }, [apiRef]);\n  const handleCellEditStart = React.useCallback(params => {\n    const {\n      id,\n      field,\n      reason,\n      key\n    } = params;\n    const startCellEditModeParams = {\n      id,\n      field\n    };\n    if (reason === GridCellEditStartReasons.printableKeyDown) {\n      if (React.version.startsWith('18')) {\n        startCellEditModeParams.initialValue = key; // In React 17, cleaning the input is enough\n      } else {\n        startCellEditModeParams.deleteValue = true;\n      }\n    } else if (reason === GridCellEditStartReasons.deleteKeyDown) {\n      startCellEditModeParams.deleteValue = true;\n    }\n    apiRef.current.startCellEditMode(startCellEditModeParams);\n  }, [apiRef]);\n  const handleCellEditStop = React.useCallback(params => {\n    const {\n      id,\n      field,\n      reason\n    } = params;\n    apiRef.current.unstable_runPendingEditCellValueMutation(id, field);\n    let cellToFocusAfter;\n    if (reason === GridCellEditStopReasons.enterKeyDown) {\n      cellToFocusAfter = 'below';\n    } else if (reason === GridCellEditStopReasons.tabKeyDown) {\n      cellToFocusAfter = 'right';\n    } else if (reason === GridCellEditStopReasons.shiftTabKeyDown) {\n      cellToFocusAfter = 'left';\n    }\n    let ignoreModifications = reason === 'escapeKeyDown';\n    const editingState = gridEditRowsStateSelector(apiRef.current.state);\n    if (editingState[id][field].isProcessingProps && !props.disableIgnoreModificationsIfProcessingProps) {\n      // The user wants to stop editing the cell but we can't wait for the props to be processed.\n      // In this case, discard the modifications.\n      ignoreModifications = true;\n    }\n    apiRef.current.stopCellEditMode({\n      id,\n      field,\n      ignoreModifications,\n      cellToFocusAfter\n    });\n  }, [apiRef, props.disableIgnoreModificationsIfProcessingProps]);\n  useGridApiEventHandler(apiRef, 'cellDoubleClick', runIfEditModeIsCell(handleCellDoubleClick));\n  useGridApiEventHandler(apiRef, 'cellFocusOut', runIfEditModeIsCell(handleCellFocusOut));\n  useGridApiEventHandler(apiRef, 'cellKeyDown', runIfEditModeIsCell(handleCellKeyDown));\n  useGridApiEventHandler(apiRef, 'cellEditStart', runIfEditModeIsCell(handleCellEditStart));\n  useGridApiEventHandler(apiRef, 'cellEditStop', runIfEditModeIsCell(handleCellEditStop));\n  useGridApiOptionHandler(apiRef, 'cellEditStart', props.onCellEditStart);\n  useGridApiOptionHandler(apiRef, 'cellEditStop', props.onCellEditStop);\n  const getCellMode = React.useCallback((id, field) => {\n    const editingState = gridEditRowsStateSelector(apiRef.current.state);\n    const isEditing = editingState[id] && editingState[id][field];\n    return isEditing ? GridCellModes.Edit : GridCellModes.View;\n  }, [apiRef]);\n  const updateCellModesModel = useEventCallback(newModel => {\n    const isNewModelDifferentFromProp = newModel !== props.cellModesModel;\n    if (onCellModesModelChange && isNewModelDifferentFromProp) {\n      const details = signature === GridSignature.DataGridPro ? {\n        api: apiRef.current\n      } : {};\n      onCellModesModelChange(newModel, details);\n    }\n    if (props.cellModesModel && isNewModelDifferentFromProp) {\n      return; // The prop always win\n    }\n    setCellModesModel(newModel);\n    cellModesModelRef.current = newModel;\n    apiRef.current.publishEvent('cellModesModelChange', newModel);\n  });\n  const updateFieldInCellModesModel = React.useCallback((id, field, newProps) => {\n    // We use the ref because it always contain the up-to-date value, different from the state\n    // that needs a rerender to reflect the new value\n    const newModel = _extends({}, cellModesModelRef.current);\n    if (newProps !== null) {\n      newModel[id] = _extends({}, newModel[id], {\n        [field]: _extends({}, newProps)\n      });\n    } else {\n      const _newModel$id = newModel[id],\n        otherFields = _objectWithoutPropertiesLoose(_newModel$id, [field].map(_toPropertyKey)); // Ensure that we have a new object, not a reference\n\n      newModel[id] = otherFields;\n      if (Object.keys(newModel[id]).length === 0) {\n        delete newModel[id];\n      }\n    }\n    updateCellModesModel(newModel);\n  }, [updateCellModesModel]);\n  const updateOrDeleteFieldState = React.useCallback((id, field, newProps) => {\n    apiRef.current.setState(state => {\n      const newEditingState = _extends({}, state.editRows);\n      if (newProps !== null) {\n        newEditingState[id] = _extends({}, newEditingState[id], {\n          [field]: _extends({}, newProps)\n        });\n      } else {\n        delete newEditingState[id][field];\n        if (Object.keys(newEditingState[id]).length === 0) {\n          delete newEditingState[id];\n        }\n      }\n      return _extends({}, state, {\n        editRows: newEditingState\n      });\n    });\n    apiRef.current.forceUpdate();\n  }, [apiRef]);\n  const startCellEditMode = React.useCallback(params => {\n    const {\n        id,\n        field\n      } = params,\n      other = _objectWithoutPropertiesLoose(params, _excluded);\n    throwIfNotEditable(id, field);\n    throwIfNotInMode(id, field, GridCellModes.View);\n    updateFieldInCellModesModel(id, field, _extends({\n      mode: GridCellModes.Edit\n    }, other));\n  }, [throwIfNotEditable, throwIfNotInMode, updateFieldInCellModesModel]);\n  const updateStateToStartCellEditMode = useEventCallback(params => {\n    const {\n      id,\n      field,\n      deleteValue,\n      initialValue\n    } = params;\n    let newValue = apiRef.current.getCellValue(id, field);\n    if (deleteValue || initialValue) {\n      newValue = deleteValue ? '' : initialValue;\n    }\n    const newProps = {\n      value: newValue,\n      error: false,\n      isProcessingProps: false\n    };\n    updateOrDeleteFieldState(id, field, newProps);\n    apiRef.current.setCellFocus(id, field);\n  });\n  const stopCellEditMode = React.useCallback(params => {\n    const {\n        id,\n        field\n      } = params,\n      other = _objectWithoutPropertiesLoose(params, _excluded2);\n    throwIfNotInMode(id, field, GridCellModes.Edit);\n    updateFieldInCellModesModel(id, field, _extends({\n      mode: GridCellModes.View\n    }, other));\n  }, [throwIfNotInMode, updateFieldInCellModesModel]);\n  const updateStateToStopCellEditMode = useEventCallback(async params => {\n    const {\n      id,\n      field,\n      ignoreModifications,\n      cellToFocusAfter = 'none'\n    } = params;\n    throwIfNotInMode(id, field, GridCellModes.Edit);\n    apiRef.current.unstable_runPendingEditCellValueMutation(id, field);\n    const finishCellEditMode = () => {\n      updateOrDeleteFieldState(id, field, null);\n      updateFieldInCellModesModel(id, field, null);\n      if (cellToFocusAfter !== 'none') {\n        apiRef.current.unstable_moveFocusToRelativeCell(id, field, cellToFocusAfter);\n      }\n    };\n    if (ignoreModifications) {\n      finishCellEditMode();\n      return;\n    }\n    const editingState = gridEditRowsStateSelector(apiRef.current.state);\n    const {\n      error,\n      isProcessingProps\n    } = editingState[id][field];\n    if (error || isProcessingProps) {\n      // Attempt to change cell mode to \"view\" was not successful\n      // Update previous mode to allow another attempt\n      prevCellModesModel.current[id][field].mode = GridCellModes.Edit; // Revert the mode in the cellModesModel prop back to \"edit\"\n\n      updateFieldInCellModesModel(id, field, {\n        mode: GridCellModes.Edit\n      });\n      return;\n    }\n    const rowUpdate = apiRef.current.unstable_getRowWithUpdatedValuesFromCellEditing(id, field);\n    if (processRowUpdate) {\n      const handleError = errorThrown => {\n        prevCellModesModel.current[id][field].mode = GridCellModes.Edit; // Revert the mode in the cellModesModel prop back to \"edit\"\n\n        updateFieldInCellModesModel(id, field, {\n          mode: GridCellModes.Edit\n        });\n        if (onProcessRowUpdateError) {\n          onProcessRowUpdateError(errorThrown);\n        } else {\n          missingOnProcessRowUpdateErrorWarning();\n        }\n      };\n      try {\n        const row = apiRef.current.getRow(id);\n        Promise.resolve(processRowUpdate(rowUpdate, row)).then(finalRowUpdate => {\n          apiRef.current.updateRows([finalRowUpdate]);\n          finishCellEditMode();\n        }).catch(handleError);\n      } catch (errorThrown) {\n        handleError(errorThrown);\n      }\n    } else {\n      apiRef.current.updateRows([rowUpdate]);\n      finishCellEditMode();\n    }\n  });\n  const setCellEditingEditCellValue = React.useCallback(async params => {\n    var _editingState$id, _editingState$id$fiel;\n    const {\n      id,\n      field,\n      value,\n      debounceMs,\n      unstable_skipValueParser: skipValueParser\n    } = params;\n    throwIfNotEditable(id, field);\n    throwIfNotInMode(id, field, GridCellModes.Edit);\n    const column = apiRef.current.getColumn(field);\n    const row = apiRef.current.getRow(id);\n    let parsedValue = value;\n    if (column.valueParser && !skipValueParser) {\n      parsedValue = column.valueParser(value, apiRef.current.getCellParams(id, field));\n    }\n    let editingState = gridEditRowsStateSelector(apiRef.current.state);\n    let newProps = _extends({}, editingState[id][field], {\n      value: parsedValue,\n      changeReason: debounceMs ? 'debouncedSetEditCellValue' : 'setEditCellValue'\n    });\n    if (column.preProcessEditCellProps) {\n      const hasChanged = value !== editingState[id][field].value;\n      newProps = _extends({}, newProps, {\n        isProcessingProps: true\n      });\n      updateOrDeleteFieldState(id, field, newProps);\n      newProps = await Promise.resolve(column.preProcessEditCellProps({\n        id,\n        row,\n        props: newProps,\n        hasChanged\n      }));\n    } // Check again if the cell is in edit mode because the user may have\n    // discarded the changes while the props were being processed.\n\n    if (apiRef.current.getCellMode(id, field) === GridCellModes.View) {\n      return false;\n    }\n    editingState = gridEditRowsStateSelector(apiRef.current.state);\n    newProps = _extends({}, newProps, {\n      isProcessingProps: false\n    }); // We don't update the value with the one coming from the props pre-processing\n    // because when the promise resolves it may be already outdated. The only\n    // exception to this rule is when there's no pre-processing.\n\n    newProps.value = column.preProcessEditCellProps ? editingState[id][field].value : parsedValue;\n    updateOrDeleteFieldState(id, field, newProps);\n    editingState = gridEditRowsStateSelector(apiRef.current.state);\n    return !((_editingState$id = editingState[id]) != null && (_editingState$id$fiel = _editingState$id[field]) != null && _editingState$id$fiel.error);\n  }, [apiRef, throwIfNotEditable, throwIfNotInMode, updateOrDeleteFieldState]);\n  const getRowWithUpdatedValuesFromCellEditing = React.useCallback((id, field) => {\n    const column = apiRef.current.getColumn(field);\n    const editingState = gridEditRowsStateSelector(apiRef.current.state);\n    const {\n      value\n    } = editingState[id][field];\n    const row = apiRef.current.getRow(id);\n    return column.valueSetter ? column.valueSetter({\n      value,\n      row\n    }) : _extends({}, row, {\n      [field]: value\n    });\n  }, [apiRef]);\n  const editingApi = {\n    getCellMode,\n    startCellEditMode,\n    stopCellEditMode,\n    unstable_setCellEditingEditCellValue: setCellEditingEditCellValue,\n    unstable_getRowWithUpdatedValuesFromCellEditing: getRowWithUpdatedValuesFromCellEditing\n  };\n  useGridApiMethod(apiRef, editingApi, 'EditingApi');\n  React.useEffect(() => {\n    if (cellModesModelProp) {\n      updateCellModesModel(cellModesModelProp);\n    }\n  }, [cellModesModelProp, updateCellModesModel]);\n  React.useEffect(() => {\n    const idToIdLookup = gridRowsIdToIdLookupSelector(apiRef); // Update the ref here because updateStateToStopCellEditMode may change it later\n\n    const copyOfPrevCellModes = prevCellModesModel.current;\n    prevCellModesModel.current = deepClone(cellModesModel); // Do a deep-clone because the attributes might be changed later\n\n    Object.entries(cellModesModel).forEach(_ref => {\n      let [id, fields] = _ref;\n      Object.entries(fields).forEach(_ref2 => {\n        let [field, params] = _ref2;\n        var _copyOfPrevCellModes$, _copyOfPrevCellModes$2, _idToIdLookup$id;\n        const prevMode = ((_copyOfPrevCellModes$ = copyOfPrevCellModes[id]) == null ? void 0 : (_copyOfPrevCellModes$2 = _copyOfPrevCellModes$[field]) == null ? void 0 : _copyOfPrevCellModes$2.mode) || GridCellModes.View;\n        const originalId = (_idToIdLookup$id = idToIdLookup[id]) != null ? _idToIdLookup$id : id;\n        if (params.mode === GridCellModes.Edit && prevMode === GridCellModes.View) {\n          updateStateToStartCellEditMode(_extends({\n            id: originalId,\n            field\n          }, params));\n        } else if (params.mode === GridCellModes.View && prevMode === GridCellModes.Edit) {\n          updateStateToStopCellEditMode(_extends({\n            id: originalId,\n            field\n          }, params));\n        }\n      });\n    });\n  }, [apiRef, cellModesModel, updateStateToStartCellEditMode, updateStateToStopCellEditMode]);\n};","/**\n * Object passed as parameter in the row callbacks.\n */\n\n/**\n * Object passed as parameter in the row `getRowClassName` callback prop.\n */\n\n/**\n * Object passed as parameter in the row `getRowHeight` callback prop.\n */\n\n/**\n * The getRowHeight return value.\n */\nvar GridRowEditStartReasons;\n/**\n * Params passed to the `rowEditStart` event.\n */\n\n(function (GridRowEditStartReasons) {\n  GridRowEditStartReasons[\"enterKeyDown\"] = \"enterKeyDown\";\n  GridRowEditStartReasons[\"cellDoubleClick\"] = \"cellDoubleClick\";\n  GridRowEditStartReasons[\"printableKeyDown\"] = \"printableKeyDown\";\n  GridRowEditStartReasons[\"deleteKeyDown\"] = \"deleteKeyDown\";\n})(GridRowEditStartReasons || (GridRowEditStartReasons = {}));\nvar GridRowEditStopReasons;\n(function (GridRowEditStopReasons) {\n  GridRowEditStopReasons[\"rowFocusOut\"] = \"rowFocusOut\";\n  GridRowEditStopReasons[\"escapeKeyDown\"] = \"escapeKeyDown\";\n  GridRowEditStopReasons[\"enterKeyDown\"] = \"enterKeyDown\";\n  GridRowEditStopReasons[\"tabKeyDown\"] = \"tabKeyDown\";\n  GridRowEditStopReasons[\"shiftTabKeyDown\"] = \"shiftTabKeyDown\";\n})(GridRowEditStopReasons || (GridRowEditStopReasons = {}));\n\n// https://github.com/mui/mui-x/pull/3738#discussion_r798504277\nexport { GridRowEditStartReasons, GridRowEditStopReasons };","import _toPropertyKey from \"@babel/runtime/helpers/esm/toPropertyKey\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"id\"],\n  _excluded2 = [\"id\"];\nimport * as React from 'react';\nimport { unstable_useEventCallback as useEventCallback } from '@mui/utils';\nimport { useGridApiEventHandler, useGridApiOptionHandler, GridSignature } from '../../utils/useGridApiEventHandler';\nimport { GridEditModes, GridRowModes } from '../../../models/gridEditRowModel';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { gridEditRowsStateSelector } from './gridEditRowsSelector';\nimport { isPrintableKey } from '../../../utils/keyboardUtils';\nimport { gridColumnFieldsSelector } from '../columns/gridColumnsSelector';\nimport { buildWarning } from '../../../utils/warning';\nimport { gridRowsIdToIdLookupSelector } from '../rows/gridRowsSelector';\nimport { deepClone } from '../../../utils/utils';\nimport { GridRowEditStopReasons, GridRowEditStartReasons } from '../../../models/params/gridRowParams';\nconst missingOnProcessRowUpdateErrorWarning = buildWarning(['MUI: A call to `processRowUpdate` threw an error which was not handled because `onProcessRowUpdateError` is missing.', 'To handle the error pass a callback to the `onProcessRowUpdateError` prop, e.g. `<DataGrid onProcessRowUpdateError={(error) => ...} />`.', 'For more detail, see http://mui.com/components/data-grid/editing/#persistence.'], 'error');\nexport const useGridRowEditing = (apiRef, props) => {\n  const [rowModesModel, setRowModesModel] = React.useState({});\n  const rowModesModelRef = React.useRef(rowModesModel);\n  const prevRowModesModel = React.useRef({});\n  const focusTimeout = React.useRef(null);\n  const nextFocusedCell = React.useRef(null);\n  const {\n    processRowUpdate,\n    onProcessRowUpdateError,\n    rowModesModel: rowModesModelProp,\n    onRowModesModelChange,\n    signature\n  } = props;\n  const runIfEditModeIsRow = callback => function () {\n    if (props.editMode === GridEditModes.Row) {\n      callback(...arguments);\n    }\n  };\n  const throwIfNotEditable = React.useCallback((id, field) => {\n    const params = apiRef.current.getCellParams(id, field);\n    if (!apiRef.current.isCellEditable(params)) {\n      throw new Error(`MUI: The cell with id=${id} and field=${field} is not editable.`);\n    }\n  }, [apiRef]);\n  const throwIfNotInMode = React.useCallback((id, mode) => {\n    if (apiRef.current.getRowMode(id) !== mode) {\n      throw new Error(`MUI: The row with id=${id} is not in ${mode} mode.`);\n    }\n  }, [apiRef]);\n  const handleCellDoubleClick = React.useCallback((params, event) => {\n    if (!params.isEditable) {\n      return;\n    }\n    if (apiRef.current.getRowMode(params.id) === GridRowModes.Edit) {\n      return;\n    }\n    const rowParams = apiRef.current.getRowParams(params.id);\n    const newParams = _extends({}, rowParams, {\n      field: params.field,\n      reason: GridRowEditStartReasons.cellDoubleClick\n    });\n    apiRef.current.publishEvent('rowEditStart', newParams, event);\n  }, [apiRef]);\n  const handleCellFocusIn = React.useCallback(params => {\n    nextFocusedCell.current = params;\n  }, []);\n  const handleCellFocusOut = React.useCallback((params, event) => {\n    if (!params.isEditable) {\n      return;\n    }\n    if (apiRef.current.getRowMode(params.id) === GridRowModes.View) {\n      return;\n    } // The mechanism to detect if we can stop editing a row is different from\n    // the cell editing. Instead of triggering it when clicking outside a cell,\n    // we must check if another cell in the same row was not clicked. To achieve\n    // that, first we keep track of all cells that gained focus. When a cell loses\n    // focus we check if the next cell that received focus is from a different row.\n\n    nextFocusedCell.current = null;\n    focusTimeout.current = setTimeout(() => {\n      var _nextFocusedCell$curr;\n      focusTimeout.current = null;\n      if (((_nextFocusedCell$curr = nextFocusedCell.current) == null ? void 0 : _nextFocusedCell$curr.id) !== params.id) {\n        // The row might have been deleted during the click\n        if (!apiRef.current.getRow(params.id)) {\n          return;\n        } // The row may already changed its mode\n\n        if (apiRef.current.getRowMode(params.id) === GridRowModes.View) {\n          return;\n        }\n        const rowParams = apiRef.current.getRowParams(params.id);\n        const newParams = _extends({}, rowParams, {\n          field: params.field,\n          reason: GridRowEditStopReasons.rowFocusOut\n        });\n        apiRef.current.publishEvent('rowEditStop', newParams, event);\n      }\n    });\n  }, [apiRef]);\n  React.useEffect(() => {\n    return () => {\n      clearTimeout(focusTimeout.current);\n    };\n  }, []);\n  const handleCellKeyDown = React.useCallback((params, event) => {\n    if (params.cellMode === GridRowModes.Edit) {\n      // Wait until IME is settled for Asian languages like Japanese and Chinese\n      // TODO: `event.which` is depricated but this is a temporary workaround\n      if (event.which === 229) {\n        return;\n      }\n      let reason;\n      if (event.key === 'Escape') {\n        reason = GridRowEditStopReasons.escapeKeyDown;\n      } else if (event.key === 'Enter') {\n        reason = GridRowEditStopReasons.enterKeyDown;\n      } else if (event.key === 'Tab') {\n        const columnFields = gridColumnFieldsSelector(apiRef).filter(field => apiRef.current.isCellEditable(apiRef.current.getCellParams(params.id, field)));\n        if (event.shiftKey) {\n          if (params.field === columnFields[0]) {\n            // Exit if user pressed Shift+Tab on the first field\n            reason = GridRowEditStopReasons.shiftTabKeyDown;\n          }\n        } else if (params.field === columnFields[columnFields.length - 1]) {\n          // Exit if user pressed Tab on the last field\n          reason = GridRowEditStopReasons.tabKeyDown;\n        }\n        if (reason) {\n          event.preventDefault(); // Prevent going to the next element in the tab sequence\n        }\n      }\n      if (reason) {\n        const rowParams = apiRef.current.getRowParams(params.id);\n        const newParams = _extends({}, rowParams, {\n          reason,\n          field: params.field\n        });\n        apiRef.current.publishEvent('rowEditStop', newParams, event);\n      }\n    } else if (params.isEditable) {\n      let reason;\n      if (event.key === ' ' && event.shiftKey) {\n        return; // Shift + Space is used to select the row\n      }\n      if (isPrintableKey(event)) {\n        reason = GridRowEditStartReasons.printableKeyDown;\n      } else if ((event.ctrlKey || event.metaKey) && event.key === 'v') {\n        reason = GridRowEditStartReasons.printableKeyDown;\n      } else if (event.key === 'Enter') {\n        reason = GridRowEditStartReasons.enterKeyDown;\n      } else if (event.key === 'Delete' || event.key === 'Backspace') {\n        // Delete on Windows, Backspace on macOS\n        reason = GridRowEditStartReasons.deleteKeyDown;\n      }\n      if (reason) {\n        const rowParams = apiRef.current.getRowParams(params.id);\n        const newParams = _extends({}, rowParams, {\n          field: params.field,\n          key: event.key,\n          reason\n        });\n        apiRef.current.publishEvent('rowEditStart', newParams, event);\n      }\n    }\n  }, [apiRef]);\n  const handleRowEditStart = React.useCallback(params => {\n    const {\n      id,\n      field,\n      reason,\n      key\n    } = params;\n    const startRowEditModeParams = {\n      id,\n      fieldToFocus: field\n    };\n    if (reason === GridRowEditStartReasons.printableKeyDown) {\n      if (React.version.startsWith('18')) {\n        startRowEditModeParams.initialValue = key; // In React 17, cleaning the input is enough\n      } else {\n        startRowEditModeParams.deleteValue = !!field;\n      }\n    } else if (reason === GridRowEditStartReasons.deleteKeyDown) {\n      startRowEditModeParams.deleteValue = !!field;\n    }\n    apiRef.current.startRowEditMode(startRowEditModeParams);\n  }, [apiRef]);\n  const handleRowEditStop = React.useCallback(params => {\n    const {\n      id,\n      reason,\n      field\n    } = params;\n    apiRef.current.unstable_runPendingEditCellValueMutation(id);\n    let cellToFocusAfter;\n    if (reason === GridRowEditStopReasons.enterKeyDown) {\n      cellToFocusAfter = 'below';\n    } else if (reason === GridRowEditStopReasons.tabKeyDown) {\n      cellToFocusAfter = 'right';\n    } else if (reason === GridRowEditStopReasons.shiftTabKeyDown) {\n      cellToFocusAfter = 'left';\n    }\n    let ignoreModifications = reason === 'escapeKeyDown';\n    const editingState = gridEditRowsStateSelector(apiRef.current.state);\n    if (!ignoreModifications && !props.disableIgnoreModificationsIfProcessingProps) {\n      // The user wants to stop editing the cell but we can't wait for the props to be processed.\n      // In this case, discard the modifications if any field is processing its props.\n      ignoreModifications = Object.values(editingState[id]).some(fieldProps => {\n        return fieldProps.isProcessingProps;\n      });\n    }\n    apiRef.current.stopRowEditMode({\n      id,\n      ignoreModifications,\n      field,\n      cellToFocusAfter\n    });\n  }, [apiRef, props.disableIgnoreModificationsIfProcessingProps]);\n  useGridApiEventHandler(apiRef, 'cellDoubleClick', runIfEditModeIsRow(handleCellDoubleClick));\n  useGridApiEventHandler(apiRef, 'cellFocusIn', runIfEditModeIsRow(handleCellFocusIn));\n  useGridApiEventHandler(apiRef, 'cellFocusOut', runIfEditModeIsRow(handleCellFocusOut));\n  useGridApiEventHandler(apiRef, 'cellKeyDown', runIfEditModeIsRow(handleCellKeyDown));\n  useGridApiEventHandler(apiRef, 'rowEditStart', runIfEditModeIsRow(handleRowEditStart));\n  useGridApiEventHandler(apiRef, 'rowEditStop', runIfEditModeIsRow(handleRowEditStop));\n  useGridApiOptionHandler(apiRef, 'rowEditStart', props.onRowEditStart);\n  useGridApiOptionHandler(apiRef, 'rowEditStop', props.onRowEditStop);\n  const getRowMode = React.useCallback(id => {\n    if (props.editMode === GridEditModes.Cell) {\n      return GridRowModes.View;\n    }\n    const editingState = gridEditRowsStateSelector(apiRef.current.state);\n    const isEditing = editingState[id] && Object.keys(editingState[id]).length > 0;\n    return isEditing ? GridRowModes.Edit : GridRowModes.View;\n  }, [apiRef, props.editMode]);\n  const updateRowModesModel = useEventCallback(newModel => {\n    const isNewModelDifferentFromProp = newModel !== props.rowModesModel;\n    if (onRowModesModelChange && isNewModelDifferentFromProp) {\n      const details = signature === GridSignature.DataGridPro ? {\n        api: apiRef.current\n      } : {};\n      onRowModesModelChange(newModel, details);\n    }\n    if (props.rowModesModel && isNewModelDifferentFromProp) {\n      return; // The prop always win\n    }\n    setRowModesModel(newModel);\n    rowModesModelRef.current = newModel;\n    apiRef.current.publishEvent('rowModesModelChange', newModel);\n  });\n  const updateRowInRowModesModel = React.useCallback((id, newProps) => {\n    const newModel = _extends({}, rowModesModelRef.current);\n    if (newProps !== null) {\n      newModel[id] = _extends({}, newProps);\n    } else {\n      delete newModel[id];\n    }\n    updateRowModesModel(newModel);\n  }, [updateRowModesModel]);\n  const updateOrDeleteRowState = React.useCallback((id, newProps) => {\n    apiRef.current.setState(state => {\n      const newEditingState = _extends({}, state.editRows);\n      if (newProps !== null) {\n        newEditingState[id] = newProps;\n      } else {\n        delete newEditingState[id];\n      }\n      return _extends({}, state, {\n        editRows: newEditingState\n      });\n    });\n    apiRef.current.forceUpdate();\n  }, [apiRef]);\n  const updateOrDeleteFieldState = React.useCallback((id, field, newProps) => {\n    apiRef.current.setState(state => {\n      const newEditingState = _extends({}, state.editRows);\n      if (newProps !== null) {\n        newEditingState[id] = _extends({}, newEditingState[id], {\n          [field]: _extends({}, newProps)\n        });\n      } else {\n        delete newEditingState[id][field];\n        if (Object.keys(newEditingState[id]).length === 0) {\n          delete newEditingState[id];\n        }\n      }\n      return _extends({}, state, {\n        editRows: newEditingState\n      });\n    });\n    apiRef.current.forceUpdate();\n  }, [apiRef]);\n  const startRowEditMode = React.useCallback(params => {\n    const {\n        id\n      } = params,\n      other = _objectWithoutPropertiesLoose(params, _excluded);\n    throwIfNotInMode(id, GridRowModes.View);\n    updateRowInRowModesModel(id, _extends({\n      mode: GridRowModes.Edit\n    }, other));\n  }, [throwIfNotInMode, updateRowInRowModesModel]);\n  const updateStateToStartRowEditMode = useEventCallback(params => {\n    const {\n      id,\n      fieldToFocus,\n      deleteValue,\n      initialValue\n    } = params;\n    const columnFields = gridColumnFieldsSelector(apiRef);\n    const newProps = columnFields.reduce((acc, field) => {\n      const cellParams = apiRef.current.getCellParams(id, field);\n      if (!cellParams.isEditable) {\n        return acc;\n      }\n      let newValue = apiRef.current.getCellValue(id, field);\n      if (fieldToFocus === field && (deleteValue || initialValue)) {\n        newValue = deleteValue ? '' : initialValue;\n      }\n      acc[field] = {\n        value: newValue,\n        error: false,\n        isProcessingProps: false\n      };\n      return acc;\n    }, {});\n    updateOrDeleteRowState(id, newProps);\n    if (fieldToFocus) {\n      apiRef.current.setCellFocus(id, fieldToFocus);\n    }\n  });\n  const stopRowEditMode = React.useCallback(params => {\n    const {\n        id\n      } = params,\n      other = _objectWithoutPropertiesLoose(params, _excluded2);\n    throwIfNotInMode(id, GridRowModes.Edit);\n    updateRowInRowModesModel(id, _extends({\n      mode: GridRowModes.View\n    }, other));\n  }, [throwIfNotInMode, updateRowInRowModesModel]);\n  const updateStateToStopRowEditMode = useEventCallback(params => {\n    const {\n      id,\n      ignoreModifications,\n      field: focusedField,\n      cellToFocusAfter = 'none'\n    } = params;\n    apiRef.current.unstable_runPendingEditCellValueMutation(id);\n    const finishRowEditMode = () => {\n      if (cellToFocusAfter !== 'none' && focusedField) {\n        apiRef.current.unstable_moveFocusToRelativeCell(id, focusedField, cellToFocusAfter);\n      }\n      updateOrDeleteRowState(id, null);\n      updateRowInRowModesModel(id, null);\n    };\n    if (ignoreModifications) {\n      finishRowEditMode();\n      return;\n    }\n    const editingState = gridEditRowsStateSelector(apiRef.current.state);\n    const row = apiRef.current.getRow(id);\n    const isSomeFieldProcessingProps = Object.values(editingState[id]).some(fieldProps => fieldProps.isProcessingProps);\n    if (isSomeFieldProcessingProps) {\n      prevRowModesModel.current[id].mode = GridRowModes.Edit;\n      return;\n    }\n    const hasSomeFieldWithError = Object.values(editingState[id]).some(fieldProps => fieldProps.error);\n    if (hasSomeFieldWithError) {\n      prevRowModesModel.current[id].mode = GridRowModes.Edit; // Revert the mode in the rowModesModel prop back to \"edit\"\n\n      updateRowInRowModesModel(id, {\n        mode: GridRowModes.Edit\n      });\n      return;\n    }\n    const rowUpdate = apiRef.current.unstable_getRowWithUpdatedValuesFromRowEditing(id);\n    if (processRowUpdate) {\n      const handleError = errorThrown => {\n        prevRowModesModel.current[id].mode = GridRowModes.Edit; // Revert the mode in the rowModesModel prop back to \"edit\"\n\n        updateRowInRowModesModel(id, {\n          mode: GridRowModes.Edit\n        });\n        if (onProcessRowUpdateError) {\n          onProcessRowUpdateError(errorThrown);\n        } else {\n          missingOnProcessRowUpdateErrorWarning();\n        }\n      };\n      try {\n        Promise.resolve(processRowUpdate(rowUpdate, row)).then(finalRowUpdate => {\n          apiRef.current.updateRows([finalRowUpdate]);\n          finishRowEditMode();\n        }).catch(handleError);\n      } catch (errorThrown) {\n        handleError(errorThrown);\n      }\n    } else {\n      apiRef.current.updateRows([rowUpdate]);\n      finishRowEditMode();\n    }\n  });\n  const setRowEditingEditCellValue = React.useCallback(params => {\n    const {\n      id,\n      field,\n      value,\n      debounceMs,\n      unstable_skipValueParser: skipValueParser\n    } = params;\n    throwIfNotEditable(id, field);\n    const column = apiRef.current.getColumn(field);\n    const row = apiRef.current.getRow(id);\n    let parsedValue = value;\n    if (column.valueParser && !skipValueParser) {\n      parsedValue = column.valueParser(value, apiRef.current.getCellParams(id, field));\n    }\n    let editingState = gridEditRowsStateSelector(apiRef.current.state);\n    let newProps = _extends({}, editingState[id][field], {\n      value: parsedValue,\n      changeReason: debounceMs ? 'debouncedSetEditCellValue' : 'setEditCellValue'\n    });\n    if (!column.preProcessEditCellProps) {\n      updateOrDeleteFieldState(id, field, newProps);\n    }\n    return new Promise(resolve => {\n      const promises = [];\n      if (column.preProcessEditCellProps) {\n        const hasChanged = newProps.value !== editingState[id][field].value;\n        newProps = _extends({}, newProps, {\n          isProcessingProps: true\n        });\n        updateOrDeleteFieldState(id, field, newProps);\n        const _editingState$id = editingState[id],\n          otherFieldsProps = _objectWithoutPropertiesLoose(_editingState$id, [field].map(_toPropertyKey));\n        const promise = Promise.resolve(column.preProcessEditCellProps({\n          id,\n          row,\n          props: newProps,\n          hasChanged,\n          otherFieldsProps\n        })).then(processedProps => {\n          // Check again if the row is in edit mode because the user may have\n          // discarded the changes while the props were being processed.\n          if (apiRef.current.getRowMode(id) === GridRowModes.View) {\n            resolve(false);\n            return;\n          }\n          editingState = gridEditRowsStateSelector(apiRef.current.state);\n          processedProps = _extends({}, processedProps, {\n            isProcessingProps: false\n          }); // We don't reuse the value from the props pre-processing because when the\n          // promise resolves it may be already outdated. The only exception to this rule\n          // is when there's no pre-processing.\n\n          processedProps.value = column.preProcessEditCellProps ? editingState[id][field].value : parsedValue;\n          updateOrDeleteFieldState(id, field, processedProps);\n        });\n        promises.push(promise);\n      }\n      Object.entries(editingState[id]).forEach(_ref => {\n        let [thisField, fieldProps] = _ref;\n        if (thisField === field) {\n          return;\n        }\n        const fieldColumn = apiRef.current.getColumn(thisField);\n        if (!fieldColumn.preProcessEditCellProps) {\n          return;\n        }\n        fieldProps = _extends({}, fieldProps, {\n          isProcessingProps: true\n        });\n        updateOrDeleteFieldState(id, thisField, fieldProps);\n        editingState = gridEditRowsStateSelector(apiRef.current.state);\n        const _editingState$id2 = editingState[id],\n          otherFieldsProps = _objectWithoutPropertiesLoose(_editingState$id2, [thisField].map(_toPropertyKey));\n        const promise = Promise.resolve(fieldColumn.preProcessEditCellProps({\n          id,\n          row,\n          props: fieldProps,\n          hasChanged: false,\n          otherFieldsProps\n        })).then(processedProps => {\n          // Check again if the row is in edit mode because the user may have\n          // discarded the changes while the props were being processed.\n          if (apiRef.current.getRowMode(id) === GridRowModes.View) {\n            resolve(false);\n            return;\n          }\n          processedProps = _extends({}, processedProps, {\n            isProcessingProps: false\n          });\n          updateOrDeleteFieldState(id, thisField, processedProps);\n        });\n        promises.push(promise);\n      });\n      Promise.all(promises).then(() => {\n        if (apiRef.current.getRowMode(id) === GridRowModes.Edit) {\n          editingState = gridEditRowsStateSelector(apiRef.current.state);\n          resolve(!editingState[id][field].error);\n        } else {\n          resolve(false);\n        }\n      });\n    });\n  }, [apiRef, throwIfNotEditable, updateOrDeleteFieldState]);\n  const getRowWithUpdatedValuesFromRowEditing = React.useCallback(id => {\n    const editingState = gridEditRowsStateSelector(apiRef.current.state);\n    const row = apiRef.current.getRow(id);\n    let rowUpdate = _extends({}, row);\n    Object.entries(editingState[id]).forEach(_ref2 => {\n      let [field, fieldProps] = _ref2;\n      const column = apiRef.current.getColumn(field);\n      if (column.valueSetter) {\n        rowUpdate = column.valueSetter({\n          value: fieldProps.value,\n          row: rowUpdate\n        });\n      } else {\n        rowUpdate[field] = fieldProps.value;\n      }\n    });\n    return rowUpdate;\n  }, [apiRef]);\n  const editingApi = {\n    getRowMode,\n    startRowEditMode,\n    stopRowEditMode,\n    unstable_setRowEditingEditCellValue: setRowEditingEditCellValue,\n    unstable_getRowWithUpdatedValuesFromRowEditing: getRowWithUpdatedValuesFromRowEditing\n  };\n  useGridApiMethod(apiRef, editingApi, 'EditingApi');\n  React.useEffect(() => {\n    if (rowModesModelProp) {\n      updateRowModesModel(rowModesModelProp);\n    }\n  }, [rowModesModelProp, updateRowModesModel]);\n  React.useEffect(() => {\n    const idToIdLookup = gridRowsIdToIdLookupSelector(apiRef); // Update the ref here because updateStateToStopRowEditMode may change it later\n\n    const copyOfPrevRowModesModel = prevRowModesModel.current;\n    prevRowModesModel.current = deepClone(rowModesModel); // Do a deep-clone because the attributes might be changed later\n\n    Object.entries(rowModesModel).forEach(_ref3 => {\n      let [id, params] = _ref3;\n      var _copyOfPrevRowModesMo, _idToIdLookup$id;\n      const prevMode = ((_copyOfPrevRowModesMo = copyOfPrevRowModesModel[id]) == null ? void 0 : _copyOfPrevRowModesMo.mode) || GridRowModes.View;\n      const originalId = (_idToIdLookup$id = idToIdLookup[id]) != null ? _idToIdLookup$id : id;\n      if (params.mode === GridRowModes.Edit && prevMode === GridRowModes.View) {\n        updateStateToStartRowEditMode(_extends({\n          id: originalId\n        }, params));\n      } else if (params.mode === GridRowModes.View && prevMode === GridRowModes.Edit) {\n        updateStateToStopRowEditMode(_extends({\n          id: originalId\n        }, params));\n      }\n    });\n  }, [apiRef, rowModesModel, updateStateToStartRowEditMode, updateStateToStopRowEditMode]);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { useGridCellEditing } from './useGridCellEditing.new';\nimport { GridCellModes, GridEditModes } from '../../../models/gridEditRowModel';\nimport { useGridRowEditing } from './useGridRowEditing.new';\nimport { gridEditRowsStateSelector } from './gridEditRowsSelector';\nexport const editingStateInitializer = state => _extends({}, state, {\n  editRows: {}\n});\nexport const useGridEditing = (apiRef, props) => {\n  useGridCellEditing(apiRef, props);\n  useGridRowEditing(apiRef, props);\n  const debounceMap = React.useRef({});\n  const {\n    isCellEditable: isCellEditableProp\n  } = props;\n  const isCellEditable = React.useCallback(params => {\n    if (params.rowNode.isAutoGenerated) {\n      return false;\n    }\n    if (!params.colDef.editable) {\n      return false;\n    }\n    if (!params.colDef.renderEditCell) {\n      return false;\n    }\n    if (isCellEditableProp) {\n      return isCellEditableProp(params);\n    }\n    if (params.rowNode.isPinned) {\n      return false;\n    }\n    return true;\n  }, [isCellEditableProp]);\n  const maybeDebounce = (id, field, debounceMs, callback) => {\n    if (!debounceMs) {\n      callback();\n      return;\n    }\n    if (!debounceMap.current[id]) {\n      debounceMap.current[id] = {};\n    }\n    if (debounceMap.current[id][field]) {\n      const [timeout] = debounceMap.current[id][field];\n      clearTimeout(timeout);\n    } // To run the callback immediatelly without waiting the timeout\n\n    const runImmediately = () => {\n      const [timeout] = debounceMap.current[id][field];\n      clearTimeout(timeout);\n      callback();\n      delete debounceMap.current[id][field];\n    };\n    const timeout = setTimeout(() => {\n      callback();\n      delete debounceMap.current[id][field];\n    }, debounceMs);\n    debounceMap.current[id][field] = [timeout, runImmediately];\n  };\n  React.useEffect(() => {\n    const debounces = debounceMap.current;\n    return () => {\n      Object.entries(debounces).forEach(_ref => {\n        let [id, fields] = _ref;\n        Object.keys(fields).forEach(field => {\n          const [timeout] = debounces[id][field];\n          clearTimeout(timeout);\n          delete debounces[id][field];\n        });\n      });\n    };\n  }, []);\n  const runPendingEditCellValueMutation = React.useCallback((id, field) => {\n    if (!debounceMap.current[id]) {\n      return;\n    }\n    if (!field) {\n      Object.keys(debounceMap.current[id]).forEach(debouncedField => {\n        const [, runCallback] = debounceMap.current[id][debouncedField];\n        runCallback();\n      });\n    } else if (debounceMap.current[id][field]) {\n      const [, runCallback] = debounceMap.current[id][field];\n      runCallback();\n    }\n  }, []);\n  const setEditCellValue = React.useCallback(params => {\n    const {\n      id,\n      field,\n      debounceMs\n    } = params;\n    return new Promise(resolve => {\n      maybeDebounce(id, field, debounceMs, async () => {\n        const setEditCellValueToCall = props.editMode === GridEditModes.Row ? apiRef.current.unstable_setRowEditingEditCellValue : apiRef.current.unstable_setCellEditingEditCellValue; // Check if the cell is in edit mode\n        // By the time this callback runs the user may have cancelled the editing\n\n        if (apiRef.current.getCellMode(id, field) === GridCellModes.Edit) {\n          const result = await setEditCellValueToCall(params);\n          resolve(result);\n        }\n      });\n    });\n  }, [apiRef, props.editMode]);\n  const getRowWithUpdatedValues = React.useCallback((id, field) => {\n    return props.editMode === GridEditModes.Cell ? apiRef.current.unstable_getRowWithUpdatedValuesFromCellEditing(id, field) : apiRef.current.unstable_getRowWithUpdatedValuesFromRowEditing(id);\n  }, [apiRef, props.editMode]);\n  const getEditCellMeta = React.useCallback((id, field) => {\n    const editingState = gridEditRowsStateSelector(apiRef.current.state);\n    return {\n      changeReason: editingState[id][field].changeReason\n    };\n  }, [apiRef]);\n  const editingSharedApi = {\n    isCellEditable,\n    setEditCellValue,\n    unstable_runPendingEditCellValueMutation: runPendingEditCellValueMutation,\n    unstable_getRowWithUpdatedValues: getRowWithUpdatedValues,\n    unstable_getEditCellMeta: getEditCellMeta\n  };\n  useGridApiMethod(apiRef, editingSharedApi, 'EditingApi');\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { useGridLogger } from '../../utils/useGridLogger';\nimport { gridRowCountSelector, gridRowsLookupSelector, gridRowTreeSelector, gridRowIdsSelector, gridRowGroupingNameSelector, gridRowsIdToIdLookupSelector } from './gridRowsSelector';\nimport { GridSignature, useGridApiEventHandler } from '../../utils/useGridApiEventHandler';\nimport { useGridVisibleRows } from '../../utils/useGridVisibleRows';\nimport { gridSortedRowIdsSelector } from '../sorting/gridSortingSelector';\nimport { gridFilteredRowsLookupSelector } from '../filter/gridFilterSelector';\nimport { getTreeNodeDescendants, createRowsInternalCache, getRowsStateFromCache, getRowIdFromRowModel } from './gridRowsUtils';\nimport { useGridRegisterPipeApplier } from '../../core/pipeProcessing';\nexport const rowsStateInitializer = (state, props, apiRef) => {\n  apiRef.current.unstable_caches.rows = createRowsInternalCache({\n    rows: props.rows,\n    getRowId: props.getRowId,\n    loading: props.loading,\n    rowCount: props.rowCount\n  });\n  return _extends({}, state, {\n    rows: getRowsStateFromCache({\n      apiRef,\n      previousTree: null,\n      rowCountProp: props.rowCount,\n      loadingProp: props.loading\n    })\n  });\n};\nexport const useGridRows = (apiRef, props) => {\n  if (process.env.NODE_ENV !== 'production') {\n    try {\n      // Freeze the `rows` prop so developers have a fast failure if they try to use Array.prototype.push().\n      Object.freeze(props.rows);\n    } catch (error) {// Sometimes, it's impossible to freeze, so we give up on it.\n    }\n  }\n  const logger = useGridLogger(apiRef, 'useGridRows');\n  const currentPage = useGridVisibleRows(apiRef, props);\n  const lastUpdateMs = React.useRef(Date.now());\n  const timeout = React.useRef(null);\n  const getRow = React.useCallback(id => {\n    var _ref;\n    return (_ref = gridRowsLookupSelector(apiRef)[id]) != null ? _ref : null;\n  }, [apiRef]);\n  const lookup = React.useMemo(() => currentPage.rows.reduce((acc, _ref2, index) => {\n    let {\n      id\n    } = _ref2;\n    acc[id] = index;\n    return acc;\n  }, {}), [currentPage.rows]);\n  const throttledRowsChange = React.useCallback((newCache, throttle) => {\n    const run = () => {\n      timeout.current = null;\n      lastUpdateMs.current = Date.now();\n      apiRef.current.setState(state => _extends({}, state, {\n        rows: getRowsStateFromCache({\n          apiRef,\n          previousTree: gridRowTreeSelector(apiRef),\n          rowCountProp: props.rowCount,\n          loadingProp: props.loading\n        })\n      }));\n      apiRef.current.publishEvent('rowsSet');\n      apiRef.current.forceUpdate();\n    };\n    if (timeout.current) {\n      clearTimeout(timeout.current);\n      timeout.current = null;\n    }\n    apiRef.current.unstable_caches.rows = newCache;\n    if (!throttle) {\n      run();\n      return;\n    }\n    const throttleRemainingTimeMs = props.throttleRowsMs - (Date.now() - lastUpdateMs.current);\n    if (throttleRemainingTimeMs > 0) {\n      timeout.current = setTimeout(run, throttleRemainingTimeMs);\n      return;\n    }\n    run();\n  }, [props.throttleRowsMs, props.rowCount, props.loading, apiRef]);\n  /**\n   * API METHODS\n   */\n\n  const setRows = React.useCallback(rows => {\n    logger.debug(`Updating all rows, new length ${rows.length}`);\n    const cache = createRowsInternalCache({\n      rows,\n      getRowId: props.getRowId,\n      loading: props.loading,\n      rowCount: props.rowCount\n    });\n    const prevCache = apiRef.current.unstable_caches.rows;\n    cache.rowsBeforePartialUpdates = prevCache.rowsBeforePartialUpdates;\n    throttledRowsChange(cache, true);\n  }, [logger, props.getRowId, props.loading, props.rowCount, throttledRowsChange, apiRef]);\n  const updateRows = React.useCallback(updates => {\n    if (props.signature === GridSignature.DataGrid && updates.length > 1) {\n      // TODO: Add test with direct call to `apiRef.current.updateRows` in DataGrid after enabling the `apiRef` on the free plan.\n      throw new Error([\"MUI: You can't update several rows at once in `apiRef.current.updateRows` on the DataGrid.\", 'You need to upgrade to DataGridPro or DataGridPremium component to unlock this feature.'].join('\\n'));\n    } // we remove duplicate updates. A server can batch updates, and send several updates for the same row in one fn call.\n\n    const uniqueUpdates = new Map();\n    updates.forEach(update => {\n      const id = getRowIdFromRowModel(update, props.getRowId, 'A row was provided without id when calling updateRows():');\n      if (uniqueUpdates.has(id)) {\n        uniqueUpdates.set(id, _extends({}, uniqueUpdates.get(id), update));\n      } else {\n        uniqueUpdates.set(id, update);\n      }\n    });\n    const deletedRowIds = [];\n    const prevCache = apiRef.current.unstable_caches.rows;\n    const newCache = {\n      rowsBeforePartialUpdates: prevCache.rowsBeforePartialUpdates,\n      loadingPropBeforePartialUpdates: prevCache.loadingPropBeforePartialUpdates,\n      rowCountPropBeforePartialUpdates: prevCache.rowCountPropBeforePartialUpdates,\n      idRowsLookup: _extends({}, prevCache.idRowsLookup),\n      idToIdLookup: _extends({}, prevCache.idToIdLookup),\n      ids: [...prevCache.ids]\n    };\n    uniqueUpdates.forEach((partialRow, id) => {\n      // eslint-disable-next-line no-underscore-dangle\n      if (partialRow._action === 'delete') {\n        delete newCache.idRowsLookup[id];\n        delete newCache.idToIdLookup[id];\n        deletedRowIds.push(id);\n        return;\n      }\n      const oldRow = apiRef.current.getRow(id);\n      if (!oldRow) {\n        newCache.idRowsLookup[id] = partialRow;\n        newCache.idToIdLookup[id] = id;\n        newCache.ids.push(id);\n        return;\n      }\n      newCache.idRowsLookup[id] = _extends({}, apiRef.current.getRow(id), partialRow);\n    });\n    if (deletedRowIds.length > 0) {\n      newCache.ids = newCache.ids.filter(id => !deletedRowIds.includes(id));\n    }\n    throttledRowsChange(newCache, true);\n  }, [props.signature, props.getRowId, throttledRowsChange, apiRef]);\n  const getRowModels = React.useCallback(() => {\n    const allRows = gridRowIdsSelector(apiRef);\n    const idRowsLookup = gridRowsLookupSelector(apiRef);\n    return new Map(allRows.map(id => [id, idRowsLookup[id]]));\n  }, [apiRef]);\n  const getRowsCount = React.useCallback(() => gridRowCountSelector(apiRef), [apiRef]);\n  const getAllRowIds = React.useCallback(() => gridRowIdsSelector(apiRef), [apiRef]);\n  const getRowIndexRelativeToVisibleRows = React.useCallback(id => lookup[id], [lookup]);\n  const setRowChildrenExpansion = React.useCallback((id, isExpanded) => {\n    const currentNode = apiRef.current.getRowNode(id);\n    if (!currentNode) {\n      throw new Error(`MUI: No row with id #${id} found`);\n    }\n    const newNode = _extends({}, currentNode, {\n      childrenExpanded: isExpanded\n    });\n    apiRef.current.setState(state => {\n      return _extends({}, state, {\n        rows: _extends({}, state.rows, {\n          tree: _extends({}, state.rows.tree, {\n            [id]: newNode\n          })\n        })\n      });\n    });\n    apiRef.current.forceUpdate();\n    apiRef.current.publishEvent('rowExpansionChange', newNode);\n  }, [apiRef]);\n  const getRowNode = React.useCallback(id => {\n    var _gridRowTreeSelector$;\n    return (_gridRowTreeSelector$ = gridRowTreeSelector(apiRef)[id]) != null ? _gridRowTreeSelector$ : null;\n  }, [apiRef]);\n  const getRowGroupChildren = React.useCallback(_ref3 => {\n    let {\n      skipAutoGeneratedRows = true,\n      groupId,\n      applySorting,\n      applyFiltering\n    } = _ref3;\n    const tree = gridRowTreeSelector(apiRef);\n    let children;\n    if (applySorting) {\n      const groupNode = tree[groupId];\n      if (!groupNode) {\n        return [];\n      }\n      const sortedRowIds = gridSortedRowIdsSelector(apiRef);\n      children = [];\n      const startIndex = sortedRowIds.findIndex(id => id === groupId) + 1;\n      for (let index = startIndex; index < sortedRowIds.length && tree[sortedRowIds[index]].depth > groupNode.depth; index += 1) {\n        const id = sortedRowIds[index];\n        const node = tree[id];\n        if (!skipAutoGeneratedRows || !node.isAutoGenerated) {\n          children.push(id);\n        }\n      }\n    } else {\n      children = getTreeNodeDescendants(tree, groupId, skipAutoGeneratedRows);\n    }\n    if (applyFiltering) {\n      const filteredRowsLookup = gridFilteredRowsLookupSelector(apiRef);\n      children = children.filter(childId => filteredRowsLookup[childId] !== false);\n    }\n    return children;\n  }, [apiRef]);\n  const setRowIndex = React.useCallback((rowId, targetIndex) => {\n    const allRows = gridRowIdsSelector(apiRef);\n    const oldIndex = allRows.findIndex(row => row === rowId);\n    if (oldIndex === -1 || oldIndex === targetIndex) {\n      return;\n    }\n    logger.debug(`Moving row ${rowId} to index ${targetIndex}`);\n    const updatedRows = [...allRows];\n    updatedRows.splice(targetIndex, 0, updatedRows.splice(oldIndex, 1)[0]);\n    apiRef.current.setState(state => _extends({}, state, {\n      rows: _extends({}, state.rows, {\n        ids: updatedRows\n      })\n    }));\n    apiRef.current.unstable_caches.rows.ids = updatedRows;\n    apiRef.current.publishEvent('rowsSet');\n  }, [apiRef, logger]);\n  const replaceRows = React.useCallback((firstRowToRender, newRows) => {\n    if (props.signature === GridSignature.DataGrid && newRows.length > 1) {\n      throw new Error([\"MUI: You can't replace rows using `apiRef.current.unstable_replaceRows` on the DataGrid.\", 'You need to upgrade to DataGridPro or DataGridPremium component to unlock this feature.'].join('\\n'));\n    }\n    if (newRows.length === 0) {\n      return;\n    }\n    const allRows = gridRowIdsSelector(apiRef);\n    const updatedRows = [...allRows];\n    const idRowsLookup = gridRowsLookupSelector(apiRef);\n    const idToIdLookup = gridRowsIdToIdLookupSelector(apiRef);\n    const tree = gridRowTreeSelector(apiRef);\n    const updatedIdRowsLookup = _extends({}, idRowsLookup);\n    const updatedIdToIdLookup = _extends({}, idToIdLookup);\n    const updatedTree = _extends({}, tree);\n    const newRowEntries = newRows.map(newRowModel => {\n      const rowId = getRowIdFromRowModel(newRowModel, props.getRowId, 'A row was provided without id when calling replaceRows().');\n      return {\n        id: rowId,\n        model: newRowModel\n      };\n    });\n    newRowEntries.forEach((row, index) => {\n      const [replacedRowId] = updatedRows.splice(firstRowToRender + index, 1, row.id);\n      delete updatedIdRowsLookup[replacedRowId];\n      delete updatedIdToIdLookup[replacedRowId];\n      delete updatedTree[replacedRowId];\n    });\n    newRowEntries.forEach(row => {\n      const rowTreeNodeConfig = {\n        id: row.id,\n        parent: null,\n        depth: 0,\n        groupingKey: null,\n        groupingField: null\n      };\n      updatedIdRowsLookup[row.id] = row.model;\n      updatedIdToIdLookup[row.id] = row.id;\n      updatedTree[row.id] = rowTreeNodeConfig;\n    });\n    apiRef.current.unstable_caches.rows.idRowsLookup = updatedIdRowsLookup;\n    apiRef.current.unstable_caches.rows.idToIdLookup = updatedIdToIdLookup;\n    apiRef.current.unstable_caches.rows.ids = updatedRows;\n    apiRef.current.setState(state => {\n      const newRowsState = {\n        idRowsLookup: updatedIdRowsLookup,\n        idToIdLookup: updatedIdToIdLookup,\n        tree: updatedTree,\n        ids: updatedRows\n      };\n      return _extends({}, state, {\n        rows: _extends({}, state.rows, newRowsState, {\n          groupingResponseBeforeRowHydration: _extends({}, state.rows.groupingResponseBeforeRowHydration, newRowsState)\n        })\n      });\n    });\n    apiRef.current.publishEvent('rowsSet');\n  }, [apiRef, props.signature, props.getRowId]);\n  const rowApi = {\n    getRow,\n    getRowModels,\n    getRowsCount,\n    getAllRowIds,\n    setRows,\n    setRowIndex,\n    updateRows,\n    setRowChildrenExpansion,\n    getRowNode,\n    getRowIndexRelativeToVisibleRows,\n    getRowGroupChildren,\n    unstable_replaceRows: replaceRows\n  };\n  /**\n   * EVENTS\n   */\n\n  const groupRows = React.useCallback(() => {\n    logger.info(`Row grouping pre-processing have changed, regenerating the row tree`);\n    let cache;\n    if (apiRef.current.unstable_caches.rows.rowsBeforePartialUpdates === props.rows) {\n      // The `props.rows` did not change since the last row grouping\n      // We can use the current rows cache which contains the partial updates done recently.\n      cache = apiRef.current.unstable_caches.rows;\n    } else {\n      // The `props.rows` has changed since the last row grouping\n      // We must use the new `props.rows` on the new grouping\n      // This occurs because this event is triggered before the `useEffect` on the rows when both the grouping pre-processing and the rows changes on the same render\n      cache = createRowsInternalCache({\n        rows: props.rows,\n        getRowId: props.getRowId,\n        loading: props.loading,\n        rowCount: props.rowCount\n      });\n    }\n    throttledRowsChange(cache, false);\n  }, [logger, apiRef, props.rows, props.getRowId, props.loading, props.rowCount, throttledRowsChange]);\n  const handleStrategyProcessorChange = React.useCallback(methodName => {\n    if (methodName === 'rowTreeCreation') {\n      groupRows();\n    }\n  }, [groupRows]);\n  const handleStrategyActivityChange = React.useCallback(() => {\n    // `rowTreeCreation` is the only processor ran when `strategyAvailabilityChange` is fired.\n    // All the other processors listen to `rowsSet` which will be published by the `groupRows` method below.\n    if (apiRef.current.unstable_getActiveStrategy('rowTree') !== gridRowGroupingNameSelector(apiRef)) {\n      groupRows();\n    }\n  }, [apiRef, groupRows]);\n  useGridApiEventHandler(apiRef, 'activeStrategyProcessorChange', handleStrategyProcessorChange);\n  useGridApiEventHandler(apiRef, 'strategyAvailabilityChange', handleStrategyActivityChange);\n  /**\n   * APPLIERS\n   */\n\n  const applyHydrateRowsProcessor = React.useCallback(() => {\n    apiRef.current.setState(state => _extends({}, state, {\n      rows: _extends({}, state.rows, apiRef.current.unstable_applyPipeProcessors('hydrateRows', state.rows.groupingResponseBeforeRowHydration))\n    }));\n    apiRef.current.publishEvent('rowsSet');\n    apiRef.current.forceUpdate();\n  }, [apiRef]);\n  useGridRegisterPipeApplier(apiRef, 'hydrateRows', applyHydrateRowsProcessor);\n  useGridApiMethod(apiRef, rowApi, 'GridRowApi');\n  /**\n   * EFFECTS\n   */\n\n  React.useEffect(() => {\n    return () => {\n      if (timeout.current !== null) {\n        clearTimeout(timeout.current);\n      }\n    };\n  }, []); // The effect do not track any value defined synchronously during the 1st render by hooks called after `useGridRows`\n  // As a consequence, the state generated by the 1st run of this useEffect will always be equal to the initialization one\n\n  const isFirstRender = React.useRef(true);\n  React.useEffect(() => {\n    if (isFirstRender.current) {\n      isFirstRender.current = false;\n      return;\n    }\n    const areNewRowsAlreadyInState = apiRef.current.unstable_caches.rows.rowsBeforePartialUpdates === props.rows;\n    const isNewLoadingAlreadyInState = apiRef.current.unstable_caches.rows.loadingPropBeforePartialUpdates === props.loading;\n    const isNewRowCountAlreadyInState = apiRef.current.unstable_caches.rows.rowCountPropBeforePartialUpdates === props.rowCount; // The new rows have already been applied (most likely in the `'rowGroupsPreProcessingChange'` listener)\n\n    if (areNewRowsAlreadyInState) {\n      // If the loading prop has changed, we need to update its value in the state because it won't be done by `throttledRowsChange`\n      if (!isNewLoadingAlreadyInState) {\n        apiRef.current.setState(state => _extends({}, state, {\n          rows: _extends({}, state.rows, {\n            loading: props.loading\n          })\n        }));\n        apiRef.current.unstable_caches.rows.loadingPropBeforePartialUpdates = props.loading;\n        apiRef.current.forceUpdate();\n      }\n      if (!isNewRowCountAlreadyInState) {\n        apiRef.current.setState(state => _extends({}, state, {\n          rows: _extends({}, state.rows, {\n            totalRowCount: Math.max(props.rowCount || 0, state.rows.totalRowCount),\n            totalTopLevelRowCount: Math.max(props.rowCount || 0, state.rows.totalTopLevelRowCount)\n          })\n        }));\n        apiRef.current.unstable_caches.rows.rowCountPropBeforePartialUpdates = props.rowCount;\n        apiRef.current.forceUpdate();\n      }\n      return;\n    }\n    logger.debug(`Updating all rows, new length ${props.rows.length}`);\n    throttledRowsChange(createRowsInternalCache({\n      rows: props.rows,\n      getRowId: props.getRowId,\n      loading: props.loading,\n      rowCount: props.rowCount\n    }), false);\n  }, [props.rows, props.rowCount, props.getRowId, props.loading, logger, throttledRowsChange, apiRef]);\n};","import { GRID_DEFAULT_STRATEGY, useGridRegisterStrategyProcessor } from '../../core/strategyProcessing';\nconst flatRowTreeCreationMethod = _ref => {\n  let {\n    ids,\n    idRowsLookup,\n    idToIdLookup,\n    previousTree\n  } = _ref;\n  const tree = {};\n  for (let i = 0; i < ids.length; i += 1) {\n    const rowId = ids[i];\n    if (previousTree && previousTree[rowId] && previousTree[rowId].depth === 0 && previousTree[rowId].parent == null &&\n    // pinned row can be unpinned\n    !previousTree[rowId].isPinned) {\n      tree[rowId] = previousTree[rowId];\n    } else {\n      tree[rowId] = {\n        id: rowId,\n        depth: 0,\n        parent: null,\n        groupingKey: '',\n        groupingField: null\n      };\n    }\n  }\n  return {\n    groupingName: GRID_DEFAULT_STRATEGY,\n    tree,\n    treeDepth: 1,\n    idRowsLookup,\n    idToIdLookup,\n    ids\n  };\n};\nexport const useGridRowsPreProcessors = apiRef => {\n  useGridRegisterStrategyProcessor(apiRef, GRID_DEFAULT_STRATEGY, 'rowTreeCreation', flatRowTreeCreationMethod);\n};","import { gridClasses } from '../constants/gridClasses';\nexport function isOverflown(element) {\n  return element.scrollHeight > element.clientHeight || element.scrollWidth > element.clientWidth;\n}\nexport function findParentElementFromClassName(elem, className) {\n  return elem.closest(`.${className}`);\n}\nexport function getRowEl(cell) {\n  if (!cell) {\n    return null;\n  }\n  return findParentElementFromClassName(cell, gridClasses.row);\n} // TODO remove\n\nexport function isGridCellRoot(elem) {\n  return elem != null && elem.classList.contains(gridClasses.cell);\n}\nexport function isGridHeaderCellRoot(elem) {\n  return elem != null && elem.classList.contains(gridClasses.columnHeader);\n}\nfunction escapeOperandAttributeSelector(operand) {\n  return operand.replace(/[\"\\\\]/g, '\\\\$&');\n}\nexport function getGridColumnHeaderElement(root, field) {\n  return root.querySelector(`[role=\"columnheader\"][data-field=\"${escapeOperandAttributeSelector(field)}\"]`);\n}\nfunction getGridRowElementSelector(id) {\n  return `.${gridClasses.row}[data-id=\"${escapeOperandAttributeSelector(String(id))}\"]`;\n}\nexport function getGridRowElement(root, id) {\n  return root.querySelector(getGridRowElementSelector(id));\n}\nexport function getGridCellElement(root, _ref) {\n  let {\n    id,\n    field\n  } = _ref;\n  const rowSelector = getGridRowElementSelector(id);\n  const cellSelector = `.${gridClasses.cell}[data-field=\"${escapeOperandAttributeSelector(field)}\"]`;\n  const selector = `${rowSelector} ${cellSelector}`;\n  return root.querySelector(selector);\n}","import * as React from 'react';\nimport { getGridCellElement, getGridColumnHeaderElement, getGridRowElement } from '../../../utils/domUtils';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { gridFocusCellSelector, gridTabIndexCellSelector } from '../focus/gridFocusStateSelector';\nimport { buildWarning } from '../../../utils/warning';\nlet warnedOnceMissingColumn = false;\nfunction warnMissingColumn(field) {\n  console.warn([`MUI: You are calling getValue('${field}') but the column \\`${field}\\` is not defined.`, `Instead, you can access the data from \\`params.row.${field}\\`.`].join('\\n'));\n  warnedOnceMissingColumn = true;\n}\nconst getCellValueWarning = buildWarning([`MUI: You are calling getValue. This method is deprecated and will be removed in the next major version.`, 'Instead, you can access the data from `params.row`.']);\n/**\n * @requires useGridColumns (method)\n * @requires useGridRows (method)\n * @requires useGridFocus (state)\n * @requires useGridEditing (method)\n * TODO: Impossible priority - useGridEditing also needs to be after useGridParamsApi\n * TODO: Impossible priority - useGridFocus also needs to be after useGridParamsApi\n */\n\nexport function useGridParamsApi(apiRef) {\n  const getColumnHeaderParams = React.useCallback(field => ({\n    field,\n    colDef: apiRef.current.getColumn(field)\n  }), [apiRef]);\n  /**\n   * We want to remove the `getValue` param from `getRowParams`, `getCellParams` and `getBaseCellParams`\n   */\n\n  const getCellValueWithDeprecationWarning = React.useCallback(function () {\n    if (process.env.NODE_ENV !== 'production') {\n      getCellValueWarning();\n    }\n    return apiRef.current.getCellValue(...arguments);\n  }, [apiRef]);\n  const getRowParams = React.useCallback(id => {\n    const row = apiRef.current.getRow(id);\n    if (!row) {\n      throw new Error(`No row with id #${id} found`);\n    }\n    const params = {\n      id,\n      columns: apiRef.current.getAllColumns(),\n      row,\n      // TODO v6: remove\n      getValue: getCellValueWithDeprecationWarning\n    };\n    return params;\n  }, [apiRef, getCellValueWithDeprecationWarning]);\n  const getBaseCellParams = React.useCallback((id, field) => {\n    const row = apiRef.current.getRow(id);\n    const rowNode = apiRef.current.getRowNode(id);\n    if (!row || !rowNode) {\n      throw new Error(`No row with id #${id} found`);\n    }\n    const cellFocus = gridFocusCellSelector(apiRef);\n    const cellTabIndex = gridTabIndexCellSelector(apiRef);\n    const params = {\n      id,\n      field,\n      row,\n      rowNode,\n      value: row[field],\n      colDef: apiRef.current.getColumn(field),\n      cellMode: apiRef.current.getCellMode(id, field),\n      // TODO v6: remove\n      getValue: getCellValueWithDeprecationWarning,\n      api: apiRef.current,\n      hasFocus: cellFocus !== null && cellFocus.field === field && cellFocus.id === id,\n      tabIndex: cellTabIndex && cellTabIndex.field === field && cellTabIndex.id === id ? 0 : -1\n    };\n    return params;\n  }, [apiRef, getCellValueWithDeprecationWarning]);\n  const getCellParams = React.useCallback((id, field) => {\n    const colDef = apiRef.current.getColumn(field);\n    const value = apiRef.current.getCellValue(id, field);\n    const row = apiRef.current.getRow(id);\n    const rowNode = apiRef.current.getRowNode(id);\n    if (!row || !rowNode) {\n      throw new Error(`No row with id #${id} found`);\n    }\n    const cellFocus = gridFocusCellSelector(apiRef);\n    const cellTabIndex = gridTabIndexCellSelector(apiRef);\n    const params = {\n      id,\n      field,\n      row,\n      rowNode,\n      colDef,\n      cellMode: apiRef.current.getCellMode(id, field),\n      // TODO v6: remove\n      getValue: getCellValueWithDeprecationWarning,\n      hasFocus: cellFocus !== null && cellFocus.field === field && cellFocus.id === id,\n      tabIndex: cellTabIndex && cellTabIndex.field === field && cellTabIndex.id === id ? 0 : -1,\n      value,\n      formattedValue: value\n    };\n    if (colDef && colDef.valueFormatter) {\n      params.formattedValue = colDef.valueFormatter({\n        id,\n        field: params.field,\n        value: params.value,\n        api: apiRef.current\n      });\n    }\n    params.isEditable = colDef && apiRef.current.isCellEditable(params);\n    return params;\n  }, [apiRef, getCellValueWithDeprecationWarning]);\n  const getCellValue = React.useCallback((id, field) => {\n    const colDef = apiRef.current.getColumn(field);\n    if (process.env.NODE_ENV !== 'production') {\n      if (!colDef && !warnedOnceMissingColumn) {\n        warnMissingColumn(field);\n      }\n    }\n    if (!colDef || !colDef.valueGetter) {\n      const rowModel = apiRef.current.getRow(id);\n      if (!rowModel) {\n        throw new Error(`No row with id #${id} found`);\n      }\n      return rowModel[field];\n    }\n    return colDef.valueGetter(getBaseCellParams(id, field));\n  }, [apiRef, getBaseCellParams]);\n  const getColumnHeaderElement = React.useCallback(field => {\n    if (!apiRef.current.rootElementRef.current) {\n      return null;\n    }\n    return getGridColumnHeaderElement(apiRef.current.rootElementRef.current, field);\n  }, [apiRef]);\n  const getRowElement = React.useCallback(id => {\n    if (!apiRef.current.rootElementRef.current) {\n      return null;\n    }\n    return getGridRowElement(apiRef.current.rootElementRef.current, id);\n  }, [apiRef]);\n  const getCellElement = React.useCallback((id, field) => {\n    if (!apiRef.current.rootElementRef.current) {\n      return null;\n    }\n    return getGridCellElement(apiRef.current.rootElementRef.current, {\n      id,\n      field\n    });\n  }, [apiRef]);\n  const paramsApi = {\n    getCellValue,\n    getCellParams,\n    getCellElement,\n    getRowParams,\n    getRowElement,\n    getColumnHeaderParams,\n    getColumnHeaderElement\n  };\n  useGridApiMethod(apiRef, paramsApi, 'GridParamsApi');\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridApiEventHandler } from '../../utils/useGridApiEventHandler';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { useGridLogger } from '../../utils/useGridLogger';\nimport { gridRowsLookupSelector } from '../rows/gridRowsSelector';\nimport { gridSelectionStateSelector, selectedGridRowsSelector, selectedIdsLookupSelector } from './gridSelectionSelector';\nimport { gridPaginatedVisibleSortedGridRowIdsSelector } from '../pagination';\nimport { gridFocusCellSelector } from '../focus/gridFocusStateSelector';\nimport { gridVisibleSortedRowIdsSelector } from '../filter/gridFilterSelector';\nimport { GRID_CHECKBOX_SELECTION_COL_DEF, GRID_ACTIONS_COLUMN_TYPE } from '../../../colDef';\nimport { GridCellModes } from '../../../models/gridEditRowModel';\nimport { isKeyboardEvent, isNavigationKey } from '../../../utils/keyboardUtils';\nimport { getVisibleRows, useGridVisibleRows } from '../../utils/useGridVisibleRows';\nimport { GRID_DETAIL_PANEL_TOGGLE_FIELD } from '../../../constants/gridDetailPanelToggleField';\nimport { gridClasses } from '../../../constants/gridClasses';\nconst getSelectionModelPropValue = (selectionModelProp, prevSelectionModel) => {\n  if (selectionModelProp == null) {\n    return selectionModelProp;\n  }\n  if (Array.isArray(selectionModelProp)) {\n    return selectionModelProp;\n  }\n  if (prevSelectionModel && prevSelectionModel[0] === selectionModelProp) {\n    return prevSelectionModel;\n  }\n  return [selectionModelProp];\n};\nexport const selectionStateInitializer = (state, props) => {\n  var _getSelectionModelPro;\n  return _extends({}, state, {\n    selection: (_getSelectionModelPro = getSelectionModelPropValue(props.selectionModel)) != null ? _getSelectionModelPro : []\n  });\n};\n/**\n * @requires useGridRows (state, method) - can be after\n * @requires useGridParamsApi (method) - can be after\n * @requires useGridFocus (state) - can be after\n * @requires useGridKeyboardNavigation (`cellKeyDown` event must first be consumed by it)\n */\n\nexport const useGridSelection = (apiRef, props) => {\n  const logger = useGridLogger(apiRef, 'useGridSelection');\n  const propSelectionModel = React.useMemo(() => {\n    return getSelectionModelPropValue(props.selectionModel, gridSelectionStateSelector(apiRef.current.state));\n  }, [apiRef, props.selectionModel]);\n  const lastRowToggled = React.useRef(null);\n  apiRef.current.unstable_registerControlState({\n    stateId: 'selection',\n    propModel: propSelectionModel,\n    propOnChange: props.onSelectionModelChange,\n    stateSelector: gridSelectionStateSelector,\n    changeEvent: 'selectionChange'\n  });\n  const {\n    checkboxSelection,\n    disableMultipleSelection,\n    disableSelectionOnClick,\n    pagination,\n    paginationMode,\n    isRowSelectable: propIsRowSelectable\n  } = props;\n  const canHaveMultipleSelection = !disableMultipleSelection || checkboxSelection;\n  const visibleRows = useGridVisibleRows(apiRef, props);\n  const expandMouseRowRangeSelection = React.useCallback(id => {\n    var _lastRowToggled$curre;\n    let endId = id;\n    const startId = (_lastRowToggled$curre = lastRowToggled.current) != null ? _lastRowToggled$curre : id;\n    const isSelected = apiRef.current.isRowSelected(id);\n    if (isSelected) {\n      const visibleRowIds = gridVisibleSortedRowIdsSelector(apiRef);\n      const startIndex = visibleRowIds.findIndex(rowId => rowId === startId);\n      const endIndex = visibleRowIds.findIndex(rowId => rowId === endId);\n      if (startIndex === endIndex) {\n        return;\n      }\n      if (startIndex > endIndex) {\n        endId = visibleRowIds[endIndex + 1];\n      } else {\n        endId = visibleRowIds[endIndex - 1];\n      }\n    }\n    lastRowToggled.current = id;\n    apiRef.current.selectRowRange({\n      startId,\n      endId\n    }, !isSelected);\n  }, [apiRef]);\n  /**\n   * API METHODS\n   */\n\n  const setSelectionModel = React.useCallback(model => {\n    const currentModel = gridSelectionStateSelector(apiRef.current.state);\n    if (currentModel !== model) {\n      logger.debug(`Setting selection model`);\n      apiRef.current.setState(state => _extends({}, state, {\n        selection: model\n      }));\n      apiRef.current.forceUpdate();\n    }\n  }, [apiRef, logger]);\n  const isRowSelected = React.useCallback(id => gridSelectionStateSelector(apiRef.current.state).includes(id), [apiRef]);\n  const isRowSelectable = React.useCallback(id => {\n    if (propIsRowSelectable && !propIsRowSelectable(apiRef.current.getRowParams(id))) {\n      return false;\n    }\n    const rowNode = apiRef.current.getRowNode(id);\n    if ((rowNode == null ? void 0 : rowNode.position) === 'footer' || rowNode != null && rowNode.isPinned) {\n      return false;\n    }\n    return true;\n  }, [apiRef, propIsRowSelectable]);\n  const getSelectedRows = React.useCallback(() => selectedGridRowsSelector(apiRef), [apiRef]);\n  const selectRow = React.useCallback(function (id) {\n    let isSelected = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n    let resetSelection = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n    if (!apiRef.current.isRowSelectable(id)) {\n      return;\n    }\n    lastRowToggled.current = id;\n    if (resetSelection) {\n      logger.debug(`Setting selection for row ${id}`);\n      apiRef.current.setSelectionModel(isSelected ? [id] : []);\n    } else {\n      logger.debug(`Toggling selection for row ${id}`);\n      const selection = gridSelectionStateSelector(apiRef.current.state);\n      const newSelection = selection.filter(el => el !== id);\n      if (isSelected) {\n        newSelection.push(id);\n      }\n      const isSelectionValid = newSelection.length < 2 || canHaveMultipleSelection;\n      if (isSelectionValid) {\n        apiRef.current.setSelectionModel(newSelection);\n      }\n    }\n  }, [apiRef, logger, canHaveMultipleSelection]);\n  const selectRows = React.useCallback(function (ids) {\n    let isSelected = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n    let resetSelection = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n    logger.debug(`Setting selection for several rows`);\n    const selectableIds = ids.filter(id => apiRef.current.isRowSelectable(id));\n    let newSelection;\n    if (resetSelection) {\n      newSelection = isSelected ? selectableIds : [];\n    } else {\n      // We clone the existing object to avoid mutating the same object returned by the selector to others part of the project\n      const selectionLookup = _extends({}, selectedIdsLookupSelector(apiRef));\n      selectableIds.forEach(id => {\n        if (isSelected) {\n          selectionLookup[id] = id;\n        } else {\n          delete selectionLookup[id];\n        }\n      });\n      newSelection = Object.values(selectionLookup);\n    }\n    const isSelectionValid = newSelection.length < 2 || canHaveMultipleSelection;\n    if (isSelectionValid) {\n      apiRef.current.setSelectionModel(newSelection);\n    }\n  }, [apiRef, logger, canHaveMultipleSelection]);\n  const selectRowRange = React.useCallback(function (_ref) {\n    let {\n      startId,\n      endId\n    } = _ref;\n    let isSelected = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n    let resetSelection = arguments.length > 2 ? arguments[2] : undefined;\n    if (!apiRef.current.getRow(startId) || !apiRef.current.getRow(endId)) {\n      return;\n    }\n    logger.debug(`Expanding selection from row ${startId} to row ${endId}`); // Using rows from all pages allow to select a range across several pages\n\n    const allPagesRowIds = gridVisibleSortedRowIdsSelector(apiRef);\n    const startIndex = allPagesRowIds.indexOf(startId);\n    const endIndex = allPagesRowIds.indexOf(endId);\n    const [start, end] = startIndex > endIndex ? [endIndex, startIndex] : [startIndex, endIndex];\n    const rowsBetweenStartAndEnd = allPagesRowIds.slice(start, end + 1);\n    apiRef.current.selectRows(rowsBetweenStartAndEnd, isSelected, resetSelection);\n  }, [apiRef, logger]);\n  const selectionApi = {\n    selectRow,\n    selectRows,\n    selectRowRange,\n    setSelectionModel,\n    getSelectedRows,\n    isRowSelected,\n    isRowSelectable\n  };\n  useGridApiMethod(apiRef, selectionApi, 'GridSelectionApi');\n  /**\n   * EVENTS\n   */\n\n  const removeOutdatedSelection = React.useCallback(() => {\n    if (props.keepNonExistentRowsSelected) {\n      return;\n    }\n    const currentSelection = gridSelectionStateSelector(apiRef.current.state);\n    const rowsLookup = gridRowsLookupSelector(apiRef); // We clone the existing object to avoid mutating the same object returned by the selector to others part of the project\n\n    const selectionLookup = _extends({}, selectedIdsLookupSelector(apiRef));\n    let hasChanged = false;\n    currentSelection.forEach(id => {\n      if (!rowsLookup[id]) {\n        delete selectionLookup[id];\n        hasChanged = true;\n      }\n    });\n    if (hasChanged) {\n      apiRef.current.setSelectionModel(Object.values(selectionLookup));\n    }\n  }, [apiRef, props.keepNonExistentRowsSelected]);\n  const handleSingleRowSelection = React.useCallback((id, event) => {\n    const hasCtrlKey = event.metaKey || event.ctrlKey; // multiple selection is only allowed if:\n    // - it is a checkboxSelection\n    // - it is a keyboard selection\n    // - Ctrl is pressed\n\n    const isMultipleSelectionDisabled = !checkboxSelection && !hasCtrlKey && !isKeyboardEvent(event);\n    const resetSelection = !canHaveMultipleSelection || isMultipleSelectionDisabled;\n    const isSelected = apiRef.current.isRowSelected(id);\n    if (resetSelection) {\n      apiRef.current.selectRow(id, !isMultipleSelectionDisabled ? !isSelected : true, true);\n    } else {\n      apiRef.current.selectRow(id, !isSelected, false);\n    }\n  }, [apiRef, canHaveMultipleSelection, checkboxSelection]);\n  const handleRowClick = React.useCallback((params, event) => {\n    var _closest;\n    if (disableSelectionOnClick) {\n      return;\n    }\n    const field = (_closest = event.target.closest(`.${gridClasses.cell}`)) == null ? void 0 : _closest.getAttribute('data-field');\n    if (field === GRID_CHECKBOX_SELECTION_COL_DEF.field) {\n      // click on checkbox should not trigger row selection\n      return;\n    }\n    if (field === GRID_DETAIL_PANEL_TOGGLE_FIELD) {\n      // click to open the detail panel should not select the row\n      return;\n    }\n    if (field) {\n      const column = apiRef.current.getColumn(field);\n      if (column.type === GRID_ACTIONS_COLUMN_TYPE) {\n        return;\n      }\n    }\n    const rowNode = apiRef.current.getRowNode(params.id);\n    if (rowNode.isPinned) {\n      return;\n    }\n    if (event.shiftKey && (canHaveMultipleSelection || checkboxSelection)) {\n      expandMouseRowRangeSelection(params.id);\n    } else {\n      handleSingleRowSelection(params.id, event);\n    }\n  }, [disableSelectionOnClick, canHaveMultipleSelection, checkboxSelection, apiRef, expandMouseRowRangeSelection, handleSingleRowSelection]);\n  const preventSelectionOnShift = React.useCallback((params, event) => {\n    if (canHaveMultipleSelection && event.shiftKey) {\n      var _window$getSelection;\n      (_window$getSelection = window.getSelection()) == null ? void 0 : _window$getSelection.removeAllRanges();\n    }\n  }, [canHaveMultipleSelection]);\n  const handleRowSelectionCheckboxChange = React.useCallback((params, event) => {\n    if (event.nativeEvent.shiftKey) {\n      expandMouseRowRangeSelection(params.id);\n    } else {\n      apiRef.current.selectRow(params.id, params.value);\n    }\n  }, [apiRef, expandMouseRowRangeSelection]);\n  const handleHeaderSelectionCheckboxChange = React.useCallback(params => {\n    const shouldLimitSelectionToCurrentPage = props.checkboxSelectionVisibleOnly && props.pagination;\n    const rowsToBeSelected = shouldLimitSelectionToCurrentPage ? gridPaginatedVisibleSortedGridRowIdsSelector(apiRef) : gridVisibleSortedRowIdsSelector(apiRef);\n    apiRef.current.selectRows(rowsToBeSelected, params.value);\n  }, [apiRef, props.checkboxSelectionVisibleOnly, props.pagination]);\n  const handleCellKeyDown = React.useCallback((params, event) => {\n    // Get the most recent cell mode because it may have been changed by another listener\n    if (apiRef.current.getCellMode(params.id, params.field) === GridCellModes.Edit) {\n      return;\n    } // Ignore portal\n    // Do not apply shortcuts if the focus is not on the cell root component\n\n    if (!event.currentTarget.contains(event.target)) {\n      return;\n    }\n    if (isNavigationKey(event.key) && event.shiftKey) {\n      // The cell that has focus after the keyboard navigation\n      const focusCell = gridFocusCellSelector(apiRef);\n      if (focusCell && focusCell.id !== params.id) {\n        event.preventDefault();\n        const isNextRowSelected = apiRef.current.isRowSelected(focusCell.id);\n        if (!canHaveMultipleSelection) {\n          apiRef.current.selectRow(focusCell.id, !isNextRowSelected, true);\n          return;\n        }\n        const newRowIndex = apiRef.current.getRowIndexRelativeToVisibleRows(focusCell.id);\n        const previousRowIndex = apiRef.current.getRowIndexRelativeToVisibleRows(params.id);\n        let start;\n        let end;\n        if (newRowIndex > previousRowIndex) {\n          if (isNextRowSelected) {\n            // We are navigating to the bottom of the page and adding selected rows\n            start = previousRowIndex;\n            end = newRowIndex - 1;\n          } else {\n            // We are navigating to the bottom of the page and removing selected rows\n            start = previousRowIndex;\n            end = newRowIndex;\n          }\n        } else {\n          // eslint-disable-next-line no-lonely-if\n          if (isNextRowSelected) {\n            // We are navigating to the top of the page and removing selected rows\n            start = newRowIndex + 1;\n            end = previousRowIndex;\n          } else {\n            // We are navigating to the top of the page and adding selected rows\n            start = newRowIndex;\n            end = previousRowIndex;\n          }\n        }\n        const rowsBetweenStartAndEnd = visibleRows.rows.slice(start, end + 1).map(row => row.id);\n        apiRef.current.selectRows(rowsBetweenStartAndEnd, !isNextRowSelected);\n        return;\n      }\n    }\n    if (event.key === ' ' && event.shiftKey) {\n      event.preventDefault();\n      handleSingleRowSelection(params.id, event);\n      return;\n    }\n    if (event.key.toLowerCase() === 'a' && (event.ctrlKey || event.metaKey)) {\n      event.preventDefault();\n      selectRows(apiRef.current.getAllRowIds(), true);\n    }\n  }, [apiRef, handleSingleRowSelection, selectRows, visibleRows.rows, canHaveMultipleSelection]);\n  useGridApiEventHandler(apiRef, 'sortedRowsSet', removeOutdatedSelection);\n  useGridApiEventHandler(apiRef, 'rowClick', handleRowClick);\n  useGridApiEventHandler(apiRef, 'rowSelectionCheckboxChange', handleRowSelectionCheckboxChange);\n  useGridApiEventHandler(apiRef, 'headerSelectionCheckboxChange', handleHeaderSelectionCheckboxChange);\n  useGridApiEventHandler(apiRef, 'cellMouseDown', preventSelectionOnShift);\n  useGridApiEventHandler(apiRef, 'cellKeyDown', handleCellKeyDown);\n  /**\n   * EFFECTS\n   */\n\n  React.useEffect(() => {\n    if (propSelectionModel !== undefined) {\n      apiRef.current.setSelectionModel(propSelectionModel);\n    }\n  }, [apiRef, propSelectionModel]);\n  const isStateControlled = propSelectionModel != null;\n  React.useEffect(() => {\n    if (isStateControlled) {\n      return;\n    } // props.isRowSelectable changed\n\n    const currentSelection = gridSelectionStateSelector(apiRef.current.state);\n    if (isRowSelectable) {\n      const newSelection = currentSelection.filter(id => isRowSelectable(id));\n      if (newSelection.length < currentSelection.length) {\n        apiRef.current.setSelectionModel(newSelection);\n      }\n    }\n  }, [apiRef, isRowSelectable, isStateControlled]);\n  React.useEffect(() => {\n    const currentSelection = gridSelectionStateSelector(apiRef.current.state);\n    if (!canHaveMultipleSelection && currentSelection.length > 1) {\n      const {\n        rows: currentPageRows\n      } = getVisibleRows(apiRef, {\n        pagination,\n        paginationMode\n      });\n      const currentPageRowsLookup = currentPageRows.reduce((acc, _ref2) => {\n        let {\n          id\n        } = _ref2;\n        acc[id] = true;\n        return acc;\n      }, {});\n      const firstSelectableRow = currentSelection.find(id => {\n        let isSelectable = true;\n        if (isRowSelectable) {\n          isSelectable = isRowSelectable(id);\n        }\n        return isSelectable && currentPageRowsLookup[id]; // Check if the row is in the current page\n      });\n      apiRef.current.setSelectionModel(firstSelectableRow !== undefined ? [firstSelectableRow] : []);\n    }\n  }, [apiRef, canHaveMultipleSelection, checkboxSelection, disableMultipleSelection, isRowSelectable, pagination, paginationMode]);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { unstable_composeClasses as composeClasses } from '@mui/material';\nimport { useGridRegisterPipeProcessor } from '../../core/pipeProcessing';\nimport { getDataGridUtilityClass } from '../../../constants';\nimport { GRID_CHECKBOX_SELECTION_COL_DEF, GRID_CHECKBOX_SELECTION_FIELD } from '../../../colDef';\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  return React.useMemo(() => {\n    const slots = {\n      cellCheckbox: ['cellCheckbox'],\n      columnHeaderCheckbox: ['columnHeaderCheckbox']\n    };\n    return composeClasses(slots, getDataGridUtilityClass, classes);\n  }, [classes]);\n};\nexport const useGridSelectionPreProcessors = (apiRef, props) => {\n  const ownerState = {\n    classes: props.classes\n  };\n  const classes = useUtilityClasses(ownerState);\n  const updateSelectionColumn = React.useCallback(columnsState => {\n    const selectionColumn = _extends({}, GRID_CHECKBOX_SELECTION_COL_DEF, {\n      cellClassName: classes.cellCheckbox,\n      headerClassName: classes.columnHeaderCheckbox,\n      headerName: apiRef.current.getLocaleText('checkboxSelectionHeaderName')\n    });\n    const shouldHaveSelectionColumn = props.checkboxSelection;\n    const haveSelectionColumn = columnsState.lookup[GRID_CHECKBOX_SELECTION_FIELD] != null;\n    if (shouldHaveSelectionColumn && !haveSelectionColumn) {\n      columnsState.lookup[GRID_CHECKBOX_SELECTION_FIELD] = selectionColumn;\n      columnsState.all = [GRID_CHECKBOX_SELECTION_FIELD, ...columnsState.all];\n    } else if (!shouldHaveSelectionColumn && haveSelectionColumn) {\n      delete columnsState.lookup[GRID_CHECKBOX_SELECTION_FIELD];\n      columnsState.all = columnsState.all.filter(field => field !== GRID_CHECKBOX_SELECTION_FIELD);\n    } else if (shouldHaveSelectionColumn && haveSelectionColumn) {\n      columnsState.lookup[GRID_CHECKBOX_SELECTION_FIELD] = _extends({}, selectionColumn, columnsState.lookup[GRID_CHECKBOX_SELECTION_FIELD]);\n    }\n    return columnsState;\n  }, [apiRef, classes, props.checkboxSelection]);\n  useGridRegisterPipeProcessor(apiRef, 'hydrateColumns', updateSelectionColumn);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { GridFeatureModeConstant } from '../../../models/gridFeatureMode';\nimport { isEnterKey } from '../../../utils/keyboardUtils';\nimport { useGridApiEventHandler } from '../../utils/useGridApiEventHandler';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { useGridLogger } from '../../utils/useGridLogger';\nimport { gridColumnLookupSelector } from '../columns/gridColumnsSelector';\nimport { gridSortedRowEntriesSelector, gridSortedRowIdsSelector, gridSortModelSelector } from './gridSortingSelector';\nimport { gridRowIdsSelector, gridRowTreeSelector } from '../rows';\nimport { useFirstRender } from '../../utils/useFirstRender';\nimport { useGridRegisterStrategyProcessor, GRID_DEFAULT_STRATEGY } from '../../core/strategyProcessing';\nimport { buildAggregatedSortingApplier, mergeStateWithSortModel, getNextGridSortDirection, sanitizeSortModel } from './gridSortingUtils';\nimport { useGridRegisterPipeProcessor } from '../../core/pipeProcessing';\nexport const sortingStateInitializer = (state, props) => {\n  var _ref, _props$sortModel, _props$initialState, _props$initialState$s;\n  const sortModel = (_ref = (_props$sortModel = props.sortModel) != null ? _props$sortModel : (_props$initialState = props.initialState) == null ? void 0 : (_props$initialState$s = _props$initialState.sorting) == null ? void 0 : _props$initialState$s.sortModel) != null ? _ref : [];\n  return _extends({}, state, {\n    sorting: {\n      sortModel: sanitizeSortModel(sortModel, props.disableMultipleColumnsSorting),\n      sortedRows: []\n    }\n  });\n};\n/**\n * @requires useGridRows (event)\n * @requires useGridColumns (event)\n */\n\nexport const useGridSorting = (apiRef, props) => {\n  var _props$initialState3, _props$initialState3$;\n  const logger = useGridLogger(apiRef, 'useGridSorting');\n  apiRef.current.unstable_registerControlState({\n    stateId: 'sortModel',\n    propModel: props.sortModel,\n    propOnChange: props.onSortModelChange,\n    stateSelector: gridSortModelSelector,\n    changeEvent: 'sortModelChange'\n  });\n  const upsertSortModel = React.useCallback((field, sortItem) => {\n    const sortModel = gridSortModelSelector(apiRef);\n    const existingIdx = sortModel.findIndex(c => c.field === field);\n    let newSortModel = [...sortModel];\n    if (existingIdx > -1) {\n      if (!sortItem) {\n        newSortModel.splice(existingIdx, 1);\n      } else {\n        newSortModel.splice(existingIdx, 1, sortItem);\n      }\n    } else {\n      newSortModel = [...sortModel, sortItem];\n    }\n    return newSortModel;\n  }, [apiRef]);\n  const createSortItem = React.useCallback((col, directionOverride) => {\n    var _col$sortingOrder2;\n    const sortModel = gridSortModelSelector(apiRef);\n    const existing = sortModel.find(c => c.field === col.field);\n    if (existing) {\n      var _col$sortingOrder;\n      const nextSort = directionOverride === undefined ? getNextGridSortDirection((_col$sortingOrder = col.sortingOrder) != null ? _col$sortingOrder : props.sortingOrder, existing.sort) : directionOverride;\n      return nextSort == null ? undefined : _extends({}, existing, {\n        sort: nextSort\n      });\n    }\n    return {\n      field: col.field,\n      sort: directionOverride === undefined ? getNextGridSortDirection((_col$sortingOrder2 = col.sortingOrder) != null ? _col$sortingOrder2 : props.sortingOrder) : directionOverride\n    };\n  }, [apiRef, props.sortingOrder]);\n  /**\n   * API METHODS\n   */\n\n  const applySorting = React.useCallback(() => {\n    apiRef.current.setState(state => {\n      if (props.sortingMode === GridFeatureModeConstant.server) {\n        logger.debug('Skipping sorting rows as sortingMode = server');\n        return _extends({}, state, {\n          sorting: _extends({}, state.sorting, {\n            sortedRows: gridRowIdsSelector(state, apiRef.current.instanceId)\n          })\n        });\n      }\n      const sortModel = gridSortModelSelector(state, apiRef.current.instanceId);\n      const sortRowList = buildAggregatedSortingApplier(sortModel, apiRef);\n      const sortedRows = apiRef.current.unstable_applyStrategyProcessor('sorting', {\n        sortRowList\n      });\n      return _extends({}, state, {\n        sorting: _extends({}, state.sorting, {\n          sortedRows\n        })\n      });\n    });\n    apiRef.current.publishEvent('sortedRowsSet');\n    apiRef.current.forceUpdate();\n  }, [apiRef, logger, props.sortingMode]);\n  const setSortModel = React.useCallback(model => {\n    const currentModel = gridSortModelSelector(apiRef);\n    if (currentModel !== model) {\n      logger.debug(`Setting sort model`);\n      apiRef.current.setState(mergeStateWithSortModel(model, props.disableMultipleColumnsSorting));\n      apiRef.current.forceUpdate();\n      apiRef.current.applySorting();\n    }\n  }, [apiRef, logger, props.disableMultipleColumnsSorting]);\n  const sortColumn = React.useCallback((column, direction, allowMultipleSorting) => {\n    if (!column.sortable) {\n      return;\n    }\n    const sortItem = createSortItem(column, direction);\n    let sortModel;\n    if (!allowMultipleSorting || props.disableMultipleColumnsSorting) {\n      sortModel = !sortItem ? [] : [sortItem];\n    } else {\n      sortModel = upsertSortModel(column.field, sortItem);\n    }\n    apiRef.current.setSortModel(sortModel);\n  }, [apiRef, upsertSortModel, createSortItem, props.disableMultipleColumnsSorting]);\n  const getSortModel = React.useCallback(() => gridSortModelSelector(apiRef), [apiRef]);\n  const getSortedRows = React.useCallback(() => {\n    const sortedRows = gridSortedRowEntriesSelector(apiRef);\n    return sortedRows.map(row => row.model);\n  }, [apiRef]);\n  const getSortedRowIds = React.useCallback(() => gridSortedRowIdsSelector(apiRef), [apiRef]);\n  const getRowIndex = React.useCallback(id => apiRef.current.getSortedRowIds().indexOf(id), [apiRef]);\n  const getRowIdFromRowIndex = React.useCallback(index => apiRef.current.getSortedRowIds()[index], [apiRef]);\n  const sortApi = {\n    getSortModel,\n    getSortedRows,\n    getSortedRowIds,\n    getRowIndex,\n    getRowIdFromRowIndex,\n    setSortModel,\n    sortColumn,\n    applySorting\n  };\n  useGridApiMethod(apiRef, sortApi, 'GridSortApi');\n  /**\n   * PRE-PROCESSING\n   */\n\n  const stateExportPreProcessing = React.useCallback((prevState, context) => {\n    var _props$initialState2, _props$initialState2$;\n    const sortModelToExport = gridSortModelSelector(apiRef);\n    const shouldExportSortModel =\n    // Always export if the `exportOnlyDirtyModels` property is activated\n    !context.exportOnlyDirtyModels ||\n    // Always export if the model is controlled\n    props.sortModel != null ||\n    // Always export if the model has been initialized\n    ((_props$initialState2 = props.initialState) == null ? void 0 : (_props$initialState2$ = _props$initialState2.sorting) == null ? void 0 : _props$initialState2$.sortModel) != null ||\n    // Export if the model is not empty\n    sortModelToExport.length > 0;\n    if (!shouldExportSortModel) {\n      return prevState;\n    }\n    return _extends({}, prevState, {\n      sorting: {\n        sortModel: sortModelToExport\n      }\n    });\n  }, [apiRef, props.sortModel, (_props$initialState3 = props.initialState) == null ? void 0 : (_props$initialState3$ = _props$initialState3.sorting) == null ? void 0 : _props$initialState3$.sortModel]);\n  const stateRestorePreProcessing = React.useCallback((params, context) => {\n    var _context$stateToResto;\n    const sortModel = (_context$stateToResto = context.stateToRestore.sorting) == null ? void 0 : _context$stateToResto.sortModel;\n    if (sortModel == null) {\n      return params;\n    }\n    apiRef.current.setState(mergeStateWithSortModel(sortModel, props.disableMultipleColumnsSorting));\n    return _extends({}, params, {\n      callbacks: [...params.callbacks, apiRef.current.applySorting]\n    });\n  }, [apiRef, props.disableMultipleColumnsSorting]);\n  const flatSortingMethod = React.useCallback(params => {\n    const rowTree = gridRowTreeSelector(apiRef);\n    if (!params.sortRowList) {\n      const bodyRowIds = [];\n      const footerRowIds = [];\n      gridRowIdsSelector(apiRef).forEach(rowId => {\n        if (rowTree[rowId].isPinned) {\n          return;\n        }\n        if (rowTree[rowId].position === 'footer') {\n          footerRowIds.push(rowId);\n        } else {\n          bodyRowIds.push(rowId);\n        }\n      });\n      return [...bodyRowIds, ...footerRowIds];\n    }\n    const bodyRows = [];\n    const footerRowIds = [];\n    Object.values(rowTree).forEach(rowNode => {\n      if (rowNode.isPinned) {\n        return;\n      }\n      if (rowNode.position === 'footer') {\n        footerRowIds.push(rowNode.id);\n      } else {\n        bodyRows.push(rowNode);\n      }\n    });\n    return [...params.sortRowList(bodyRows), ...footerRowIds];\n  }, [apiRef]);\n  useGridRegisterPipeProcessor(apiRef, 'exportState', stateExportPreProcessing);\n  useGridRegisterPipeProcessor(apiRef, 'restoreState', stateRestorePreProcessing);\n  useGridRegisterStrategyProcessor(apiRef, GRID_DEFAULT_STRATEGY, 'sorting', flatSortingMethod);\n  /**\n   * EVENTS\n   */\n\n  const handleColumnHeaderClick = React.useCallback((_ref2, event) => {\n    let {\n      colDef\n    } = _ref2;\n    const allowMultipleSorting = event.shiftKey || event.metaKey || event.ctrlKey;\n    sortColumn(colDef, undefined, allowMultipleSorting);\n  }, [sortColumn]);\n  const handleColumnHeaderKeyDown = React.useCallback((_ref3, event) => {\n    let {\n      colDef\n    } = _ref3;\n    // Ctrl + Enter opens the column menu\n    if (isEnterKey(event.key) && !event.ctrlKey && !event.metaKey) {\n      sortColumn(colDef, undefined, event.shiftKey);\n    }\n  }, [sortColumn]);\n  const handleColumnsChange = React.useCallback(() => {\n    // When the columns change we check that the sorted columns are still part of the dataset\n    const sortModel = gridSortModelSelector(apiRef);\n    const latestColumns = gridColumnLookupSelector(apiRef);\n    if (sortModel.length > 0) {\n      const newModel = sortModel.filter(sortItem => latestColumns[sortItem.field]);\n      if (newModel.length < sortModel.length) {\n        apiRef.current.setSortModel(newModel);\n      }\n    }\n  }, [apiRef]);\n  const handleStrategyProcessorChange = React.useCallback(methodName => {\n    if (methodName === 'sorting') {\n      apiRef.current.applySorting();\n    }\n  }, [apiRef]);\n  useGridApiEventHandler(apiRef, 'columnHeaderClick', handleColumnHeaderClick);\n  useGridApiEventHandler(apiRef, 'columnHeaderKeyDown', handleColumnHeaderKeyDown);\n  useGridApiEventHandler(apiRef, 'rowsSet', apiRef.current.applySorting);\n  useGridApiEventHandler(apiRef, 'columnsChange', handleColumnsChange);\n  useGridApiEventHandler(apiRef, 'activeStrategyProcessorChange', handleStrategyProcessorChange);\n  /**\n   * 1ST RENDER\n   */\n\n  useFirstRender(() => {\n    apiRef.current.applySorting();\n  });\n  /**\n   * EFFECTS\n   */\n\n  React.useEffect(() => {\n    if (props.sortModel !== undefined) {\n      apiRef.current.setSortModel(props.sortModel);\n    }\n  }, [apiRef, props.sortModel]);\n};","import * as React from 'react';\nimport { useGridLogger } from '../../utils/useGridLogger';\nimport { gridColumnPositionsSelector, gridVisibleColumnDefinitionsSelector } from '../columns/gridColumnsSelector';\nimport { useGridSelector } from '../../utils/useGridSelector';\nimport { gridPageSelector, gridPageSizeSelector } from '../pagination/gridPaginationSelector';\nimport { gridRowCountSelector } from '../rows/gridRowsSelector';\nimport { gridRowsMetaSelector } from '../rows/gridRowsMetaSelector';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { gridVisibleSortedRowEntriesSelector } from '../filter/gridFilterSelector';\nimport { gridClasses } from '../../../constants/gridClasses'; // Logic copied from https://www.w3.org/TR/wai-aria-practices/examples/listbox/js/listbox.js\n// Similar to https://developer.mozilla.org/en-US/docs/Web/API/Element/scrollIntoView\n\nfunction scrollIntoView(dimensions) {\n  const {\n    clientHeight,\n    scrollTop,\n    offsetHeight,\n    offsetTop\n  } = dimensions;\n  const elementBottom = offsetTop + offsetHeight; // Always scroll to top when cell is higher than viewport to avoid scroll jump\n  // See https://github.com/mui/mui-x/issues/4513 and https://github.com/mui/mui-x/issues/4514\n\n  if (offsetHeight > clientHeight) {\n    return offsetTop;\n  }\n  if (elementBottom - clientHeight > scrollTop) {\n    return elementBottom - clientHeight;\n  }\n  if (offsetTop < scrollTop) {\n    return offsetTop;\n  }\n  return undefined;\n}\n/**\n * @requires useGridPagination (state) - can be after, async only\n * @requires useGridColumns (state) - can be after, async only\n * @requires useGridRows (state) - can be after, async only\n * @requires useGridRowsMeta (state) - can be after, async only\n * @requires useGridFilter (state)\n * @requires useGridColumnSpanning (method)\n */\n\nexport const useGridScroll = (apiRef, props) => {\n  const logger = useGridLogger(apiRef, 'useGridScroll');\n  const colRef = apiRef.current.columnHeadersElementRef;\n  const windowRef = apiRef.current.windowRef;\n  const visibleSortedRows = useGridSelector(apiRef, gridVisibleSortedRowEntriesSelector);\n  const scrollToIndexes = React.useCallback(params => {\n    const totalRowCount = gridRowCountSelector(apiRef);\n    const visibleColumns = gridVisibleColumnDefinitionsSelector(apiRef);\n    const scrollToHeader = params.rowIndex == null;\n    if (!scrollToHeader && totalRowCount === 0 || visibleColumns.length === 0) {\n      return false;\n    }\n    logger.debug(`Scrolling to cell at row ${params.rowIndex}, col: ${params.colIndex} `);\n    let scrollCoordinates = {};\n    if (params.colIndex != null) {\n      const columnPositions = gridColumnPositionsSelector(apiRef);\n      let cellWidth;\n      if (typeof params.rowIndex !== 'undefined') {\n        var _visibleSortedRows$pa;\n        const rowId = (_visibleSortedRows$pa = visibleSortedRows[params.rowIndex]) == null ? void 0 : _visibleSortedRows$pa.id;\n        const cellColSpanInfo = apiRef.current.unstable_getCellColSpanInfo(rowId, params.colIndex);\n        if (cellColSpanInfo && !cellColSpanInfo.spannedByColSpan) {\n          cellWidth = cellColSpanInfo.cellProps.width;\n        }\n      }\n      if (typeof cellWidth === 'undefined') {\n        cellWidth = visibleColumns[params.colIndex].computedWidth;\n      }\n      scrollCoordinates.left = scrollIntoView({\n        clientHeight: windowRef.current.clientWidth,\n        scrollTop: windowRef.current.scrollLeft,\n        offsetHeight: cellWidth,\n        offsetTop: columnPositions[params.colIndex]\n      });\n    }\n    if (params.rowIndex != null) {\n      var _querySelector, _querySelector2;\n      const rowsMeta = gridRowsMetaSelector(apiRef.current.state);\n      const page = gridPageSelector(apiRef);\n      const pageSize = gridPageSizeSelector(apiRef);\n      const elementIndex = !props.pagination ? params.rowIndex : params.rowIndex - page * pageSize;\n      const targetOffsetHeight = rowsMeta.positions[elementIndex + 1] ? rowsMeta.positions[elementIndex + 1] - rowsMeta.positions[elementIndex] : rowsMeta.currentPageTotalHeight - rowsMeta.positions[elementIndex];\n      const topPinnedRowsHeight = ((_querySelector = windowRef.current.querySelector(`.${gridClasses['pinnedRows--top']}`)) == null ? void 0 : _querySelector.clientHeight) || 0;\n      const bottomPinnedRowsHeight = ((_querySelector2 = windowRef.current.querySelector(`.${gridClasses['pinnedRows--bottom']}`)) == null ? void 0 : _querySelector2.clientHeight) || 0;\n      scrollCoordinates.top = scrollIntoView({\n        clientHeight: windowRef.current.clientHeight - topPinnedRowsHeight - bottomPinnedRowsHeight,\n        scrollTop: windowRef.current.scrollTop,\n        offsetHeight: targetOffsetHeight,\n        offsetTop: rowsMeta.positions[elementIndex]\n      });\n    }\n    scrollCoordinates = apiRef.current.unstable_applyPipeProcessors('scrollToIndexes', scrollCoordinates, params);\n    if (typeof scrollCoordinates.left !== undefined || typeof scrollCoordinates.top !== undefined) {\n      apiRef.current.scroll(scrollCoordinates);\n      return true;\n    }\n    return false;\n  }, [logger, apiRef, windowRef, props.pagination, visibleSortedRows]);\n  const scroll = React.useCallback(params => {\n    if (windowRef.current && params.left != null && colRef.current) {\n      colRef.current.scrollLeft = params.left;\n      windowRef.current.scrollLeft = params.left;\n      logger.debug(`Scrolling left: ${params.left}`);\n    }\n    if (windowRef.current && params.top != null) {\n      windowRef.current.scrollTop = params.top;\n      logger.debug(`Scrolling top: ${params.top}`);\n    }\n    logger.debug(`Scrolling, updating container, and viewport`);\n  }, [windowRef, colRef, logger]);\n  const getScrollPosition = React.useCallback(() => {\n    if (!(windowRef != null && windowRef.current)) {\n      return {\n        top: 0,\n        left: 0\n      };\n    }\n    return {\n      top: windowRef.current.scrollTop,\n      left: windowRef.current.scrollLeft\n    };\n  }, [windowRef]);\n  const scrollApi = {\n    scroll,\n    scrollToIndexes,\n    getScrollPosition\n  };\n  useGridApiMethod(apiRef, scrollApi, 'GridScrollApi');\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { debounce, capitalize } from '@mui/material/utils';\nimport { useGridVisibleRows } from '../../utils/useGridVisibleRows';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { useGridSelector } from '../../utils/useGridSelector';\nimport { gridDensityRowHeightSelector, gridDensityFactorSelector } from '../density/densitySelector';\nimport { gridFilterStateSelector } from '../filter/gridFilterSelector';\nimport { gridPaginationSelector } from '../pagination/gridPaginationSelector';\nimport { gridSortingStateSelector } from '../sorting/gridSortingSelector';\nimport { useGridRegisterPipeApplier } from '../../core/pipeProcessing';\nimport { gridPinnedRowsSelector } from './gridRowsSelector';\nexport const rowsMetaStateInitializer = state => _extends({}, state, {\n  rowsMeta: {\n    currentPageTotalHeight: 0,\n    positions: []\n  }\n});\n/**\n * @requires useGridPageSize (method)\n * @requires useGridPage (method)\n */\n\nexport const useGridRowsMeta = (apiRef, props) => {\n  const {\n    getRowHeight: getRowHeightProp,\n    getRowSpacing,\n    getEstimatedRowHeight\n  } = props;\n  const rowsHeightLookup = React.useRef({}); // Inspired by https://github.com/bvaughn/react-virtualized/blob/master/source/Grid/utils/CellSizeAndPositionManager.js\n\n  const lastMeasuredRowIndex = React.useRef(-1);\n  const hasRowWithAutoHeight = React.useRef(false);\n  const rowHeightFromDensity = useGridSelector(apiRef, gridDensityRowHeightSelector);\n  const filterState = useGridSelector(apiRef, gridFilterStateSelector);\n  const paginationState = useGridSelector(apiRef, gridPaginationSelector);\n  const sortingState = useGridSelector(apiRef, gridSortingStateSelector);\n  const currentPage = useGridVisibleRows(apiRef, props);\n  const pinnedRows = useGridSelector(apiRef, gridPinnedRowsSelector);\n  const hydrateRowsMeta = React.useCallback(() => {\n    var _pinnedRows$top, _pinnedRows$bottom;\n    hasRowWithAutoHeight.current = false;\n    const densityFactor = gridDensityFactorSelector(apiRef.current.state, apiRef.current.instanceId);\n    const calculateRowProcessedSizes = row => {\n      if (!rowsHeightLookup.current[row.id]) {\n        rowsHeightLookup.current[row.id] = {\n          sizes: {\n            baseCenter: rowHeightFromDensity\n          },\n          isResized: false,\n          autoHeight: false,\n          needsFirstMeasurement: true // Assume all rows will need to be measured by default\n        };\n      }\n      const {\n        isResized,\n        needsFirstMeasurement,\n        sizes\n      } = rowsHeightLookup.current[row.id];\n      let baseRowHeight = rowHeightFromDensity;\n      const existingBaseRowHeight = sizes.baseCenter;\n      if (isResized) {\n        // Do not recalculate resized row height and use the value from the lookup\n        baseRowHeight = existingBaseRowHeight;\n      } else if (getRowHeightProp) {\n        const rowHeightFromUser = getRowHeightProp(_extends({}, row, {\n          densityFactor\n        }));\n        if (rowHeightFromUser === 'auto') {\n          if (needsFirstMeasurement) {\n            const estimatedRowHeight = getEstimatedRowHeight ? getEstimatedRowHeight(_extends({}, row, {\n              densityFactor\n            })) : rowHeightFromDensity; // If the row was not measured yet use the estimated row height\n\n            baseRowHeight = estimatedRowHeight != null ? estimatedRowHeight : rowHeightFromDensity;\n          } else {\n            baseRowHeight = existingBaseRowHeight;\n          }\n          hasRowWithAutoHeight.current = true;\n          rowsHeightLookup.current[row.id].autoHeight = true;\n        } else {\n          // Default back to base rowHeight if getRowHeight returns null or undefined.\n          baseRowHeight = rowHeightFromUser != null ? rowHeightFromUser : rowHeightFromDensity;\n          rowsHeightLookup.current[row.id].needsFirstMeasurement = false;\n          rowsHeightLookup.current[row.id].autoHeight = false;\n        }\n      } else {\n        rowsHeightLookup.current[row.id].needsFirstMeasurement = false;\n      }\n      const existingBaseSizes = Object.entries(sizes).reduce((acc, _ref) => {\n        let [key, size] = _ref;\n        if (/^base[A-Z]/.test(key)) {\n          acc[key] = size;\n        }\n        return acc;\n      }, {}); // We use an object to make simple to check if a height is already added or not\n\n      const initialHeights = _extends({}, existingBaseSizes, {\n        baseCenter: baseRowHeight\n      });\n      if (getRowSpacing) {\n        var _spacing$top, _spacing$bottom;\n        const indexRelativeToCurrentPage = apiRef.current.getRowIndexRelativeToVisibleRows(row.id);\n        const spacing = getRowSpacing(_extends({}, row, {\n          isFirstVisible: indexRelativeToCurrentPage === 0,\n          isLastVisible: indexRelativeToCurrentPage === currentPage.rows.length - 1,\n          indexRelativeToCurrentPage\n        }));\n        initialHeights.spacingTop = (_spacing$top = spacing.top) != null ? _spacing$top : 0;\n        initialHeights.spacingBottom = (_spacing$bottom = spacing.bottom) != null ? _spacing$bottom : 0;\n      }\n      const processedSizes = apiRef.current.unstable_applyPipeProcessors('rowHeight', initialHeights, row);\n      rowsHeightLookup.current[row.id].sizes = processedSizes;\n      return processedSizes;\n    };\n    const positions = [];\n    const currentPageTotalHeight = currentPage.rows.reduce((acc, row) => {\n      positions.push(acc);\n      let maximumBaseSize = 0;\n      let otherSizes = 0;\n      const processedSizes = calculateRowProcessedSizes(row);\n      Object.entries(processedSizes).forEach(_ref2 => {\n        let [size, value] = _ref2;\n        if (/^base[A-Z]/.test(size)) {\n          maximumBaseSize = value > maximumBaseSize ? value : maximumBaseSize;\n        } else {\n          otherSizes += value;\n        }\n      });\n      return acc + maximumBaseSize + otherSizes;\n    }, 0);\n    pinnedRows == null ? void 0 : (_pinnedRows$top = pinnedRows.top) == null ? void 0 : _pinnedRows$top.forEach(row => {\n      calculateRowProcessedSizes(row);\n    });\n    pinnedRows == null ? void 0 : (_pinnedRows$bottom = pinnedRows.bottom) == null ? void 0 : _pinnedRows$bottom.forEach(row => {\n      calculateRowProcessedSizes(row);\n    });\n    apiRef.current.setState(state => {\n      return _extends({}, state, {\n        rowsMeta: {\n          currentPageTotalHeight,\n          positions\n        }\n      });\n    });\n    if (!hasRowWithAutoHeight.current) {\n      // No row has height=auto, so all rows are already measured\n      lastMeasuredRowIndex.current = Infinity;\n    }\n    apiRef.current.forceUpdate();\n  }, [apiRef, currentPage.rows, rowHeightFromDensity, getRowHeightProp, getRowSpacing, getEstimatedRowHeight, pinnedRows]);\n  const getRowHeight = React.useCallback(rowId => {\n    const height = rowsHeightLookup.current[rowId];\n    return height ? height.sizes.baseCenter : rowHeightFromDensity;\n  }, [rowHeightFromDensity]);\n  const getRowInternalSizes = rowId => {\n    var _rowsHeightLookup$cur;\n    return (_rowsHeightLookup$cur = rowsHeightLookup.current[rowId]) == null ? void 0 : _rowsHeightLookup$cur.sizes;\n  };\n  const setRowHeight = React.useCallback((id, height) => {\n    rowsHeightLookup.current[id].sizes.baseCenter = height;\n    rowsHeightLookup.current[id].isResized = true;\n    rowsHeightLookup.current[id].needsFirstMeasurement = false;\n    hydrateRowsMeta();\n  }, [hydrateRowsMeta]);\n  const debouncedHydrateRowsMeta = React.useMemo(() => debounce(hydrateRowsMeta), [hydrateRowsMeta]);\n  const storeMeasuredRowHeight = React.useCallback((id, height, position) => {\n    if (!rowsHeightLookup.current[id] || !rowsHeightLookup.current[id].autoHeight) {\n      return;\n    } // Only trigger hydration if the value is different, otherwise we trigger a loop\n\n    const needsHydration = rowsHeightLookup.current[id].sizes[`base${capitalize(position)}`] !== height;\n    rowsHeightLookup.current[id].needsFirstMeasurement = false;\n    rowsHeightLookup.current[id].sizes[`base${capitalize(position)}`] = height;\n    if (needsHydration) {\n      debouncedHydrateRowsMeta();\n    }\n  }, [debouncedHydrateRowsMeta]);\n  const rowHasAutoHeight = React.useCallback(id => {\n    var _rowsHeightLookup$cur2;\n    return ((_rowsHeightLookup$cur2 = rowsHeightLookup.current[id]) == null ? void 0 : _rowsHeightLookup$cur2.autoHeight) || false;\n  }, []);\n  const getLastMeasuredRowIndex = React.useCallback(() => {\n    return lastMeasuredRowIndex.current;\n  }, []);\n  const setLastMeasuredRowIndex = React.useCallback(index => {\n    if (hasRowWithAutoHeight.current && index > lastMeasuredRowIndex.current) {\n      lastMeasuredRowIndex.current = index;\n    }\n  }, []);\n  const resetRowHeights = React.useCallback(() => {\n    rowsHeightLookup.current = {};\n    hydrateRowsMeta();\n  }, [hydrateRowsMeta]); // The effect is used to build the rows meta data - currentPageTotalHeight and positions.\n  // Because of variable row height this is needed for the virtualization\n\n  React.useEffect(() => {\n    hydrateRowsMeta();\n  }, [rowHeightFromDensity, filterState, paginationState, sortingState, hydrateRowsMeta]);\n  useGridRegisterPipeApplier(apiRef, 'rowHeight', hydrateRowsMeta);\n  const rowsMetaApi = {\n    unstable_getLastMeasuredRowIndex: getLastMeasuredRowIndex,\n    unstable_setLastMeasuredRowIndex: setLastMeasuredRowIndex,\n    unstable_rowHasAutoHeight: rowHasAutoHeight,\n    unstable_getRowHeight: getRowHeight,\n    unstable_getRowInternalSizes: getRowInternalSizes,\n    unstable_setRowHeight: setRowHeight,\n    unstable_storeRowHeightMeasurement: storeMeasuredRowHeight,\n    resetRowHeights\n  };\n  useGridApiMethod(apiRef, rowsMetaApi, 'GridRowsMetaApi');\n};","import { useGridInitialization } from '../hooks/core/useGridInitialization';\nimport { useGridInitializeState } from '../hooks/utils/useGridInitializeState';\nimport { useGridClipboard } from '../hooks/features/clipboard/useGridClipboard';\nimport { columnMenuStateInitializer, useGridColumnMenu } from '../hooks/features/columnMenu/useGridColumnMenu';\nimport { useGridColumns, columnsStateInitializer } from '../hooks/features/columns/useGridColumns';\nimport { densityStateInitializer, useGridDensity } from '../hooks/features/density/useGridDensity';\nimport { useGridCsvExport } from '../hooks/features/export/useGridCsvExport';\nimport { useGridPrintExport } from '../hooks/features/export/useGridPrintExport';\nimport { useGridFilter, filterStateInitializer } from '../hooks/features/filter/useGridFilter';\nimport { focusStateInitializer, useGridFocus } from '../hooks/features/focus/useGridFocus';\nimport { useGridKeyboardNavigation } from '../hooks/features/keyboardNavigation/useGridKeyboardNavigation';\nimport { useGridPagination, paginationStateInitializer } from '../hooks/features/pagination/useGridPagination';\nimport { useGridPreferencesPanel, preferencePanelStateInitializer } from '../hooks/features/preferencesPanel/useGridPreferencesPanel';\nimport { useGridEditing as useGridEditing_old, editingStateInitializer as editingStateInitializer_old } from '../hooks/features/editRows/useGridEditing.old';\nimport { useGridEditing as useGridEditing_new, editingStateInitializer as editingStateInitializer_new } from '../hooks/features/editRows/useGridEditing.new';\nimport { useGridRows, rowsStateInitializer } from '../hooks/features/rows/useGridRows';\nimport { useGridRowsPreProcessors } from '../hooks/features/rows/useGridRowsPreProcessors';\nimport { useGridParamsApi } from '../hooks/features/rows/useGridParamsApi';\nimport { selectionStateInitializer, useGridSelection } from '../hooks/features/selection/useGridSelection';\nimport { useGridSelectionPreProcessors } from '../hooks/features/selection/useGridSelectionPreProcessors';\nimport { useGridSorting, sortingStateInitializer } from '../hooks/features/sorting/useGridSorting';\nimport { useGridScroll } from '../hooks/features/scroll/useGridScroll';\nimport { useGridEvents } from '../hooks/features/events/useGridEvents';\nimport { useGridDimensions } from '../hooks/features/dimensions/useGridDimensions';\nimport { rowsMetaStateInitializer, useGridRowsMeta } from '../hooks/features/rows/useGridRowsMeta';\nimport { useGridStatePersistence } from '../hooks/features/statePersistence/useGridStatePersistence';\nimport { useGridColumnSpanning } from '../hooks/features/columns/useGridColumnSpanning';\nimport { useGridColumnGrouping, columnGroupsStateInitializer } from '../hooks/features/columnGrouping/useGridColumnGrouping';\nimport { useGridColumnGroupingPreProcessors } from '../hooks/features/columnGrouping/useGridColumnGroupingPreProcessors';\nexport const useDataGridComponent = props => {\n  var _props$experimentalFe, _props$experimentalFe2;\n  const apiRef = useGridInitialization(undefined, props);\n  /**\n   * Register all pre-processors called during state initialization here.\n   */\n\n  useGridColumnGroupingPreProcessors(apiRef, props);\n  useGridSelectionPreProcessors(apiRef, props);\n  useGridRowsPreProcessors(apiRef);\n  /**\n   * Register all state initializers here.\n   */\n\n  useGridInitializeState(selectionStateInitializer, apiRef, props);\n  useGridInitializeState(columnsStateInitializer, apiRef, props);\n  useGridInitializeState(columnGroupsStateInitializer, apiRef, props);\n  useGridInitializeState(rowsStateInitializer, apiRef, props);\n  useGridInitializeState((_props$experimentalFe = props.experimentalFeatures) != null && _props$experimentalFe.newEditingApi ? editingStateInitializer_new : editingStateInitializer_old, apiRef, props);\n  useGridInitializeState(focusStateInitializer, apiRef, props);\n  useGridInitializeState(sortingStateInitializer, apiRef, props);\n  useGridInitializeState(preferencePanelStateInitializer, apiRef, props);\n  useGridInitializeState(filterStateInitializer, apiRef, props);\n  useGridInitializeState(densityStateInitializer, apiRef, props);\n  useGridInitializeState(paginationStateInitializer, apiRef, props);\n  useGridInitializeState(rowsMetaStateInitializer, apiRef, props);\n  useGridInitializeState(columnMenuStateInitializer, apiRef, props);\n  useGridKeyboardNavigation(apiRef, props);\n  useGridSelection(apiRef, props);\n  useGridColumns(apiRef, props);\n  useGridRows(apiRef, props);\n  useGridParamsApi(apiRef);\n  useGridColumnSpanning(apiRef);\n  useGridColumnGrouping(apiRef, props);\n  const useGridEditing = (_props$experimentalFe2 = props.experimentalFeatures) != null && _props$experimentalFe2.newEditingApi ? useGridEditing_new : useGridEditing_old;\n  useGridEditing(apiRef, props);\n  useGridFocus(apiRef, props);\n  useGridPreferencesPanel(apiRef, props);\n  useGridFilter(apiRef, props);\n  useGridSorting(apiRef, props);\n  useGridDensity(apiRef, props);\n  useGridPagination(apiRef, props);\n  useGridRowsMeta(apiRef, props);\n  useGridScroll(apiRef, props);\n  useGridColumnMenu(apiRef);\n  useGridCsvExport(apiRef);\n  useGridPrintExport(apiRef, props);\n  useGridClipboard(apiRef);\n  useGridDimensions(apiRef, props);\n  useGridEvents(apiRef, props);\n  useGridStatePersistence(apiRef);\n  return apiRef;\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridRegisterPipeProcessor } from '../../core/pipeProcessing';\nimport { isDeepEqual } from '../../../utils/utils';\nimport { unwrapGroupingColumnModel, hasGroupPath } from './useGridColumnGrouping';\nexport const useGridColumnGroupingPreProcessors = (apiRef, props) => {\n  var _props$experimentalFe2;\n  const addHeaderGroups = React.useCallback(columnsState => {\n    var _props$experimentalFe;\n    if (!((_props$experimentalFe = props.experimentalFeatures) != null && _props$experimentalFe.columnGrouping)) {\n      return columnsState;\n    }\n    const unwrappedGroupingModel = unwrapGroupingColumnModel(props.columnGroupingModel);\n    columnsState.all.forEach(field => {\n      var _unwrappedGroupingMod, _unwrappedGroupingMod2;\n      const newGroupPath = (_unwrappedGroupingMod = unwrappedGroupingModel[field]) != null ? _unwrappedGroupingMod : [];\n      const lookupElement = columnsState.lookup[field];\n      if (hasGroupPath(lookupElement) && isDeepEqual(newGroupPath, lookupElement == null ? void 0 : lookupElement.groupPath)) {\n        // Avoid modifying the pointer to allow shadow comparison in https://github.com/mui/mui-x/blob/f90afbf10a1264ee8b453d7549dd7cdd6110a4ed/packages/grid/x-data-grid/src/hooks/features/columns/gridColumnsUtils.ts#L446:L453\n        return;\n      }\n      columnsState.lookup[field] = _extends({}, columnsState.lookup[field], {\n        groupPath: (_unwrappedGroupingMod2 = unwrappedGroupingModel[field]) != null ? _unwrappedGroupingMod2 : []\n      });\n    });\n    return columnsState;\n  }, [props.columnGroupingModel, (_props$experimentalFe2 = props.experimentalFeatures) == null ? void 0 : _props$experimentalFe2.columnGrouping]);\n  useGridRegisterPipeProcessor(apiRef, 'hydrateColumns', addHeaderGroups);\n};","import * as React from 'react';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { useGridApiEventHandler } from '../../utils/useGridApiEventHandler';\n\n/**\n * @requires useGridColumns (method, event)\n * @requires useGridParamsApi (method)\n */\nexport const useGridColumnSpanning = apiRef => {\n  const lookup = React.useRef({});\n  const setCellColSpanInfo = React.useCallback((rowId, columnIndex, cellColSpanInfo) => {\n    const sizes = lookup.current;\n    if (!sizes[rowId]) {\n      sizes[rowId] = {};\n    }\n    sizes[rowId][columnIndex] = cellColSpanInfo;\n  }, []);\n  const getCellColSpanInfo = React.useCallback((rowId, columnIndex) => {\n    var _lookup$current$rowId;\n    return (_lookup$current$rowId = lookup.current[rowId]) == null ? void 0 : _lookup$current$rowId[columnIndex];\n  }, []); // Calculate `colSpan` for the cell.\n\n  const calculateCellColSpan = React.useCallback(params => {\n    const {\n      columnIndex,\n      rowId,\n      minFirstColumnIndex,\n      maxLastColumnIndex,\n      columns\n    } = params;\n    const columnsLength = columns.length;\n    const column = columns[columnIndex];\n    const colSpan = typeof column.colSpan === 'function' ? column.colSpan(apiRef.current.getCellParams(rowId, column.field)) : column.colSpan;\n    if (!colSpan || colSpan === 1) {\n      setCellColSpanInfo(rowId, columnIndex, {\n        spannedByColSpan: false,\n        cellProps: {\n          colSpan: 1,\n          width: column.computedWidth\n        }\n      });\n      return {\n        colSpan: 1\n      };\n    }\n    let width = column.computedWidth;\n    for (let j = 1; j < colSpan; j += 1) {\n      const nextColumnIndex = columnIndex + j; // Cells should be spanned only within their column section (left-pinned, right-pinned and unpinned).\n\n      if (nextColumnIndex >= minFirstColumnIndex && nextColumnIndex < maxLastColumnIndex) {\n        const nextColumn = columns[nextColumnIndex];\n        width += nextColumn.computedWidth;\n        setCellColSpanInfo(rowId, columnIndex + j, {\n          spannedByColSpan: true,\n          rightVisibleCellIndex: Math.min(columnIndex + colSpan, columnsLength - 1),\n          leftVisibleCellIndex: columnIndex\n        });\n      }\n      setCellColSpanInfo(rowId, columnIndex, {\n        spannedByColSpan: false,\n        cellProps: {\n          colSpan,\n          width\n        }\n      });\n    }\n    return {\n      colSpan\n    };\n  }, [apiRef, setCellColSpanInfo]); // Calculate `colSpan` for each cell in the row\n\n  const calculateColSpan = React.useCallback(_ref => {\n    let {\n      rowId,\n      minFirstColumn,\n      maxLastColumn,\n      columns\n    } = _ref;\n    for (let i = minFirstColumn; i < maxLastColumn; i += 1) {\n      const cellProps = calculateCellColSpan({\n        columnIndex: i,\n        rowId,\n        minFirstColumnIndex: minFirstColumn,\n        maxLastColumnIndex: maxLastColumn,\n        columns\n      });\n      if (cellProps.colSpan > 1) {\n        i += cellProps.colSpan - 1;\n      }\n    }\n  }, [calculateCellColSpan]);\n  const columnSpanningApi = {\n    unstable_getCellColSpanInfo: getCellColSpanInfo,\n    unstable_calculateColSpan: calculateColSpan\n  };\n  useGridApiMethod(apiRef, columnSpanningApi, 'GridColumnSpanningAPI');\n  const handleColumnReorderChange = React.useCallback(() => {\n    // `colSpan` needs to be recalculated after column reordering\n    lookup.current = {};\n  }, []);\n  useGridApiEventHandler(apiRef, 'columnOrderChange', handleColumnReorderChange);\n};","import * as React from 'react';\nimport { debounce, ownerDocument, unstable_useEnhancedEffect as useEnhancedEffect } from '@mui/material/utils';\nimport { useGridApiEventHandler, useGridApiOptionHandler } from '../../utils/useGridApiEventHandler';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { useGridLogger } from '../../utils/useGridLogger';\nimport { gridColumnsTotalWidthSelector } from '../columns';\nimport { gridDensityTotalHeaderHeightSelector, gridDensityRowHeightSelector } from '../density';\nimport { useGridSelector } from '../../utils';\nimport { getVisibleRows } from '../../utils/useGridVisibleRows';\nimport { gridRowsMetaSelector } from '../rows/gridRowsMetaSelector';\nimport { calculatePinnedRowsHeight } from '../rows/gridRowsUtils';\nconst isTestEnvironment = process.env.NODE_ENV === 'test';\nconst hasScroll = _ref => {\n  let {\n    content,\n    container,\n    scrollBarSize\n  } = _ref;\n  const hasScrollXIfNoYScrollBar = content.width > container.width;\n  const hasScrollYIfNoXScrollBar = content.height > container.height;\n  let hasScrollX = false;\n  let hasScrollY = false;\n  if (hasScrollXIfNoYScrollBar || hasScrollYIfNoXScrollBar) {\n    hasScrollX = hasScrollXIfNoYScrollBar;\n    hasScrollY = content.height + (hasScrollX ? scrollBarSize : 0) > container.height; // We recalculate the scroll x to consider the size of the y scrollbar.\n\n    if (hasScrollY) {\n      hasScrollX = content.width + scrollBarSize > container.width;\n    }\n  }\n  return {\n    hasScrollX,\n    hasScrollY\n  };\n};\nexport function useGridDimensions(apiRef, props) {\n  const logger = useGridLogger(apiRef, 'useResizeContainer');\n  const errorShown = React.useRef(false);\n  const rootDimensionsRef = React.useRef(null);\n  const fullDimensionsRef = React.useRef(null);\n  const rowsMeta = useGridSelector(apiRef, gridRowsMetaSelector);\n  const totalHeaderHeight = useGridSelector(apiRef, gridDensityTotalHeaderHeightSelector);\n  const updateGridDimensionsRef = React.useCallback(() => {\n    var _apiRef$current$rootE;\n    const rootElement = (_apiRef$current$rootE = apiRef.current.rootElementRef) == null ? void 0 : _apiRef$current$rootE.current;\n    const columnsTotalWidth = gridColumnsTotalWidthSelector(apiRef);\n    const pinnedRowsHeight = calculatePinnedRowsHeight(apiRef);\n    if (!rootDimensionsRef.current) {\n      return;\n    }\n    let scrollBarSize;\n    if (props.scrollbarSize != null) {\n      scrollBarSize = props.scrollbarSize;\n    } else if (!columnsTotalWidth || !rootElement) {\n      scrollBarSize = 0;\n    } else {\n      const doc = ownerDocument(rootElement);\n      const scrollDiv = doc.createElement('div');\n      scrollDiv.style.width = '99px';\n      scrollDiv.style.height = '99px';\n      scrollDiv.style.position = 'absolute';\n      scrollDiv.style.overflow = 'scroll';\n      scrollDiv.className = 'scrollDiv';\n      rootElement.appendChild(scrollDiv);\n      scrollBarSize = scrollDiv.offsetWidth - scrollDiv.clientWidth;\n      rootElement.removeChild(scrollDiv);\n    }\n    let viewportOuterSize;\n    let hasScrollX;\n    let hasScrollY;\n    if (props.autoHeight) {\n      hasScrollY = false;\n      hasScrollX = Math.round(columnsTotalWidth) > rootDimensionsRef.current.width;\n      viewportOuterSize = {\n        width: rootDimensionsRef.current.width,\n        height: rowsMeta.currentPageTotalHeight + (hasScrollX ? scrollBarSize : 0)\n      };\n    } else {\n      viewportOuterSize = {\n        width: rootDimensionsRef.current.width,\n        height: rootDimensionsRef.current.height - totalHeaderHeight\n      };\n      const scrollInformation = hasScroll({\n        content: {\n          width: Math.round(columnsTotalWidth),\n          height: rowsMeta.currentPageTotalHeight\n        },\n        container: {\n          width: viewportOuterSize.width,\n          height: viewportOuterSize.height - pinnedRowsHeight.top - pinnedRowsHeight.bottom\n        },\n        scrollBarSize\n      });\n      hasScrollY = scrollInformation.hasScrollY;\n      hasScrollX = scrollInformation.hasScrollX;\n    }\n    const viewportInnerSize = {\n      width: viewportOuterSize.width - (hasScrollY ? scrollBarSize : 0),\n      height: viewportOuterSize.height - (hasScrollX ? scrollBarSize : 0)\n    };\n    const newFullDimensions = {\n      viewportOuterSize,\n      viewportInnerSize,\n      hasScrollX,\n      hasScrollY,\n      scrollBarSize\n    };\n    const prevDimensions = fullDimensionsRef.current;\n    fullDimensionsRef.current = newFullDimensions;\n    if (newFullDimensions.viewportInnerSize.width !== (prevDimensions == null ? void 0 : prevDimensions.viewportInnerSize.width) || newFullDimensions.viewportInnerSize.height !== (prevDimensions == null ? void 0 : prevDimensions.viewportInnerSize.height)) {\n      apiRef.current.publishEvent('viewportInnerSizeChange', newFullDimensions.viewportInnerSize);\n    }\n  }, [apiRef, props.scrollbarSize, props.autoHeight, totalHeaderHeight, rowsMeta.currentPageTotalHeight]);\n  const resize = React.useCallback(() => {\n    updateGridDimensionsRef();\n    apiRef.current.publishEvent('debouncedResize', rootDimensionsRef.current);\n  }, [apiRef, updateGridDimensionsRef]);\n  const getRootDimensions = React.useCallback(() => fullDimensionsRef.current, []);\n  const getViewportPageSize = React.useCallback(() => {\n    const dimensions = apiRef.current.getRootDimensions();\n    if (!dimensions) {\n      return 0;\n    }\n    const currentPage = getVisibleRows(apiRef, {\n      pagination: props.pagination,\n      paginationMode: props.paginationMode\n    }); // TODO: Use a combination of scrollTop, dimensions.viewportInnerSize.height and rowsMeta.possitions\n    // to find out the maximum number of rows that can fit in the visible part of the grid\n\n    if (props.getRowHeight) {\n      const renderContext = apiRef.current.unstable_getRenderContext();\n      const viewportPageSize = renderContext.lastRowIndex - renderContext.firstRowIndex;\n      return Math.min(viewportPageSize - 1, currentPage.rows.length);\n    }\n    const maximumPageSizeWithoutScrollBar = Math.floor(dimensions.viewportInnerSize.height / gridDensityRowHeightSelector(apiRef));\n    return Math.min(maximumPageSizeWithoutScrollBar, currentPage.rows.length);\n  }, [apiRef, props.pagination, props.paginationMode, props.getRowHeight]);\n  const dimensionsApi = {\n    resize,\n    getRootDimensions,\n    unstable_getViewportPageSize: getViewportPageSize,\n    unstable_updateGridDimensionsRef: updateGridDimensionsRef\n  };\n  useGridApiMethod(apiRef, dimensionsApi, 'GridDimensionsApi');\n  const debounceResize = React.useMemo(() => debounce(resize, 60), [resize]);\n  const isFirstSizing = React.useRef(true);\n  const handleResize = React.useCallback(size => {\n    rootDimensionsRef.current = size; // jsdom has no layout capabilities\n\n    const isJSDOM = /jsdom/.test(window.navigator.userAgent);\n    if (size.height === 0 && !errorShown.current && !props.autoHeight && !isJSDOM) {\n      logger.error(['The parent DOM element of the data grid has an empty height.', 'Please make sure that this element has an intrinsic height.', 'The grid displays with a height of 0px.', '', 'More details: https://mui.com/r/x-data-grid-no-dimensions.'].join('\\n'));\n      errorShown.current = true;\n    }\n    if (size.width === 0 && !errorShown.current && !isJSDOM) {\n      logger.error(['The parent DOM element of the data grid has an empty width.', 'Please make sure that this element has an intrinsic width.', 'The grid displays with a width of 0px.', '', 'More details: https://mui.com/r/x-data-grid-no-dimensions.'].join('\\n'));\n      errorShown.current = true;\n    }\n    if (isTestEnvironment) {\n      // We don't need to debounce the resize for tests.\n      resize();\n      isFirstSizing.current = false;\n      return;\n    }\n    if (isFirstSizing.current) {\n      // We want to initialize the grid dimensions as soon as possible to avoid flickering\n      resize();\n      isFirstSizing.current = false;\n      return;\n    }\n    debounceResize();\n  }, [props.autoHeight, debounceResize, logger, resize]);\n  useEnhancedEffect(() => updateGridDimensionsRef(), [updateGridDimensionsRef]);\n  useGridApiOptionHandler(apiRef, 'sortedRowsSet', updateGridDimensionsRef);\n  useGridApiOptionHandler(apiRef, 'pageChange', updateGridDimensionsRef);\n  useGridApiOptionHandler(apiRef, 'pageSizeChange', updateGridDimensionsRef);\n  useGridApiOptionHandler(apiRef, 'columnsChange', updateGridDimensionsRef);\n  useGridApiEventHandler(apiRef, 'resize', handleResize);\n  useGridApiOptionHandler(apiRef, 'debouncedResize', props.onResize);\n}","import { useGridApiOptionHandler } from '../../utils/useGridApiEventHandler';\n\n/**\n * @requires useGridFocus (event) - can be after, async only\n * @requires useGridColumns (event) - can be after, async only\n */\nexport function useGridEvents(apiRef, props) {\n  useGridApiOptionHandler(apiRef, 'columnHeaderClick', props.onColumnHeaderClick);\n  useGridApiOptionHandler(apiRef, 'columnHeaderDoubleClick', props.onColumnHeaderDoubleClick);\n  useGridApiOptionHandler(apiRef, 'columnHeaderOver', props.onColumnHeaderOver);\n  useGridApiOptionHandler(apiRef, 'columnHeaderOut', props.onColumnHeaderOut);\n  useGridApiOptionHandler(apiRef, 'columnHeaderEnter', props.onColumnHeaderEnter);\n  useGridApiOptionHandler(apiRef, 'columnHeaderLeave', props.onColumnHeaderLeave);\n  useGridApiOptionHandler(apiRef, 'columnOrderChange', props.onColumnOrderChange);\n  useGridApiOptionHandler(apiRef, 'cellClick', props.onCellClick);\n  useGridApiOptionHandler(apiRef, 'cellDoubleClick', props.onCellDoubleClick);\n  useGridApiOptionHandler(apiRef, 'cellKeyDown', props.onCellKeyDown);\n  useGridApiOptionHandler(apiRef, 'cellFocusOut', props.onCellFocusOut);\n  useGridApiOptionHandler(apiRef, 'preferencePanelClose', props.onPreferencePanelClose);\n  useGridApiOptionHandler(apiRef, 'preferencePanelOpen', props.onPreferencePanelOpen);\n  useGridApiOptionHandler(apiRef, 'menuOpen', props.onMenuOpen);\n  useGridApiOptionHandler(apiRef, 'menuClose', props.onMenuClose);\n  useGridApiOptionHandler(apiRef, 'rowDoubleClick', props.onRowDoubleClick);\n  useGridApiOptionHandler(apiRef, 'rowClick', props.onRowClick);\n  useGridApiOptionHandler(apiRef, 'componentError', props.onError);\n  useGridApiOptionHandler(apiRef, 'stateChange', props.onStateChange);\n}","import * as React from 'react';\nimport { useGridApiMethod } from '../../utils';\nexport const useGridStatePersistence = apiRef => {\n  const exportState = React.useCallback(function () {\n    let params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    const stateToExport = apiRef.current.unstable_applyPipeProcessors('exportState', {}, params);\n    return stateToExport;\n  }, [apiRef]);\n  const restoreState = React.useCallback(stateToRestore => {\n    const response = apiRef.current.unstable_applyPipeProcessors('restoreState', {\n      callbacks: []\n    }, {\n      stateToRestore\n    });\n    response.callbacks.forEach(callback => {\n      callback();\n    });\n    apiRef.current.forceUpdate();\n  }, [apiRef]);\n  const statePersistenceApi = {\n    exportState,\n    restoreState\n  };\n  useGridApiMethod(apiRef, statePersistenceApi, 'GridStatePersistenceApi');\n};","export const GRID_DEFAULT_LOCALE_TEXT = {\n  // Root\n  noRowsLabel: 'No rows',\n  noResultsOverlayLabel: 'No results found.',\n  errorOverlayDefaultLabel: 'An error occurred.',\n  // Density selector toolbar button text\n  toolbarDensity: 'Density',\n  toolbarDensityLabel: 'Density',\n  toolbarDensityCompact: 'Compact',\n  toolbarDensityStandard: 'Standard',\n  toolbarDensityComfortable: 'Comfortable',\n  // Columns selector toolbar button text\n  toolbarColumns: 'Columns',\n  toolbarColumnsLabel: 'Select columns',\n  // Filters toolbar button text\n  toolbarFilters: 'Filters',\n  toolbarFiltersLabel: 'Show filters',\n  toolbarFiltersTooltipHide: 'Hide filters',\n  toolbarFiltersTooltipShow: 'Show filters',\n  toolbarFiltersTooltipActive: count => count !== 1 ? `${count} active filters` : `${count} active filter`,\n  // Quick filter toolbar field\n  toolbarQuickFilterPlaceholder: 'Search…',\n  toolbarQuickFilterLabel: 'Search',\n  toolbarQuickFilterDeleteIconLabel: 'Clear',\n  // Export selector toolbar button text\n  toolbarExport: 'Export',\n  toolbarExportLabel: 'Export',\n  toolbarExportCSV: 'Download as CSV',\n  toolbarExportPrint: 'Print',\n  toolbarExportExcel: 'Download as Excel',\n  // Columns panel text\n  columnsPanelTextFieldLabel: 'Find column',\n  columnsPanelTextFieldPlaceholder: 'Column title',\n  columnsPanelDragIconLabel: 'Reorder column',\n  columnsPanelShowAllButton: 'Show all',\n  columnsPanelHideAllButton: 'Hide all',\n  // Filter panel text\n  filterPanelAddFilter: 'Add filter',\n  filterPanelDeleteIconLabel: 'Delete',\n  filterPanelLinkOperator: 'Logic operator',\n  filterPanelOperators: 'Operator',\n  // TODO v6: rename to filterPanelOperator\n  filterPanelOperatorAnd: 'And',\n  filterPanelOperatorOr: 'Or',\n  filterPanelColumns: 'Columns',\n  filterPanelInputLabel: 'Value',\n  filterPanelInputPlaceholder: 'Filter value',\n  // Filter operators text\n  filterOperatorContains: 'contains',\n  filterOperatorEquals: 'equals',\n  filterOperatorStartsWith: 'starts with',\n  filterOperatorEndsWith: 'ends with',\n  filterOperatorIs: 'is',\n  filterOperatorNot: 'is not',\n  filterOperatorAfter: 'is after',\n  filterOperatorOnOrAfter: 'is on or after',\n  filterOperatorBefore: 'is before',\n  filterOperatorOnOrBefore: 'is on or before',\n  filterOperatorIsEmpty: 'is empty',\n  filterOperatorIsNotEmpty: 'is not empty',\n  filterOperatorIsAnyOf: 'is any of',\n  // Filter values text\n  filterValueAny: 'any',\n  filterValueTrue: 'true',\n  filterValueFalse: 'false',\n  // Column menu text\n  columnMenuLabel: 'Menu',\n  columnMenuShowColumns: 'Show columns',\n  columnMenuFilter: 'Filter',\n  columnMenuHideColumn: 'Hide',\n  columnMenuUnsort: 'Unsort',\n  columnMenuSortAsc: 'Sort by ASC',\n  columnMenuSortDesc: 'Sort by DESC',\n  // Column header text\n  columnHeaderFiltersTooltipActive: count => count !== 1 ? `${count} active filters` : `${count} active filter`,\n  columnHeaderFiltersLabel: 'Show filters',\n  columnHeaderSortIconLabel: 'Sort',\n  // Rows selected footer text\n  footerRowSelected: count => count !== 1 ? `${count.toLocaleString()} rows selected` : `${count.toLocaleString()} row selected`,\n  // Total row amount footer text\n  footerTotalRows: 'Total Rows:',\n  // Total visible row amount footer text\n  footerTotalVisibleRows: (visibleCount, totalCount) => `${visibleCount.toLocaleString()} of ${totalCount.toLocaleString()}`,\n  // Checkbox selection text\n  checkboxSelectionHeaderName: 'Checkbox selection',\n  checkboxSelectionSelectAllRows: 'Select all rows',\n  checkboxSelectionUnselectAllRows: 'Unselect all rows',\n  checkboxSelectionSelectRow: 'Select row',\n  checkboxSelectionUnselectRow: 'Unselect row',\n  // Boolean cell text\n  booleanCellTrueLabel: 'yes',\n  booleanCellFalseLabel: 'no',\n  // Actions cell more text\n  actionsCellMore: 'more',\n  // Column pinning text\n  pinToLeft: 'Pin to left',\n  pinToRight: 'Pin to right',\n  unpin: 'Unpin',\n  // Tree Data\n  treeDataGroupingHeaderName: 'Group',\n  treeDataExpand: 'see children',\n  treeDataCollapse: 'hide children',\n  // Grouping columns\n  groupingColumnHeaderName: 'Group',\n  groupColumn: name => `Group by ${name}`,\n  unGroupColumn: name => `Stop grouping by ${name}`,\n  // Master/detail\n  detailPanelToggle: 'Detail panel toggle',\n  expandDetailPanel: 'Expand',\n  collapseDetailPanel: 'Collapse',\n  // Used core components translation keys\n  MuiTablePagination: {},\n  // Row reordering text\n  rowReorderingHeaderName: 'Row reordering',\n  // Aggregation\n  aggregationMenuItemHeader: 'Aggregation',\n  aggregationFunctionLabelSum: 'sum',\n  aggregationFunctionLabelAvg: 'avg',\n  aggregationFunctionLabelMin: 'min',\n  aggregationFunctionLabelMax: 'max',\n  aggregationFunctionLabelSize: 'size'\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"align\", \"children\", \"colIndex\", \"colDef\", \"cellMode\", \"field\", \"formattedValue\", \"hasFocus\", \"height\", \"isEditable\", \"rowId\", \"tabIndex\", \"value\", \"width\", \"className\", \"showRightBorder\", \"extendRowFullWidth\", \"row\", \"colSpan\", \"disableDragEvents\", \"onClick\", \"onDoubleClick\", \"onMouseDown\", \"onMouseUp\", \"onKeyDown\", \"onDragEnter\", \"onDragOver\"];\n\n/* eslint-disable jsx-a11y/no-noninteractive-element-interactions */\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/material';\nimport { ownerDocument, capitalize } from '@mui/material/utils';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { GridCellModes } from '../../models';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { gridFocusCellSelector } from '../../hooks/features/focus/gridFocusStateSelector';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n// Based on https://stackoverflow.com/a/59518678\nlet cachedSupportsPreventScroll;\nfunction doesSupportPreventScroll() {\n  if (cachedSupportsPreventScroll === undefined) {\n    document.createElement('div').focus({\n      get preventScroll() {\n        cachedSupportsPreventScroll = true;\n        return false;\n      }\n    });\n  }\n  return cachedSupportsPreventScroll;\n}\nconst useUtilityClasses = ownerState => {\n  const {\n    align,\n    showRightBorder,\n    isEditable,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['cell', `cell--text${capitalize(align)}`, isEditable && 'cell--editable', showRightBorder && 'withBorder'],\n    content: ['cellContent']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nlet warnedOnce = false;\nfunction GridCell(props) {\n  var _rootProps$experiment;\n  const {\n      align,\n      children,\n      colIndex,\n      cellMode,\n      field,\n      formattedValue,\n      hasFocus,\n      height,\n      isEditable,\n      rowId,\n      tabIndex,\n      value,\n      width,\n      className,\n      showRightBorder,\n      colSpan,\n      disableDragEvents,\n      onClick,\n      onDoubleClick,\n      onMouseDown,\n      onMouseUp,\n      onKeyDown,\n      onDragEnter,\n      onDragOver\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const valueToRender = formattedValue == null ? value : formattedValue;\n  const cellRef = React.useRef(null);\n  const focusElementRef = React.useRef(null);\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const ownerState = {\n    align,\n    showRightBorder,\n    isEditable,\n    classes: rootProps.classes\n  };\n  const classes = useUtilityClasses(ownerState);\n  const publishMouseUp = React.useCallback(eventName => event => {\n    const params = apiRef.current.getCellParams(rowId, field || '');\n    apiRef.current.publishEvent(eventName, params, event);\n    if (onMouseUp) {\n      onMouseUp(event);\n    }\n  }, [apiRef, field, onMouseUp, rowId]);\n  const publishMouseDown = React.useCallback(eventName => event => {\n    const params = apiRef.current.getCellParams(rowId, field || '');\n    apiRef.current.publishEvent(eventName, params, event);\n    if (onMouseDown) {\n      onMouseDown(event);\n    }\n  }, [apiRef, field, onMouseDown, rowId]);\n  const publish = React.useCallback((eventName, propHandler) => event => {\n    // Ignore portal\n    if (!event.currentTarget.contains(event.target)) {\n      return;\n    } // The row might have been deleted during the click\n\n    if (!apiRef.current.getRow(rowId)) {\n      return;\n    }\n    const params = apiRef.current.getCellParams(rowId, field || '');\n    apiRef.current.publishEvent(eventName, params, event);\n    if (propHandler) {\n      propHandler(event);\n    }\n  }, [apiRef, field, rowId]);\n  const style = {\n    minWidth: width,\n    maxWidth: width,\n    minHeight: height,\n    maxHeight: height === 'auto' ? 'none' : height // max-height doesn't support \"auto\"\n  };\n  React.useEffect(() => {\n    if (!hasFocus || cellMode === GridCellModes.Edit) {\n      return;\n    }\n    const doc = ownerDocument(apiRef.current.rootElementRef.current);\n    if (cellRef.current && !cellRef.current.contains(doc.activeElement)) {\n      const focusableElement = cellRef.current.querySelector('[tabindex=\"0\"]');\n      const elementToFocus = focusElementRef.current || focusableElement || cellRef.current;\n      if (doesSupportPreventScroll()) {\n        elementToFocus.focus({\n          preventScroll: true\n        });\n      } else {\n        const scrollPosition = apiRef.current.getScrollPosition();\n        elementToFocus.focus();\n        apiRef.current.scroll(scrollPosition);\n      }\n    }\n  }, [hasFocus, cellMode, apiRef]);\n  let handleFocus = other.onFocus;\n  if (process.env.NODE_ENV === 'test' && (_rootProps$experiment = rootProps.experimentalFeatures) != null && _rootProps$experiment.warnIfFocusStateIsNotSynced) {\n    handleFocus = event => {\n      const focusedCell = gridFocusCellSelector(apiRef);\n      if ((focusedCell == null ? void 0 : focusedCell.id) === rowId && focusedCell.field === field) {\n        if (typeof other.onFocus === 'function') {\n          other.onFocus(event);\n        }\n        return;\n      }\n      if (!warnedOnce) {\n        console.warn([`MUI: The cell with id=${rowId} and field=${field} received focus.`, `According to the state, the focus should be at id=${focusedCell == null ? void 0 : focusedCell.id}, field=${focusedCell == null ? void 0 : focusedCell.field}.`, \"Not syncing the state may cause unwanted behaviors since the `cellFocusIn` event won't be fired.\", 'Call `fireEvent.mouseUp` before the `fireEvent.click` to sync the focus with the state.'].join('\\n'));\n        warnedOnce = true;\n      }\n    };\n  }\n  const column = apiRef.current.getColumn(field);\n  const managesOwnFocus = column.type === 'actions';\n  const renderChildren = () => {\n    if (children == null) {\n      const valueString = valueToRender == null ? void 0 : valueToRender.toString();\n      return /*#__PURE__*/_jsx(\"div\", {\n        title: valueString,\n        className: classes.content,\n        children: valueString\n      });\n    }\n    if (/*#__PURE__*/React.isValidElement(children) && managesOwnFocus) {\n      return /*#__PURE__*/React.cloneElement(children, {\n        focusElementRef\n      });\n    }\n    return children;\n  };\n  const draggableEventHandlers = disableDragEvents ? null : {\n    onDragEnter: publish('cellDragEnter', onDragEnter),\n    onDragOver: publish('cellDragOver', onDragOver)\n  };\n  return /*#__PURE__*/_jsx(\"div\", _extends({\n    ref: cellRef,\n    className: clsx(className, classes.root),\n    role: \"cell\",\n    \"data-field\": field,\n    \"data-colindex\": colIndex,\n    \"aria-colindex\": colIndex + 1,\n    \"aria-colspan\": colSpan,\n    style: style,\n    tabIndex: (cellMode === 'view' || !isEditable) && !managesOwnFocus ? tabIndex : -1,\n    onClick: publish('cellClick', onClick),\n    onDoubleClick: publish('cellDoubleClick', onDoubleClick),\n    onMouseDown: publishMouseDown('cellMouseDown'),\n    onMouseUp: publishMouseUp('cellMouseUp'),\n    onKeyDown: publish('cellKeyDown', onKeyDown)\n  }, draggableEventHandlers, other, {\n    onFocus: handleFocus,\n    children: renderChildren()\n  }));\n}\nprocess.env.NODE_ENV !== \"production\" ? void 0 : void 0;\nexport { GridCell };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"field\", \"align\", \"width\", \"contentWidth\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport Skeleton from '@mui/material/Skeleton';\nimport { capitalize } from '@mui/material/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/material';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    align,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['cell', 'cellSkeleton', `cell--text${capitalize(align)}`]\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nfunction GridSkeletonCell(props) {\n  const {\n      align,\n      width,\n      contentWidth\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const rootProps = useGridRootProps();\n  const ownerState = {\n    classes: rootProps.classes,\n    align\n  };\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(\"div\", _extends({\n    className: classes.root,\n    style: {\n      width\n    }\n  }, other, {\n    children: /*#__PURE__*/_jsx(Skeleton, {\n      width: `${contentWidth}%`\n    })\n  }));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridSkeletonCell.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  align: PropTypes.string.isRequired,\n  contentWidth: PropTypes.number.isRequired,\n  field: PropTypes.string.isRequired,\n  width: PropTypes.number.isRequired\n} : void 0;\nexport { GridSkeletonCell };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\"];\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/material';\nimport { styled } from '@mui/material/styles';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['iconButtonContainer']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridIconButtonContainerRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'IconButtonContainer',\n  overridesResolver: (props, styles) => styles.iconButtonContainer\n})(() => ({\n  display: 'flex',\n  visibility: 'hidden',\n  width: 0\n}));\nexport const GridIconButtonContainer = /*#__PURE__*/React.forwardRef(function GridIconButtonContainer(props, ref) {\n  const {\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const rootProps = useGridRootProps();\n  const classes = useUtilityClasses(rootProps);\n  return /*#__PURE__*/_jsx(GridIconButtonContainerRoot, _extends({\n    ref: ref,\n    className: clsx(classes.root, className),\n    ownerState: rootProps\n  }, other));\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"hideMenu\", \"currentColumn\", \"open\", \"id\", \"labelledby\", \"className\", \"children\"];\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport MenuList from '@mui/material/MenuList';\nimport { isHideMenuKey, isTabKey } from '../../../utils/keyboardUtils';\nimport { gridClasses } from '../../../constants/gridClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst GridColumnMenuContainer = /*#__PURE__*/React.forwardRef(function GridColumnMenuContainer(props, ref) {\n  const {\n      hideMenu,\n      open,\n      id,\n      labelledby,\n      className,\n      children\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const handleListKeyDown = React.useCallback(event => {\n    if (isTabKey(event.key)) {\n      event.preventDefault();\n    }\n    if (isHideMenuKey(event.key)) {\n      hideMenu(event);\n    }\n  }, [hideMenu]);\n  return /*#__PURE__*/_jsx(MenuList, _extends({\n    id: id,\n    ref: ref,\n    className: clsx(gridClasses.menuList, className),\n    \"aria-labelledby\": labelledby,\n    onKeyDown: handleListKeyDown,\n    autoFocus: open\n  }, other, {\n    children: children\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridColumnMenuContainer.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  currentColumn: PropTypes.object.isRequired,\n  hideMenu: PropTypes.func.isRequired,\n  id: PropTypes.string,\n  labelledby: PropTypes.string,\n  open: PropTypes.bool.isRequired\n} : void 0;\nexport { GridColumnMenuContainer };","import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport MenuItem from '@mui/material/MenuItem';\nimport { GridPreferencePanelsValue } from '../../../hooks/features/preferencesPanel/gridPreferencePanelsValue';\nimport { useGridApiContext } from '../../../hooks/utils/useGridApiContext';\nimport { useGridRootProps } from '../../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst GridColumnsMenuItem = props => {\n  const {\n    onClick\n  } = props;\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const showColumns = React.useCallback(event => {\n    onClick(event);\n    apiRef.current.showPreferences(GridPreferencePanelsValue.columns);\n  }, [apiRef, onClick]);\n  if (rootProps.disableColumnSelector) {\n    return null;\n  }\n  return /*#__PURE__*/_jsx(MenuItem, {\n    onClick: showColumns,\n    children: apiRef.current.getLocaleText('columnMenuShowColumns')\n  });\n};\nprocess.env.NODE_ENV !== \"production\" ? GridColumnsMenuItem.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  column: PropTypes.object.isRequired,\n  onClick: PropTypes.func.isRequired\n} : void 0;\nexport { GridColumnsMenuItem };","import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport MenuItem from '@mui/material/MenuItem';\nimport { useGridApiContext } from '../../../hooks/utils/useGridApiContext';\nimport { useGridRootProps } from '../../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst GridFilterMenuItem = props => {\n  const {\n    column,\n    onClick\n  } = props;\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const showFilter = React.useCallback(event => {\n    onClick(event);\n    apiRef.current.showFilterPanel(column == null ? void 0 : column.field);\n  }, [apiRef, column == null ? void 0 : column.field, onClick]);\n  if (rootProps.disableColumnFilter || !(column != null && column.filterable)) {\n    return null;\n  }\n  return /*#__PURE__*/_jsx(MenuItem, {\n    onClick: showFilter,\n    children: apiRef.current.getLocaleText('columnMenuFilter')\n  });\n};\nprocess.env.NODE_ENV !== \"production\" ? GridFilterMenuItem.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  column: PropTypes.object.isRequired,\n  onClick: PropTypes.func.isRequired\n} : void 0;\nexport { GridFilterMenuItem };","import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport MenuItem from '@mui/material/MenuItem';\nimport { useGridApiContext } from '../../../hooks/utils/useGridApiContext';\nimport { useGridRootProps } from '../../../hooks/utils/useGridRootProps';\nimport { gridVisibleColumnDefinitionsSelector } from '../../../hooks/features/columns';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst HideGridColMenuItem = props => {\n  const {\n    column,\n    onClick\n  } = props;\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const timeoutRef = React.useRef();\n  const visibleColumns = gridVisibleColumnDefinitionsSelector(apiRef);\n  const columnsWithMenu = visibleColumns.filter(col => col.disableColumnMenu !== true); // do not allow to hide the last column with menu\n\n  const disabled = columnsWithMenu.length === 1;\n  const toggleColumn = React.useCallback(event => {\n    /**\n     * Disabled `MenuItem` would trigger `click` event\n     * after imperative `.click()` call on HTML element.\n     * Also, click is triggered in testing environment as well.\n     */\n    if (disabled) {\n      return;\n    }\n    onClick(event); // time for the transition\n\n    timeoutRef.current = setTimeout(() => {\n      apiRef.current.setColumnVisibility(column == null ? void 0 : column.field, false);\n    }, 100);\n  }, [apiRef, column == null ? void 0 : column.field, onClick, disabled]);\n  React.useEffect(() => {\n    return () => clearTimeout(timeoutRef.current);\n  }, []);\n  if (rootProps.disableColumnSelector) {\n    return null;\n  }\n  if (column.hideable === false) {\n    return null;\n  }\n  return /*#__PURE__*/_jsx(MenuItem, {\n    onClick: toggleColumn,\n    disabled: disabled,\n    children: apiRef.current.getLocaleText('columnMenuHideColumn')\n  });\n};\nprocess.env.NODE_ENV !== \"production\" ? HideGridColMenuItem.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  column: PropTypes.object.isRequired,\n  onClick: PropTypes.func.isRequired\n} : void 0;\nexport { HideGridColMenuItem };","import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport MenuItem from '@mui/material/MenuItem';\nimport { useGridSelector } from '../../../hooks/utils/useGridSelector';\nimport { gridSortModelSelector } from '../../../hooks/features/sorting/gridSortingSelector';\nimport { useGridApiContext } from '../../../hooks/utils/useGridApiContext';\nimport { useGridRootProps } from '../../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction SortGridMenuItems(props) {\n  var _column$sortingOrder;\n  const {\n    column,\n    onClick\n  } = props;\n  const apiRef = useGridApiContext();\n  const sortModel = useGridSelector(apiRef, gridSortModelSelector);\n  const rootProps = useGridRootProps();\n  const sortingOrder = (_column$sortingOrder = column.sortingOrder) != null ? _column$sortingOrder : rootProps.sortingOrder;\n  const sortDirection = React.useMemo(() => {\n    if (!column) {\n      return null;\n    }\n    const sortItem = sortModel.find(item => item.field === column.field);\n    return sortItem == null ? void 0 : sortItem.sort;\n  }, [column, sortModel]);\n  const onSortMenuItemClick = React.useCallback(event => {\n    onClick(event);\n    const direction = event.currentTarget.getAttribute('data-value') || null;\n    apiRef.current.sortColumn(column, direction);\n  }, [apiRef, column, onClick]);\n  if (!column || !column.sortable) {\n    return null;\n  }\n  return /*#__PURE__*/_jsxs(React.Fragment, {\n    children: [sortingOrder.includes(null) ? /*#__PURE__*/_jsx(MenuItem, {\n      onClick: onSortMenuItemClick,\n      disabled: sortDirection == null,\n      children: apiRef.current.getLocaleText('columnMenuUnsort')\n    }) : null, sortingOrder.includes('asc') ? /*#__PURE__*/_jsx(MenuItem, {\n      onClick: onSortMenuItemClick,\n      \"data-value\": \"asc\",\n      disabled: sortDirection === 'asc',\n      children: apiRef.current.getLocaleText('columnMenuSortAsc')\n    }) : null, sortingOrder.includes('desc') ? /*#__PURE__*/_jsx(MenuItem, {\n      onClick: onSortMenuItemClick,\n      \"data-value\": \"desc\",\n      disabled: sortDirection === 'desc',\n      children: apiRef.current.getLocaleText('columnMenuSortDesc')\n    }) : null]\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? SortGridMenuItems.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  column: PropTypes.object.isRequired,\n  onClick: PropTypes.func.isRequired\n} : void 0;\nexport { SortGridMenuItems };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { GridColumnMenuContainer } from './GridColumnMenuContainer';\nimport { GridColumnsMenuItem } from './GridColumnsMenuItem';\nimport { GridFilterMenuItem } from './GridFilterMenuItem';\nimport { HideGridColMenuItem } from './HideGridColMenuItem';\nimport { SortGridMenuItems } from './SortGridMenuItems';\nimport { useGridApiContext } from '../../../hooks/utils/useGridApiContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst GridColumnMenu = /*#__PURE__*/React.forwardRef(function GridColumnMenu(props, ref) {\n  const {\n    hideMenu,\n    currentColumn\n  } = props;\n  const apiRef = useGridApiContext();\n  const defaultButtons = [/*#__PURE__*/_jsx(SortGridMenuItems, {\n    onClick: hideMenu,\n    column: currentColumn\n  }), /*#__PURE__*/\n  // TODO update types to allow `onClick` and `column` to be optional\n  _jsx(GridFilterMenuItem, {\n    onClick: hideMenu,\n    column: currentColumn\n  }), /*#__PURE__*/_jsx(HideGridColMenuItem, {\n    onClick: hideMenu,\n    column: currentColumn\n  }), /*#__PURE__*/_jsx(GridColumnsMenuItem, {\n    onClick: hideMenu,\n    column: currentColumn\n  })];\n  const preProcessedButtons = apiRef.current.unstable_applyPipeProcessors('columnMenu', defaultButtons, currentColumn);\n  return /*#__PURE__*/_jsx(GridColumnMenuContainer, _extends({\n    ref: ref\n  }, props, {\n    children: preProcessedButtons.map((button, index) => /*#__PURE__*/React.cloneElement(button, {\n      key: index,\n      onClick: hideMenu,\n      column: currentColumn\n    }))\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? void 0 : void 0;\nexport { GridColumnMenu };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"rowCount\", \"visibleRowCount\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/material';\nimport { styled } from '@mui/material/styles';\nimport { useGridApiContext } from '../hooks/utils/useGridApiContext';\nimport { getDataGridUtilityClass } from '../constants/gridClasses';\nimport { useGridRootProps } from '../hooks/utils/useGridRootProps';\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['rowCount']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridRowCountRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'RowCount',\n  overridesResolver: (props, styles) => styles.rowCount\n})(_ref => {\n  let {\n    theme\n  } = _ref;\n  return {\n    alignItems: 'center',\n    display: 'flex',\n    margin: theme.spacing(0, 2)\n  };\n});\nconst GridRowCount = /*#__PURE__*/React.forwardRef(function GridRowCount(props, ref) {\n  const {\n      className,\n      rowCount,\n      visibleRowCount\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridApiContext();\n  const ownerState = useGridRootProps();\n  const classes = useUtilityClasses(ownerState);\n  if (rowCount === 0) {\n    return null;\n  }\n  const text = visibleRowCount < rowCount ? apiRef.current.getLocaleText('footerTotalVisibleRows')(visibleRowCount, rowCount) : rowCount.toLocaleString();\n  return /*#__PURE__*/_jsxs(GridRowCountRoot, _extends({\n    ref: ref,\n    className: clsx(classes.root, className),\n    ownerState: ownerState\n  }, other, {\n    children: [apiRef.current.getLocaleText('footerTotalRows'), \" \", text]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridRowCount.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  rowCount: PropTypes.number.isRequired,\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  visibleRowCount: PropTypes.number.isRequired\n} : void 0;\nexport { GridRowCount };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"selectedRowCount\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/material';\nimport { styled } from '@mui/material/styles';\nimport { useGridApiContext } from '../hooks/utils/useGridApiContext';\nimport { getDataGridUtilityClass } from '../constants/gridClasses';\nimport { useGridRootProps } from '../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['selectedRowCount']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridSelectedRowCountRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'SelectedRowCount',\n  overridesResolver: (props, styles) => styles.selectedRowCount\n})(_ref => {\n  let {\n    theme\n  } = _ref;\n  return {\n    alignItems: 'center',\n    display: 'flex',\n    margin: theme.spacing(0, 2),\n    visibility: 'hidden',\n    width: 0,\n    height: 0,\n    [theme.breakpoints.up('sm')]: {\n      visibility: 'visible',\n      width: 'auto',\n      height: 'auto'\n    }\n  };\n});\nconst GridSelectedRowCount = /*#__PURE__*/React.forwardRef(function GridSelectedRowCount(props, ref) {\n  const {\n      className,\n      selectedRowCount\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridApiContext();\n  const ownerState = useGridRootProps();\n  const classes = useUtilityClasses(ownerState);\n  const rowSelectedText = apiRef.current.getLocaleText('footerRowSelected')(selectedRowCount);\n  return /*#__PURE__*/_jsx(GridSelectedRowCountRoot, _extends({\n    ref: ref,\n    className: clsx(classes.root, className),\n    ownerState: ownerState\n  }, other, {\n    children: rowSelectedText\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridSelectedRowCount.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  selectedRowCount: PropTypes.number.isRequired,\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport { GridSelectedRowCount };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/material';\nimport { styled, alpha, lighten, darken } from '@mui/material/styles';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['footerContainer']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridFooterContainerRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'FooterContainer',\n  overridesResolver: (props, styles) => styles.footerContainer\n})(_ref => {\n  let {\n    theme\n  } = _ref;\n  const borderColor = theme.palette.mode === 'light' ? lighten(alpha(theme.palette.divider, 1), 0.88) : darken(alpha(theme.palette.divider, 1), 0.68);\n  return {\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    minHeight: 52,\n    // Match TablePagination min height\n    borderTop: `1px solid ${borderColor}`\n  };\n});\nconst GridFooterContainer = /*#__PURE__*/React.forwardRef(function GridFooterContainer(props, ref) {\n  const {\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const rootProps = useGridRootProps();\n  const classes = useUtilityClasses(rootProps);\n  return /*#__PURE__*/_jsx(GridFooterContainerRoot, _extends({\n    ref: ref,\n    className: clsx(classes.root, className),\n    ownerState: rootProps\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridFooterContainer.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport { GridFooterContainer };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { useGridSelector } from '../hooks/utils/useGridSelector';\nimport { gridTopLevelRowCountSelector } from '../hooks/features/rows/gridRowsSelector';\nimport { selectedGridRowsCountSelector } from '../hooks/features/selection/gridSelectionSelector';\nimport { gridVisibleTopLevelRowCountSelector } from '../hooks/features/filter/gridFilterSelector';\nimport { useGridApiContext } from '../hooks/utils/useGridApiContext';\nimport { GridRowCount } from './GridRowCount';\nimport { GridSelectedRowCount } from './GridSelectedRowCount';\nimport { GridFooterContainer } from './containers/GridFooterContainer';\nimport { useGridRootProps } from '../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst GridFooter = /*#__PURE__*/React.forwardRef(function GridFooter(props, ref) {\n  var _rootProps$components;\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const totalTopLevelRowCount = useGridSelector(apiRef, gridTopLevelRowCountSelector);\n  const selectedRowCount = useGridSelector(apiRef, selectedGridRowsCountSelector);\n  const visibleTopLevelRowCount = useGridSelector(apiRef, gridVisibleTopLevelRowCountSelector);\n  const selectedRowCountElement = !rootProps.hideFooterSelectedRowCount && selectedRowCount > 0 ? /*#__PURE__*/_jsx(GridSelectedRowCount, {\n    selectedRowCount: selectedRowCount\n  }) : /*#__PURE__*/_jsx(\"div\", {});\n  const rowCountElement = !rootProps.hideFooterRowCount && !rootProps.pagination ? /*#__PURE__*/_jsx(GridRowCount, {\n    rowCount: totalTopLevelRowCount,\n    visibleRowCount: visibleTopLevelRowCount\n  }) : null;\n  const paginationElement = rootProps.pagination && !rootProps.hideFooterPagination && rootProps.components.Pagination && /*#__PURE__*/_jsx(rootProps.components.Pagination, _extends({}, (_rootProps$components = rootProps.componentsProps) == null ? void 0 : _rootProps$components.pagination));\n  return /*#__PURE__*/_jsxs(GridFooterContainer, _extends({\n    ref: ref\n  }, props, {\n    children: [selectedRowCountElement, rowCountElement, paginationElement]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridFooter.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport { GridFooter };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridRootProps } from '../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport const GridHeader = /*#__PURE__*/React.forwardRef(function GridHeader(props, ref) {\n  var _rootProps$components, _rootProps$components2;\n  const rootProps = useGridRootProps();\n  return /*#__PURE__*/_jsxs(\"div\", _extends({\n    ref: ref\n  }, props, {\n    children: [/*#__PURE__*/_jsx(rootProps.components.PreferencesPanel, _extends({}, (_rootProps$components = rootProps.componentsProps) == null ? void 0 : _rootProps$components.preferencesPanel)), rootProps.components.Toolbar && /*#__PURE__*/_jsx(rootProps.components.Toolbar, _extends({}, (_rootProps$components2 = rootProps.componentsProps) == null ? void 0 : _rootProps$components2.toolbar))]\n  }));\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { gridColumnDefinitionsSelector } from '../../hooks/features/columns/gridColumnsSelector';\nimport { useGridSelector } from '../../hooks/utils/useGridSelector';\nimport { gridPreferencePanelStateSelector } from '../../hooks/features/preferencesPanel/gridPreferencePanelSelector';\nimport { GridPreferencePanelsValue } from '../../hooks/features/preferencesPanel/gridPreferencePanelsValue';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const GridPreferencesPanel = /*#__PURE__*/React.forwardRef(function GridPreferencesPanel(props, ref) {\n  var _preferencePanelState, _rootProps$components, _rootProps$components2;\n  const apiRef = useGridApiContext();\n  const columns = useGridSelector(apiRef, gridColumnDefinitionsSelector);\n  const rootProps = useGridRootProps();\n  const preferencePanelState = useGridSelector(apiRef, gridPreferencePanelStateSelector);\n  const panelContent = apiRef.current.unstable_applyPipeProcessors('preferencePanel', null, (_preferencePanelState = preferencePanelState.openedPanelValue) != null ? _preferencePanelState : GridPreferencePanelsValue.filters);\n  return /*#__PURE__*/_jsx(rootProps.components.Panel, _extends({\n    ref: ref,\n    as: rootProps.components.BasePopper,\n    open: columns.length > 0 && preferencePanelState.open\n  }, (_rootProps$components = rootProps.componentsProps) == null ? void 0 : _rootProps$components.panel, props, (_rootProps$components2 = rootProps.componentsProps) == null ? void 0 : _rootProps$components2.basePopper, {\n    children: panelContent\n  }));\n});","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getCircularProgressUtilityClass(slot) {\n  return generateUtilityClass('MuiCircularProgress', slot);\n}\nconst circularProgressClasses = generateUtilityClasses('MuiCircularProgress', ['root', 'determinate', 'indeterminate', 'colorPrimary', 'colorSecondary', 'svg', 'circle', 'circleDeterminate', 'circleIndeterminate', 'circleDisableShrink']);\nexport default circularProgressClasses;","'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\", \"color\", \"disableShrink\", \"size\", \"style\", \"thickness\", \"value\", \"variant\"];\nlet _ = t => t,\n  _t,\n  _t2,\n  _t3,\n  _t4;\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport chainPropTypes from '@mui/utils/chainPropTypes';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { keyframes, css } from '@mui/system';\nimport capitalize from '../utils/capitalize';\nimport { useDefaultProps } from '../DefaultPropsProvider';\nimport styled from '../styles/styled';\nimport { getCircularProgressUtilityClass } from './circularProgressClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst SIZE = 44;\nconst circularRotateKeyframe = keyframes(_t || (_t = _`\n  0% {\n    transform: rotate(0deg);\n  }\n\n  100% {\n    transform: rotate(360deg);\n  }\n`));\nconst circularDashKeyframe = keyframes(_t2 || (_t2 = _`\n  0% {\n    stroke-dasharray: 1px, 200px;\n    stroke-dashoffset: 0;\n  }\n\n  50% {\n    stroke-dasharray: 100px, 200px;\n    stroke-dashoffset: -15px;\n  }\n\n  100% {\n    stroke-dasharray: 100px, 200px;\n    stroke-dashoffset: -125px;\n  }\n`));\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    variant,\n    color,\n    disableShrink\n  } = ownerState;\n  const slots = {\n    root: ['root', variant, `color${capitalize(color)}`],\n    svg: ['svg'],\n    circle: ['circle', `circle${capitalize(variant)}`, disableShrink && 'circleDisableShrink']\n  };\n  return composeClasses(slots, getCircularProgressUtilityClass, classes);\n};\nconst CircularProgressRoot = styled('span', {\n  name: 'MuiCircularProgress',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[ownerState.variant], styles[`color${capitalize(ownerState.color)}`]];\n  }\n})(_ref => {\n  let {\n    ownerState,\n    theme\n  } = _ref;\n  return _extends({\n    display: 'inline-block'\n  }, ownerState.variant === 'determinate' && {\n    transition: theme.transitions.create('transform')\n  }, ownerState.color !== 'inherit' && {\n    color: (theme.vars || theme).palette[ownerState.color].main\n  });\n}, _ref2 => {\n  let {\n    ownerState\n  } = _ref2;\n  return ownerState.variant === 'indeterminate' && css(_t3 || (_t3 = _`\n      animation: ${0} 1.4s linear infinite;\n    `), circularRotateKeyframe);\n});\nconst CircularProgressSVG = styled('svg', {\n  name: 'MuiCircularProgress',\n  slot: 'Svg',\n  overridesResolver: (props, styles) => styles.svg\n})({\n  display: 'block' // Keeps the progress centered\n});\nconst CircularProgressCircle = styled('circle', {\n  name: 'MuiCircularProgress',\n  slot: 'Circle',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.circle, styles[`circle${capitalize(ownerState.variant)}`], ownerState.disableShrink && styles.circleDisableShrink];\n  }\n})(_ref3 => {\n  let {\n    ownerState,\n    theme\n  } = _ref3;\n  return _extends({\n    stroke: 'currentColor'\n  }, ownerState.variant === 'determinate' && {\n    transition: theme.transitions.create('stroke-dashoffset')\n  }, ownerState.variant === 'indeterminate' && {\n    // Some default value that looks fine waiting for the animation to kicks in.\n    strokeDasharray: '80px, 200px',\n    strokeDashoffset: 0 // Add the unit to fix a Edge 16 and below bug.\n  });\n}, _ref4 => {\n  let {\n    ownerState\n  } = _ref4;\n  return ownerState.variant === 'indeterminate' && !ownerState.disableShrink && css(_t4 || (_t4 = _`\n      animation: ${0} 1.4s ease-in-out infinite;\n    `), circularDashKeyframe);\n});\n\n/**\n * ## ARIA\n *\n * If the progress bar is describing the loading progress of a particular region of a page,\n * you should use `aria-describedby` to point to the progress bar, and set the `aria-busy`\n * attribute to `true` on that region until it has finished loading.\n */\nconst CircularProgress = /*#__PURE__*/React.forwardRef(function CircularProgress(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiCircularProgress'\n  });\n  const {\n      className,\n      color = 'primary',\n      disableShrink = false,\n      size = 40,\n      style,\n      thickness = 3.6,\n      value = 0,\n      variant = 'indeterminate'\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    color,\n    disableShrink,\n    size,\n    thickness,\n    value,\n    variant\n  });\n  const classes = useUtilityClasses(ownerState);\n  const circleStyle = {};\n  const rootStyle = {};\n  const rootProps = {};\n  if (variant === 'determinate') {\n    const circumference = 2 * Math.PI * ((SIZE - thickness) / 2);\n    circleStyle.strokeDasharray = circumference.toFixed(3);\n    rootProps['aria-valuenow'] = Math.round(value);\n    circleStyle.strokeDashoffset = `${((100 - value) / 100 * circumference).toFixed(3)}px`;\n    rootStyle.transform = 'rotate(-90deg)';\n  }\n  return /*#__PURE__*/_jsx(CircularProgressRoot, _extends({\n    className: clsx(classes.root, className),\n    style: _extends({\n      width: size,\n      height: size\n    }, rootStyle, style),\n    ownerState: ownerState,\n    ref: ref,\n    role: \"progressbar\"\n  }, rootProps, other, {\n    children: /*#__PURE__*/_jsx(CircularProgressSVG, {\n      className: classes.svg,\n      ownerState: ownerState,\n      viewBox: `${SIZE / 2} ${SIZE / 2} ${SIZE} ${SIZE}`,\n      children: /*#__PURE__*/_jsx(CircularProgressCircle, {\n        className: classes.circle,\n        style: circleStyle,\n        ownerState: ownerState,\n        cx: SIZE,\n        cy: SIZE,\n        r: (SIZE - thickness) / 2,\n        fill: \"none\",\n        strokeWidth: thickness\n      })\n    })\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? void 0 : void 0;\nexport default CircularProgress;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport CircularProgress from '@mui/material/CircularProgress';\nimport { GridOverlay } from './containers/GridOverlay';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst GridLoadingOverlay = /*#__PURE__*/React.forwardRef(function GridLoadingOverlay(props, ref) {\n  return /*#__PURE__*/_jsx(GridOverlay, _extends({\n    ref: ref\n  }, props, {\n    children: /*#__PURE__*/_jsx(CircularProgress, {})\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridLoadingOverlay.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport { GridLoadingOverlay };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { useGridApiContext } from '../hooks/utils/useGridApiContext';\nimport { GridOverlay } from './containers/GridOverlay';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst GridNoRowsOverlay = /*#__PURE__*/React.forwardRef(function GridNoRowsOverlay(props, ref) {\n  const apiRef = useGridApiContext();\n  const noRowsLabel = apiRef.current.getLocaleText('noRowsLabel');\n  return /*#__PURE__*/_jsx(GridOverlay, _extends({\n    ref: ref\n  }, props, {\n    children: noRowsLabel\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridNoRowsOverlay.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport { GridNoRowsOverlay };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport TablePagination, { tablePaginationClasses } from '@mui/material/TablePagination';\nimport { styled } from '@mui/material/styles';\nimport { useGridSelector } from '../hooks/utils/useGridSelector';\nimport { useGridApiContext } from '../hooks/utils/useGridApiContext';\nimport { useGridRootProps } from '../hooks/utils/useGridRootProps';\nimport { gridPaginationSelector } from '../hooks/features/pagination/gridPaginationSelector';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst GridPaginationRoot = styled(TablePagination)(_ref => {\n  let {\n    theme\n  } = _ref;\n  return {\n    [`& .${tablePaginationClasses.selectLabel}`]: {\n      display: 'none',\n      [theme.breakpoints.up('sm')]: {\n        display: 'block'\n      }\n    },\n    [`& .${tablePaginationClasses.input}`]: {\n      display: 'none',\n      [theme.breakpoints.up('sm')]: {\n        display: 'inline-flex'\n      }\n    }\n  };\n});\nexport const GridPagination = /*#__PURE__*/React.forwardRef(function GridPagination(props, ref) {\n  var _rootProps$rowsPerPag;\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const paginationState = useGridSelector(apiRef, gridPaginationSelector);\n  const lastPage = React.useMemo(() => Math.floor(paginationState.rowCount / (paginationState.pageSize || 1)), [paginationState.rowCount, paginationState.pageSize]);\n  const handlePageSizeChange = React.useCallback(event => {\n    const newPageSize = Number(event.target.value);\n    apiRef.current.setPageSize(newPageSize);\n  }, [apiRef]);\n  const handlePageChange = React.useCallback((event, page) => {\n    apiRef.current.setPage(page);\n  }, [apiRef]);\n  if (process.env.NODE_ENV !== 'production') {\n    var _rootProps$pageSize;\n\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    const warnedOnceMissingPageSizeInRowsPerPageOptions = React.useRef(false);\n    if (!warnedOnceMissingPageSizeInRowsPerPageOptions.current && !rootProps.autoPageSize && !rootProps.rowsPerPageOptions.includes((_rootProps$pageSize = rootProps.pageSize) != null ? _rootProps$pageSize : paginationState.pageSize)) {\n      var _rootProps$pageSize2;\n      console.warn([`MUI: The page size \\`${(_rootProps$pageSize2 = rootProps.pageSize) != null ? _rootProps$pageSize2 : paginationState.pageSize}\\` is not preset in the \\`rowsPerPageOptions\\``, `Add it to show the pagination select.`].join('\\n'));\n      warnedOnceMissingPageSizeInRowsPerPageOptions.current = true;\n    }\n  }\n  return /*#__PURE__*/_jsx(GridPaginationRoot, _extends({\n    ref: ref,\n    component: \"div\",\n    count: paginationState.rowCount,\n    page: paginationState.page <= lastPage ? paginationState.page : lastPage,\n    rowsPerPageOptions: (_rootProps$rowsPerPag = rootProps.rowsPerPageOptions) != null && _rootProps$rowsPerPag.includes(paginationState.pageSize) ? rootProps.rowsPerPageOptions : [],\n    rowsPerPage: paginationState.pageSize,\n    onPageChange: handlePageChange,\n    onRowsPerPageChange: handlePageSizeChange\n  }, apiRef.current.getLocaleText('MuiTablePagination'), props));\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { styled } from '@mui/material/styles';\nimport { unstable_composeClasses as composeClasses } from '@mui/material';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['panelContent']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridPanelContentRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'PanelContent',\n  overridesResolver: (props, styles) => styles.panelContent\n})({\n  display: 'flex',\n  flexDirection: 'column',\n  overflow: 'auto',\n  flex: '1 1',\n  maxHeight: 400\n});\nfunction GridPanelContent(props) {\n  const {\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const rootProps = useGridRootProps();\n  const classes = useUtilityClasses(rootProps);\n  return /*#__PURE__*/_jsx(GridPanelContentRoot, _extends({\n    className: clsx(className, classes.root),\n    ownerState: rootProps\n  }, other));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridPanelContent.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport { GridPanelContent };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { styled } from '@mui/material/styles';\nimport { unstable_composeClasses as composeClasses } from '@mui/material';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['panelFooter']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridPanelFooterRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'PanelFooter',\n  overridesResolver: (props, styles) => styles.panelFooter\n})(_ref => {\n  let {\n    theme\n  } = _ref;\n  return {\n    padding: theme.spacing(0.5),\n    display: 'flex',\n    justifyContent: 'space-between'\n  };\n});\nfunction GridPanelFooter(props) {\n  const {\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const rootProps = useGridRootProps();\n  const classes = useUtilityClasses(rootProps);\n  return /*#__PURE__*/_jsx(GridPanelFooterRoot, _extends({\n    className: clsx(className, classes.root),\n    ownerState: rootProps\n  }, other));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridPanelFooter.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport { GridPanelFooter };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"slotProps\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport TrapFocus from '@mui/material/Unstable_TrapFocus';\nimport { styled } from '@mui/material/styles';\nimport { unstable_composeClasses as composeClasses } from '@mui/material';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['panelWrapper']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridPanelWrapperRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'PanelWrapper',\n  overridesResolver: (props, styles) => styles.panelWrapper\n})({\n  display: 'flex',\n  flexDirection: 'column',\n  flex: 1,\n  '&:focus': {\n    outline: 0\n  }\n});\nconst isEnabled = () => true;\nconst GridPanelWrapper = /*#__PURE__*/React.forwardRef(function GridPanelWrapper(props, ref) {\n  const {\n      className,\n      slotProps = {}\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const rootProps = useGridRootProps();\n  const classes = useUtilityClasses(rootProps);\n  return /*#__PURE__*/_jsx(TrapFocus, _extends({\n    open: true,\n    disableEnforceFocus: true,\n    isEnabled: isEnabled\n  }, slotProps.TrapFocus, {\n    children: /*#__PURE__*/_jsx(GridPanelWrapperRoot, _extends({\n      ref: ref,\n      tabIndex: -1,\n      className: clsx(className, classes.root),\n      ownerState: rootProps\n    }, other))\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridPanelWrapper.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  slotProps: PropTypes.shape({\n    TrapFocus: PropTypes.shape({\n      children: PropTypes.element.isRequired,\n      disableAutoFocus: PropTypes.bool,\n      disableEnforceFocus: PropTypes.bool,\n      disableRestoreFocus: PropTypes.bool,\n      getTabbable: PropTypes.func,\n      isEnabled: PropTypes.func,\n      open: PropTypes.bool.isRequired\n    })\n  })\n} : void 0;\nexport { GridPanelWrapper };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"item\", \"hasMultipleFilters\", \"deleteFilter\", \"applyFilterChanges\", \"multiFilterOperator\", \"showMultiFilterOperators\", \"disableMultiFilterOperator\", \"applyMultiFilterOperatorChanges\", \"focusElementRef\", \"linkOperators\", \"columnsSort\", \"deleteIconProps\", \"linkOperatorInputProps\", \"operatorInputProps\", \"columnInputProps\", \"valueInputProps\", \"children\"],\n  _excluded2 = [\"InputComponentProps\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_composeClasses as composeClasses } from '@mui/material';\nimport IconButton from '@mui/material/IconButton';\nimport MenuItem from '@mui/material/MenuItem';\nimport InputLabel from '@mui/material/InputLabel';\nimport FormControl from '@mui/material/FormControl';\nimport { capitalize, unstable_useId as useId } from '@mui/material/utils';\nimport { styled } from '@mui/material/styles';\nimport clsx from 'clsx';\nimport { gridFilterableColumnDefinitionsSelector } from '../../../hooks/features/columns/gridColumnsSelector';\nimport { useGridSelector } from '../../../hooks/utils/useGridSelector';\nimport { GridLinkOperator } from '../../../models/gridFilterItem';\nimport { useGridApiContext } from '../../../hooks/utils/useGridApiContext';\nimport { useGridRootProps } from '../../../hooks/utils/useGridRootProps';\nimport { getDataGridUtilityClass } from '../../../constants/gridClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['filterForm'],\n    deleteIcon: ['filterFormDeleteIcon'],\n    linkOperatorInput: ['filterFormLinkOperatorInput'],\n    columnInput: ['filterFormColumnInput'],\n    operatorInput: ['filterFormOperatorInput'],\n    valueInput: ['filterFormValueInput']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridFilterFormRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'FilterForm',\n  overridesResolver: (props, styles) => styles.filterForm\n})(_ref => {\n  let {\n    theme\n  } = _ref;\n  return {\n    display: 'flex',\n    padding: theme.spacing(1)\n  };\n});\nconst FilterFormDeleteIcon = styled(FormControl, {\n  name: 'MuiDataGrid',\n  slot: 'FilterFormDeleteIcon',\n  overridesResolver: (_, styles) => styles.filterFormDeleteIcon\n})(_ref2 => {\n  let {\n    theme\n  } = _ref2;\n  return {\n    flexShrink: 0,\n    justifyContent: 'flex-end',\n    marginRight: theme.spacing(0.5),\n    marginBottom: theme.spacing(0.2)\n  };\n});\nconst FilterFormLinkOperatorInput = styled(FormControl, {\n  name: 'MuiDataGrid',\n  slot: 'FilterFormLinkOperatorInput',\n  overridesResolver: (_, styles) => styles.filterFormLinkOperatorInput\n})({\n  minWidth: 55,\n  marginRight: 5,\n  justifyContent: 'end'\n});\nconst FilterFormColumnInput = styled(FormControl, {\n  name: 'MuiDataGrid',\n  slot: 'FilterFormColumnInput',\n  overridesResolver: (_, styles) => styles.filterFormColumnInput\n})({\n  width: 150\n});\nconst FilterFormOperatorInput = styled(FormControl, {\n  name: 'MuiDataGrid',\n  slot: 'FilterFormOperatorInput',\n  overridesResolver: (_, styles) => styles.filterFormOperatorInput\n})({\n  width: 120\n});\nconst FilterFormValueInput = styled(FormControl, {\n  name: 'MuiDataGrid',\n  slot: 'FilterFormValueInput',\n  overridesResolver: (_, styles) => styles.filterFormValueInput\n})({\n  width: 190\n});\nconst getLinkOperatorLocaleKey = linkOperator => {\n  switch (linkOperator) {\n    case GridLinkOperator.And:\n      return 'filterPanelOperatorAnd';\n    case GridLinkOperator.Or:\n      return 'filterPanelOperatorOr';\n    default:\n      throw new Error('MUI: Invalid `linkOperator` property in the `GridFilterPanel`.');\n  }\n};\nconst getColumnLabel = col => col.headerName || col.field;\nconst collator = new Intl.Collator();\nconst GridFilterForm = /*#__PURE__*/React.forwardRef(function GridFilterForm(props, ref) {\n  var _rootProps$components, _rootProps$components2, _baseSelectProps$nati, _rootProps$components3, _rootProps$components4, _rootProps$components5, _currentColumn$filter2;\n  const {\n      item,\n      hasMultipleFilters,\n      deleteFilter,\n      applyFilterChanges,\n      multiFilterOperator,\n      showMultiFilterOperators,\n      disableMultiFilterOperator,\n      applyMultiFilterOperatorChanges,\n      focusElementRef,\n      linkOperators = [GridLinkOperator.And, GridLinkOperator.Or],\n      columnsSort,\n      deleteIconProps = {},\n      linkOperatorInputProps = {},\n      operatorInputProps = {},\n      columnInputProps = {},\n      valueInputProps = {}\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridApiContext();\n  const filterableColumns = useGridSelector(apiRef, gridFilterableColumnDefinitionsSelector);\n  const columnSelectId = useId();\n  const columnSelectLabelId = useId();\n  const operatorSelectId = useId();\n  const operatorSelectLabelId = useId();\n  const rootProps = useGridRootProps();\n  const classes = useUtilityClasses(rootProps);\n  const valueRef = React.useRef(null);\n  const filterSelectorRef = React.useRef(null);\n  const hasLinkOperatorColumn = hasMultipleFilters && linkOperators.length > 0;\n  const baseFormControlProps = ((_rootProps$components = rootProps.componentsProps) == null ? void 0 : _rootProps$components.baseFormControl) || {};\n  const baseSelectProps = ((_rootProps$components2 = rootProps.componentsProps) == null ? void 0 : _rootProps$components2.baseSelect) || {};\n  const isBaseSelectNative = (_baseSelectProps$nati = baseSelectProps.native) != null ? _baseSelectProps$nati : true;\n  const OptionComponent = isBaseSelectNative ? 'option' : MenuItem;\n  const {\n      InputComponentProps\n    } = valueInputProps,\n    valueInputPropsOther = _objectWithoutPropertiesLoose(valueInputProps, _excluded2);\n  const sortedFilterableColumns = React.useMemo(() => {\n    switch (columnsSort) {\n      case 'asc':\n        return filterableColumns.sort((a, b) => collator.compare(getColumnLabel(a), getColumnLabel(b)));\n      case 'desc':\n        return filterableColumns.sort((a, b) => -collator.compare(getColumnLabel(a), getColumnLabel(b)));\n      default:\n        return filterableColumns;\n    }\n  }, [filterableColumns, columnsSort]);\n  const currentColumn = item.columnField ? apiRef.current.getColumn(item.columnField) : null;\n  const currentOperator = React.useMemo(() => {\n    var _currentColumn$filter;\n    if (!item.operatorValue || !currentColumn) {\n      return null;\n    }\n    return (_currentColumn$filter = currentColumn.filterOperators) == null ? void 0 : _currentColumn$filter.find(operator => operator.value === item.operatorValue);\n  }, [item, currentColumn]);\n  const changeColumn = React.useCallback(event => {\n    const columnField = event.target.value;\n    const column = apiRef.current.getColumn(columnField);\n    if (column.field === currentColumn.field) {\n      // column did not change\n      return;\n    } // try to keep the same operator when column change\n\n    const newOperator = column.filterOperators.find(operator => operator.value === item.operatorValue) || column.filterOperators[0]; // Erase filter value if the input component is modified\n\n    const eraseItemValue = !newOperator.InputComponent || newOperator.InputComponent !== (currentOperator == null ? void 0 : currentOperator.InputComponent);\n    applyFilterChanges(_extends({}, item, {\n      columnField,\n      operatorValue: newOperator.value,\n      value: eraseItemValue ? undefined : item.value\n    }));\n  }, [apiRef, applyFilterChanges, item, currentColumn, currentOperator]);\n  const changeOperator = React.useCallback(event => {\n    const operatorValue = event.target.value;\n    const newOperator = currentColumn == null ? void 0 : currentColumn.filterOperators.find(operator => operator.value === operatorValue);\n    const eraseItemValue = !(newOperator != null && newOperator.InputComponent) || (newOperator == null ? void 0 : newOperator.InputComponent) !== (currentOperator == null ? void 0 : currentOperator.InputComponent);\n    applyFilterChanges(_extends({}, item, {\n      operatorValue,\n      value: eraseItemValue ? undefined : item.value\n    }));\n  }, [applyFilterChanges, item, currentColumn, currentOperator]);\n  const changeLinkOperator = React.useCallback(event => {\n    const linkOperator = event.target.value === GridLinkOperator.And.toString() ? GridLinkOperator.And : GridLinkOperator.Or;\n    applyMultiFilterOperatorChanges(linkOperator);\n  }, [applyMultiFilterOperatorChanges]);\n  const handleDeleteFilter = () => {\n    if (rootProps.disableMultipleColumnsFiltering) {\n      if (item.value === undefined) {\n        deleteFilter(item);\n      } else {\n        // TODO v6: simplify the behavior by always remove the filter form\n        applyFilterChanges(_extends({}, item, {\n          value: undefined\n        }));\n      }\n    } else {\n      deleteFilter(item);\n    }\n  };\n  React.useImperativeHandle(focusElementRef, () => ({\n    focus: () => {\n      if (currentOperator != null && currentOperator.InputComponent) {\n        var _valueRef$current;\n        valueRef == null ? void 0 : (_valueRef$current = valueRef.current) == null ? void 0 : _valueRef$current.focus();\n      } else {\n        filterSelectorRef.current.focus();\n      }\n    }\n  }), [currentOperator]);\n  return /*#__PURE__*/_jsxs(GridFilterFormRoot, _extends({\n    ref: ref,\n    className: classes.root,\n    ownerState: rootProps\n  }, other, {\n    children: [/*#__PURE__*/_jsx(FilterFormDeleteIcon, _extends({\n      variant: \"standard\",\n      as: rootProps.components.BaseFormControl\n    }, baseFormControlProps, deleteIconProps, {\n      className: clsx(classes.deleteIcon, baseFormControlProps.className, deleteIconProps.className),\n      ownerState: rootProps,\n      children: /*#__PURE__*/_jsx(IconButton, {\n        \"aria-label\": apiRef.current.getLocaleText('filterPanelDeleteIconLabel'),\n        title: apiRef.current.getLocaleText('filterPanelDeleteIconLabel'),\n        onClick: handleDeleteFilter,\n        size: \"small\",\n        children: /*#__PURE__*/_jsx(rootProps.components.FilterPanelDeleteIcon, {\n          fontSize: \"small\"\n        })\n      })\n    })), /*#__PURE__*/_jsx(FilterFormLinkOperatorInput, _extends({\n      variant: \"standard\",\n      as: rootProps.components.BaseFormControl\n    }, baseFormControlProps, linkOperatorInputProps, {\n      sx: _extends({\n        display: hasLinkOperatorColumn ? 'flex' : 'none',\n        visibility: showMultiFilterOperators ? 'visible' : 'hidden'\n      }, baseFormControlProps.sx || {}, linkOperatorInputProps.sx || {}),\n      className: clsx(classes.linkOperatorInput, baseFormControlProps.className, linkOperatorInputProps.className),\n      ownerState: rootProps,\n      children: /*#__PURE__*/_jsx(rootProps.components.BaseSelect, _extends({\n        inputProps: {\n          'aria-label': apiRef.current.getLocaleText('filterPanelLinkOperator')\n        },\n        value: multiFilterOperator,\n        onChange: changeLinkOperator,\n        disabled: !!disableMultiFilterOperator || linkOperators.length === 1,\n        native: isBaseSelectNative\n      }, (_rootProps$components3 = rootProps.componentsProps) == null ? void 0 : _rootProps$components3.baseSelect, {\n        children: linkOperators.map(linkOperator => /*#__PURE__*/_jsx(OptionComponent, {\n          value: linkOperator.toString(),\n          children: apiRef.current.getLocaleText(getLinkOperatorLocaleKey(linkOperator))\n        }, linkOperator.toString()))\n      }))\n    })), /*#__PURE__*/_jsxs(FilterFormColumnInput, _extends({\n      variant: \"standard\",\n      as: rootProps.components.BaseFormControl\n    }, baseFormControlProps, columnInputProps, {\n      className: clsx(classes.columnInput, baseFormControlProps.className, columnInputProps.className),\n      ownerState: rootProps,\n      children: [/*#__PURE__*/_jsx(InputLabel, {\n        htmlFor: columnSelectId,\n        id: columnSelectLabelId,\n        children: apiRef.current.getLocaleText('filterPanelColumns')\n      }), /*#__PURE__*/_jsx(rootProps.components.BaseSelect, _extends({\n        labelId: columnSelectLabelId,\n        id: columnSelectId,\n        label: apiRef.current.getLocaleText('filterPanelColumns'),\n        value: item.columnField || '',\n        onChange: changeColumn,\n        native: isBaseSelectNative\n      }, (_rootProps$components4 = rootProps.componentsProps) == null ? void 0 : _rootProps$components4.baseSelect, {\n        children: sortedFilterableColumns.map(col => /*#__PURE__*/_jsx(OptionComponent, {\n          value: col.field,\n          children: getColumnLabel(col)\n        }, col.field))\n      }))]\n    })), /*#__PURE__*/_jsxs(FilterFormOperatorInput, _extends({\n      variant: \"standard\",\n      as: rootProps.components.BaseFormControl\n    }, baseFormControlProps, operatorInputProps, {\n      className: clsx(classes.operatorInput, baseFormControlProps.className, operatorInputProps.className),\n      ownerState: rootProps,\n      children: [/*#__PURE__*/_jsx(InputLabel, {\n        htmlFor: operatorSelectId,\n        id: operatorSelectLabelId,\n        children: apiRef.current.getLocaleText('filterPanelOperators')\n      }), /*#__PURE__*/_jsx(rootProps.components.BaseSelect, _extends({\n        labelId: operatorSelectLabelId,\n        label: apiRef.current.getLocaleText('filterPanelOperators'),\n        id: operatorSelectId,\n        value: item.operatorValue,\n        onChange: changeOperator,\n        native: isBaseSelectNative,\n        inputRef: filterSelectorRef\n      }, (_rootProps$components5 = rootProps.componentsProps) == null ? void 0 : _rootProps$components5.baseSelect, {\n        children: currentColumn == null ? void 0 : (_currentColumn$filter2 = currentColumn.filterOperators) == null ? void 0 : _currentColumn$filter2.map(operator => /*#__PURE__*/_jsx(OptionComponent, {\n          value: operator.value,\n          children: operator.label || apiRef.current.getLocaleText(`filterOperator${capitalize(operator.value)}`)\n        }, operator.value))\n      }))]\n    })), /*#__PURE__*/_jsx(FilterFormValueInput, _extends({\n      variant: \"standard\",\n      as: rootProps.components.BaseFormControl\n    }, baseFormControlProps, valueInputPropsOther, {\n      className: clsx(classes.valueInput, baseFormControlProps.className, valueInputPropsOther.className),\n      ownerState: rootProps,\n      children: currentOperator != null && currentOperator.InputComponent ? /*#__PURE__*/_jsx(currentOperator.InputComponent, _extends({\n        apiRef: apiRef,\n        item: item,\n        applyValue: applyFilterChanges,\n        focusElementRef: valueRef\n      }, currentOperator.InputComponentProps, InputComponentProps)) : null\n    }))]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridFilterForm.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n\n  /**\n   * Callback called when the operator, column field or value is changed.\n   * @param {GridFilterItem} item The updated [[GridFilterItem]].\n   */\n  applyFilterChanges: PropTypes.func.isRequired,\n  /**\n   * Callback called when the logic operator is changed.\n   * @param {GridLinkOperator} operator The new logic operator.\n   */\n  applyMultiFilterOperatorChanges: PropTypes.func.isRequired,\n  /**\n   * @ignore - do not document.\n   */\n  children: PropTypes.node,\n  /**\n   * Props passed to the column input component.\n   * @default {}\n   */\n  columnInputProps: PropTypes.any,\n  /**\n   * Changes how the options in the columns selector should be ordered.\n   * If not specified, the order is derived from the `columns` prop.\n   */\n  columnsSort: PropTypes.oneOf(['asc', 'desc']),\n  /**\n   * Callback called when the delete button is clicked.\n   * @param {GridFilterItem} item The deleted [[GridFilterItem]].\n   */\n  deleteFilter: PropTypes.func.isRequired,\n  /**\n   * Props passed to the delete icon.\n   * @default {}\n   */\n  deleteIconProps: PropTypes.any,\n  /**\n   * If `true`, disables the logic operator field but still renders it.\n   */\n  disableMultiFilterOperator: PropTypes.bool,\n  /**\n   * A ref allowing to set imperative focus.\n   * It can be passed to the el\n   */\n  focusElementRef: PropTypes\n  /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.func, PropTypes.object]),\n  /**\n   * If `true`, the logic operator field is rendered.\n   * The field will be invisible if `showMultiFilterOperators` is also `true`.\n   */\n  hasMultipleFilters: PropTypes.bool.isRequired,\n  /**\n   * The [[GridFilterItem]] representing this form.\n   */\n  item: PropTypes.shape({\n    columnField: PropTypes.string.isRequired,\n    id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    operatorValue: PropTypes.string,\n    value: PropTypes.any\n  }).isRequired,\n  /**\n   * Props passed to the logic operator input component.\n   * @default {}\n   */\n  linkOperatorInputProps: PropTypes.any,\n  /**\n   * Sets the available logic operators.\n   * @default [GridLinkOperator.And, GridLinkOperator.Or]\n   */\n  linkOperators: PropTypes.arrayOf(PropTypes.oneOf(['and', 'or']).isRequired),\n  /**\n   * The current logic operator applied.\n   */\n  multiFilterOperator: PropTypes.oneOf(['and', 'or']),\n  /**\n   * Props passed to the operator input component.\n   * @default {}\n   */\n  operatorInputProps: PropTypes.any,\n  /**\n   * If `true`, the logic operator field is visible.\n   */\n  showMultiFilterOperators: PropTypes.bool,\n  /**\n   * Props passed to the value input component.\n   * @default {}\n   */\n  valueInputProps: PropTypes.any\n} : void 0;\nexport { GridFilterForm };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"linkOperators\", \"columnsSort\", \"filterFormProps\", \"children\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { GridLinkOperator } from '../../../models/gridFilterItem';\nimport { useGridApiContext } from '../../../hooks/utils/useGridApiContext';\nimport { GridAddIcon } from '../../icons';\nimport { GridPanelContent } from '../GridPanelContent';\nimport { GridPanelFooter } from '../GridPanelFooter';\nimport { GridPanelWrapper } from '../GridPanelWrapper';\nimport { GridFilterForm } from './GridFilterForm';\nimport { useGridRootProps } from '../../../hooks/utils/useGridRootProps';\nimport { useGridSelector } from '../../../hooks/utils/useGridSelector';\nimport { gridFilterModelSelector } from '../../../hooks/features/filter/gridFilterSelector';\nimport { gridFilterableColumnDefinitionsSelector } from '../../../hooks/features/columns/gridColumnsSelector';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst GridFilterPanel = /*#__PURE__*/React.forwardRef(function GridFilterPanel(props, ref) {\n  var _rootProps$components;\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const filterModel = useGridSelector(apiRef, gridFilterModelSelector);\n  const filterableColumns = useGridSelector(apiRef, gridFilterableColumnDefinitionsSelector);\n  const lastFilterRef = React.useRef(null);\n  const {\n      linkOperators = [GridLinkOperator.And, GridLinkOperator.Or],\n      columnsSort,\n      filterFormProps\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const applyFilter = React.useCallback(item => {\n    apiRef.current.upsertFilterItem(item);\n  }, [apiRef]);\n  const applyFilterLinkOperator = React.useCallback(operator => {\n    apiRef.current.setFilterLinkOperator(operator);\n  }, [apiRef]);\n  const getDefaultItem = React.useCallback(() => {\n    const firstColumnWithOperator = filterableColumns.find(colDef => {\n      var _colDef$filterOperato;\n      return (_colDef$filterOperato = colDef.filterOperators) == null ? void 0 : _colDef$filterOperato.length;\n    });\n    if (!firstColumnWithOperator) {\n      return null;\n    }\n    return {\n      columnField: firstColumnWithOperator.field,\n      operatorValue: firstColumnWithOperator.filterOperators[0].value,\n      id: Math.round(Math.random() * 1e5)\n    };\n  }, [filterableColumns]);\n  const items = React.useMemo(() => {\n    if (filterModel.items.length) {\n      return filterModel.items;\n    }\n    const defaultItem = getDefaultItem();\n    return defaultItem ? [defaultItem] : [];\n  }, [filterModel.items, getDefaultItem]);\n  const hasMultipleFilters = items.length > 1;\n  const addNewFilter = () => {\n    const defaultItem = getDefaultItem();\n    if (!defaultItem) {\n      return;\n    }\n    apiRef.current.upsertFilterItems([...items, defaultItem]);\n  };\n  const deleteFilter = React.useCallback(item => {\n    const shouldCloseFilterPanel = items.length === 1;\n    apiRef.current.deleteFilterItem(item);\n    if (shouldCloseFilterPanel) {\n      apiRef.current.hideFilterPanel();\n    }\n  }, [apiRef, items.length]);\n  React.useEffect(() => {\n    if (linkOperators.length > 0 && filterModel.linkOperator && !linkOperators.includes(filterModel.linkOperator)) {\n      applyFilterLinkOperator(linkOperators[0]);\n    }\n  }, [linkOperators, applyFilterLinkOperator, filterModel.linkOperator]);\n  React.useEffect(() => {\n    if (items.length > 0) {\n      lastFilterRef.current.focus();\n    }\n  }, [items.length]);\n  return /*#__PURE__*/_jsxs(GridPanelWrapper, _extends({\n    ref: ref\n  }, other, {\n    children: [/*#__PURE__*/_jsx(GridPanelContent, {\n      children: items.map((item, index) => /*#__PURE__*/_jsx(GridFilterForm, _extends({\n        item: item,\n        applyFilterChanges: applyFilter,\n        deleteFilter: deleteFilter,\n        hasMultipleFilters: hasMultipleFilters,\n        showMultiFilterOperators: index > 0,\n        multiFilterOperator: filterModel.linkOperator,\n        disableMultiFilterOperator: index !== 1,\n        applyMultiFilterOperatorChanges: applyFilterLinkOperator,\n        focusElementRef: index === items.length - 1 ? lastFilterRef : null,\n        linkOperators: linkOperators,\n        columnsSort: columnsSort\n      }, filterFormProps), item.id == null ? index : item.id))\n    }), !rootProps.disableMultipleColumnsFiltering && /*#__PURE__*/_jsx(GridPanelFooter, {\n      children: /*#__PURE__*/_jsx(rootProps.components.BaseButton, _extends({\n        onClick: addNewFilter,\n        startIcon: /*#__PURE__*/_jsx(GridAddIcon, {})\n      }, (_rootProps$components = rootProps.componentsProps) == null ? void 0 : _rootProps$components.baseButton, {\n        children: apiRef.current.getLocaleText('filterPanelAddFilter')\n      }))\n    })]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridFilterPanel.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n\n  /**\n   * @ignore - do not document.\n   */\n  children: PropTypes.node,\n  /**\n   * Changes how the options in the columns selector should be ordered.\n   * If not specified, the order is derived from the `columns` prop.\n   */\n  columnsSort: PropTypes.oneOf(['asc', 'desc']),\n  /**\n   * Props passed to each filter form.\n   */\n  filterFormProps: PropTypes.shape({\n    columnInputProps: PropTypes.any,\n    columnsSort: PropTypes.oneOf(['asc', 'desc']),\n    deleteIconProps: PropTypes.any,\n    linkOperatorInputProps: PropTypes.any,\n    operatorInputProps: PropTypes.any,\n    valueInputProps: PropTypes.any\n  }),\n  /**\n   * Sets the available logic operators.\n   * @default [GridLinkOperator.And, GridLinkOperator.Or]\n   */\n  linkOperators: PropTypes.arrayOf(PropTypes.oneOf(['and', 'or']).isRequired),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport { GridFilterPanel };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { styled } from '@mui/material/styles';\nimport { unstable_composeClasses as composeClasses } from '@mui/material';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['panelHeader']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridPanelHeaderRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'PanelHeader',\n  overridesResolver: (props, styles) => styles.panelHeader\n})(_ref => {\n  let {\n    theme\n  } = _ref;\n  return {\n    padding: theme.spacing(1)\n  };\n});\nfunction GridPanelHeader(props) {\n  const {\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const rootProps = useGridRootProps();\n  const classes = useUtilityClasses(rootProps);\n  return /*#__PURE__*/_jsx(GridPanelHeaderRoot, _extends({\n    className: clsx(className, classes.root),\n    ownerState: rootProps\n  }, other));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridPanelHeader.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport { GridPanelHeader };","// A guide to feature toggling (deprecated)\n//\n// The feature toggle is:\n// - independent from the NODE_ENV\n// - isn't pruning code in production, as the objective is to eventually ship the code.\n// - doesn't allow to cherry-pick which feature to enable\n//\n// By default, the experimental features are only enabled in:\n// - the local environment\n// - the pull request previews\n//\n// Reviewers can force the value with the local storage and the GRID_EXPERIMENTAL_ENABLED key:\n// - 'true' => force it to be enabled\n// - 'false' => force it to be disabled\n//\n// Developers (users) are discouraged to enable the experimental feature by setting the GRID_EXPERIMENTAL_ENABLED env.\n// Instead, prefer exposing experimental APIs, for instance, a prop or a new `unstable_` module.\nexport const GRID_EXPERIMENTAL_ENABLED = false;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"sort\", \"searchPredicate\", \"autoFocusSearchField\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_composeClasses as composeClasses } from '@mui/material';\nimport IconButton from '@mui/material/IconButton';\nimport { switchClasses } from '@mui/material/Switch';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport { styled } from '@mui/material/styles';\nimport { gridColumnDefinitionsSelector, gridColumnVisibilityModelSelector } from '../../hooks/features/columns/gridColumnsSelector';\nimport { useGridSelector } from '../../hooks/utils/useGridSelector';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { GridDragIcon } from '../icons';\nimport { GridPanelContent } from './GridPanelContent';\nimport { GridPanelFooter } from './GridPanelFooter';\nimport { GridPanelHeader } from './GridPanelHeader';\nimport { GridPanelWrapper } from './GridPanelWrapper';\nimport { GRID_EXPERIMENTAL_ENABLED } from '../../constants/envConstants';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['columnsPanel'],\n    columnsPanelRow: ['columnsPanelRow']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridColumnsPanelRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'ColumnsPanel',\n  overridesResolver: (props, styles) => styles.columnsPanel\n})({\n  padding: '8px 0px 8px 8px'\n});\nconst GridColumnsPanelRowRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'ColumnsPanelRow',\n  overridesResolver: (props, styles) => styles.columnsPanelRow\n})(_ref => {\n  let {\n    theme\n  } = _ref;\n  return {\n    display: 'flex',\n    justifyContent: 'space-between',\n    padding: '1px 8px 1px 7px',\n    [`& .${switchClasses.root}`]: {\n      marginRight: theme.spacing(0.5)\n    }\n  };\n});\nconst GridIconButtonRoot = styled(IconButton)({\n  justifyContent: 'flex-end'\n});\nconst collator = new Intl.Collator();\nconst defaultSearchPredicate = (column, searchValue) => {\n  return (column.headerName || column.field).toLowerCase().indexOf(searchValue) > -1;\n};\nfunction GridColumnsPanel(props) {\n  var _rootProps$components, _rootProps$components3, _rootProps$components4;\n  const apiRef = useGridApiContext();\n  const searchInputRef = React.useRef(null);\n  const columns = useGridSelector(apiRef, gridColumnDefinitionsSelector);\n  const columnVisibilityModel = useGridSelector(apiRef, gridColumnVisibilityModelSelector);\n  const rootProps = useGridRootProps();\n  const [searchValue, setSearchValue] = React.useState('');\n  const classes = useUtilityClasses(rootProps);\n  const {\n      sort,\n      searchPredicate = defaultSearchPredicate,\n      autoFocusSearchField = true\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const sortedColumns = React.useMemo(() => {\n    switch (sort) {\n      case 'asc':\n        return [...columns].sort((a, b) => collator.compare(a.headerName || a.field, b.headerName || b.field));\n      case 'desc':\n        return [...columns].sort((a, b) => -collator.compare(a.headerName || a.field, b.headerName || b.field));\n      default:\n        return columns;\n    }\n  }, [columns, sort]);\n  const toggleColumn = event => {\n    const {\n      name: field\n    } = event.target;\n    apiRef.current.setColumnVisibility(field, columnVisibilityModel[field] === false);\n  };\n  const toggleAllColumns = React.useCallback(isVisible => {\n    if (apiRef.current.unstable_caches.columns.isUsingColumnVisibilityModel) {\n      const currentModel = gridColumnVisibilityModelSelector(apiRef);\n      const newModel = _extends({}, currentModel);\n      columns.forEach(col => {\n        if (col.hideable) {\n          if (isVisible) {\n            // delete the key from the model instead of setting it to `true`\n            delete newModel[col.field];\n          } else {\n            newModel[col.field] = false;\n          }\n        }\n      });\n      return apiRef.current.setColumnVisibilityModel(newModel);\n    } // TODO v6: Remove\n\n    return apiRef.current.updateColumns(columns.map(col => {\n      if (col.hideable !== false) {\n        return {\n          field: col.field,\n          hide: !isVisible\n        };\n      }\n      return col;\n    }));\n  }, [apiRef, columns]);\n  const handleSearchValueChange = React.useCallback(event => {\n    setSearchValue(event.target.value);\n  }, []);\n  const currentColumns = React.useMemo(() => {\n    if (!searchValue) {\n      return sortedColumns;\n    }\n    const searchValueToCheck = searchValue.toLowerCase();\n    return sortedColumns.filter(column => searchPredicate(column, searchValueToCheck));\n  }, [sortedColumns, searchValue, searchPredicate]);\n  const firstSwitchRef = React.useRef(null);\n  React.useEffect(() => {\n    if (autoFocusSearchField) {\n      searchInputRef.current.focus();\n    } else if (firstSwitchRef.current && typeof firstSwitchRef.current.focus === 'function') {\n      firstSwitchRef.current.focus();\n    }\n  }, [autoFocusSearchField]);\n  let firstHideableColumnFound = false;\n  const isFirstHideableColumn = column => {\n    if (firstHideableColumnFound === false && column.hideable !== false) {\n      firstHideableColumnFound = true;\n      return true;\n    }\n    return false;\n  };\n  return /*#__PURE__*/_jsxs(GridPanelWrapper, _extends({}, other, {\n    children: [/*#__PURE__*/_jsx(GridPanelHeader, {\n      children: /*#__PURE__*/_jsx(rootProps.components.BaseTextField, _extends({\n        label: apiRef.current.getLocaleText('columnsPanelTextFieldLabel'),\n        placeholder: apiRef.current.getLocaleText('columnsPanelTextFieldPlaceholder'),\n        inputRef: searchInputRef,\n        value: searchValue,\n        onChange: handleSearchValueChange,\n        variant: \"standard\",\n        fullWidth: true\n      }, (_rootProps$components = rootProps.componentsProps) == null ? void 0 : _rootProps$components.baseTextField))\n    }), /*#__PURE__*/_jsx(GridPanelContent, {\n      children: /*#__PURE__*/_jsx(GridColumnsPanelRoot, {\n        className: classes.root,\n        ownerState: rootProps,\n        children: currentColumns.map(column => {\n          var _rootProps$components2;\n          return /*#__PURE__*/_jsxs(GridColumnsPanelRowRoot, {\n            className: classes.columnsPanelRow,\n            ownerState: rootProps,\n            children: [/*#__PURE__*/_jsx(FormControlLabel, {\n              control: /*#__PURE__*/_jsx(rootProps.components.BaseSwitch, _extends({\n                disabled: column.hideable === false,\n                checked: columnVisibilityModel[column.field] !== false,\n                onClick: toggleColumn,\n                name: column.field,\n                size: \"small\",\n                inputRef: isFirstHideableColumn(column) ? firstSwitchRef : undefined\n              }, (_rootProps$components2 = rootProps.componentsProps) == null ? void 0 : _rootProps$components2.baseSwitch)),\n              label: column.headerName || column.field\n            }), !rootProps.disableColumnReorder && GRID_EXPERIMENTAL_ENABLED && /*#__PURE__*/_jsx(GridIconButtonRoot, {\n              draggable: true,\n              \"aria-label\": apiRef.current.getLocaleText('columnsPanelDragIconLabel'),\n              title: apiRef.current.getLocaleText('columnsPanelDragIconLabel'),\n              size: \"small\",\n              disabled: true,\n              children: /*#__PURE__*/_jsx(GridDragIcon, {})\n            })]\n          }, column.field);\n        })\n      })\n    }), /*#__PURE__*/_jsxs(GridPanelFooter, {\n      children: [/*#__PURE__*/_jsx(rootProps.components.BaseButton, _extends({\n        onClick: () => toggleAllColumns(false)\n      }, (_rootProps$components3 = rootProps.componentsProps) == null ? void 0 : _rootProps$components3.baseButton, {\n        children: apiRef.current.getLocaleText('columnsPanelHideAllButton')\n      })), /*#__PURE__*/_jsx(rootProps.components.BaseButton, _extends({\n        onClick: () => toggleAllColumns(true)\n      }, (_rootProps$components4 = rootProps.componentsProps) == null ? void 0 : _rootProps$components4.baseButton, {\n        children: apiRef.current.getLocaleText('columnsPanelShowAllButton')\n      }))]\n    })]\n  }));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridColumnsPanel.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  autoFocusSearchField: PropTypes.bool,\n  searchPredicate: PropTypes.func,\n  slotProps: PropTypes.shape({\n    TrapFocus: PropTypes.shape({\n      children: PropTypes.element.isRequired,\n      disableAutoFocus: PropTypes.bool,\n      disableEnforceFocus: PropTypes.bool,\n      disableRestoreFocus: PropTypes.bool,\n      getTabbable: PropTypes.func,\n      isEnabled: PropTypes.func,\n      open: PropTypes.bool.isRequired\n    })\n  }),\n  sort: PropTypes.oneOf(['asc', 'desc'])\n} : void 0;\nexport { GridColumnsPanel };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"children\", \"className\", \"classes\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { styled } from '@mui/material/styles';\nimport { generateUtilityClasses } from '@mui/material';\nimport ClickAwayListener from '@mui/material/ClickAwayListener';\nimport Paper from '@mui/material/Paper';\nimport Popper from '@mui/material/Popper';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { isEscapeKey } from '../../utils/keyboardUtils';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const gridPanelClasses = generateUtilityClasses('MuiDataGrid', ['panel', 'paper']);\nconst GridPanelRoot = styled(Popper, {\n  name: 'MuiDataGrid',\n  slot: 'Panel',\n  overridesResolver: (props, styles) => styles.panel\n})(_ref => {\n  let {\n    theme\n  } = _ref;\n  return {\n    zIndex: theme.zIndex.modal\n  };\n});\nconst GridPaperRoot = styled(Paper, {\n  name: 'MuiDataGrid',\n  slot: 'Paper',\n  overridesResolver: (props, styles) => styles.paper\n})(_ref2 => {\n  let {\n    theme\n  } = _ref2;\n  return {\n    backgroundColor: theme.palette.background.paper,\n    minWidth: 300,\n    maxHeight: 450,\n    display: 'flex'\n  };\n});\nconst GridPanel = /*#__PURE__*/React.forwardRef((props, ref) => {\n  var _apiRef$current$colum;\n  const {\n      children,\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const classes = gridPanelClasses;\n  const [isPlaced, setIsPlaced] = React.useState(false);\n  const handleClickAway = React.useCallback(() => {\n    apiRef.current.hidePreferences();\n  }, [apiRef]);\n  const handleKeyDown = React.useCallback(event => {\n    if (isEscapeKey(event.key)) {\n      apiRef.current.hidePreferences();\n    }\n  }, [apiRef]);\n  const modifiers = React.useMemo(() => [{\n    name: 'flip',\n    enabled: false\n  }, {\n    name: 'isPlaced',\n    enabled: true,\n    phase: 'main',\n    fn: () => {\n      setIsPlaced(true);\n    },\n    effect: () => () => {\n      setIsPlaced(false);\n    }\n  }], []);\n  const anchorEl = (_apiRef$current$colum = apiRef.current.columnHeadersContainerElementRef) == null ? void 0 : _apiRef$current$colum.current;\n  if (!anchorEl) {\n    return null;\n  }\n  return /*#__PURE__*/_jsx(GridPanelRoot, _extends({\n    ref: ref,\n    placement: \"bottom-start\",\n    className: clsx(className, classes.panel),\n    ownerState: rootProps,\n    anchorEl: anchorEl,\n    modifiers: modifiers\n  }, other, {\n    children: /*#__PURE__*/_jsx(ClickAwayListener, {\n      mouseEvent: \"onMouseUp\",\n      onClickAway: handleClickAway,\n      children: /*#__PURE__*/_jsx(GridPaperRoot, {\n        className: classes.paper,\n        ownerState: rootProps,\n        elevation: 8,\n        onKeyDown: handleKeyDown,\n        children: isPlaced && children\n      })\n    })\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridPanel.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * If `true`, the component is shown.\n   */\n  open: PropTypes.bool.isRequired\n} : void 0;\nexport { GridPanel };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"selected\", \"rowId\", \"row\", \"index\", \"style\", \"position\", \"rowHeight\", \"className\", \"visibleColumns\", \"renderedColumns\", \"containerWidth\", \"firstColumnToRender\", \"lastColumnToRender\", \"cellFocus\", \"cellTabIndex\", \"editRowsState\", \"isLastVisible\", \"onClick\", \"onDoubleClick\", \"onMouseEnter\", \"onMouseLeave\"],\n  _excluded2 = [\"changeReason\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses, useForkRef } from '@mui/material';\nimport { GridEditModes, GridRowModes, GridCellModes } from '../models/gridEditRowModel';\nimport { useGridApiContext } from '../hooks/utils/useGridApiContext';\nimport { getDataGridUtilityClass, gridClasses } from '../constants/gridClasses';\nimport { useGridRootProps } from '../hooks/utils/useGridRootProps';\nimport { gridColumnsTotalWidthSelector } from '../hooks/features/columns/gridColumnsSelector';\nimport { useGridSelector } from '../hooks/utils/useGridSelector';\nimport { useGridVisibleRows } from '../hooks/utils/useGridVisibleRows';\nimport { findParentElementFromClassName } from '../utils/domUtils';\nimport { GRID_CHECKBOX_SELECTION_COL_DEF } from '../colDef/gridCheckboxSelectionColDef';\nimport { GRID_ACTIONS_COLUMN_TYPE } from '../colDef/gridActionsColDef';\nimport { GRID_DETAIL_PANEL_TOGGLE_FIELD } from '../constants/gridDetailPanelToggleField';\nimport { gridSortModelSelector } from '../hooks/features/sorting/gridSortingSelector';\nimport { gridRowTreeDepthSelector } from '../hooks/features/rows/gridRowsSelector';\nimport { gridDensityHeaderGroupingMaxDepthSelector } from '../hooks/features/density/densitySelector';\nimport { randomNumberBetween } from '../utils/utils';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    editable,\n    editing,\n    selected,\n    isLastVisible,\n    rowHeight,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['row', selected && 'selected', editable && 'row--editable', editing && 'row--editing', isLastVisible && 'row--lastVisible', rowHeight === 'auto' && 'row--dynamicHeight']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst EmptyCell = _ref => {\n  let {\n    width\n  } = _ref;\n  if (!width) {\n    return null;\n  }\n  const style = {\n    width\n  };\n  return /*#__PURE__*/_jsx(\"div\", {\n    className: \"MuiDataGrid-cell\",\n    style: style\n  }); // TODO change to .MuiDataGrid-emptyCell or .MuiDataGrid-rowFiller\n};\nconst GridRow = /*#__PURE__*/React.forwardRef(function GridRow(props, refProp) {\n  var _apiRef$current$getRo;\n  const {\n      selected,\n      rowId,\n      row,\n      index,\n      style: styleProp,\n      position,\n      rowHeight,\n      className,\n      visibleColumns,\n      renderedColumns,\n      containerWidth,\n      firstColumnToRender,\n      cellFocus,\n      cellTabIndex,\n      editRowsState,\n      isLastVisible = false,\n      onClick,\n      onDoubleClick,\n      onMouseEnter,\n      onMouseLeave\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridApiContext();\n  const ref = React.useRef(null);\n  const rootProps = useGridRootProps();\n  const currentPage = useGridVisibleRows(apiRef, rootProps);\n  const columnsTotalWidth = useGridSelector(apiRef, gridColumnsTotalWidthSelector);\n  const sortModel = useGridSelector(apiRef, gridSortModelSelector);\n  const treeDepth = useGridSelector(apiRef, gridRowTreeDepthSelector);\n  const headerGroupingMaxDepth = useGridSelector(apiRef, gridDensityHeaderGroupingMaxDepthSelector);\n  const handleRef = useForkRef(ref, refProp);\n  const ariaRowIndex = index + headerGroupingMaxDepth + 2; // 1 for the header row and 1 as it's 1-based\n\n  const {\n    hasScrollX,\n    hasScrollY\n  } = (_apiRef$current$getRo = apiRef.current.getRootDimensions()) != null ? _apiRef$current$getRo : {\n    hasScrollX: false,\n    hasScrollY: false\n  };\n  const ownerState = {\n    selected,\n    isLastVisible,\n    classes: rootProps.classes,\n    editing: apiRef.current.getRowMode(rowId) === GridRowModes.Edit,\n    editable: rootProps.editMode === GridEditModes.Row,\n    rowHeight\n  };\n  const classes = useUtilityClasses(ownerState);\n  React.useLayoutEffect(() => {\n    if (rowHeight === 'auto' && ref.current && typeof ResizeObserver === 'undefined') {\n      // Fallback for IE\n      apiRef.current.unstable_storeRowHeightMeasurement(rowId, ref.current.clientHeight, position);\n    }\n  }, [apiRef, rowHeight, rowId, position]);\n  React.useLayoutEffect(() => {\n    if (currentPage.range) {\n      // The index prop is relative to the rows from all pages. As example, the index prop of the\n      // first row is 5 if pageSize=5 and page=1. However, the index used by the virtualization\n      // doesn't care about pagination and considers the rows from the current page only, so the\n      // first row always has index=0. We need to subtract the index of the first row to make it\n      // compatible with the index used by the virtualization.\n      const rowIndex = apiRef.current.getRowIndexRelativeToVisibleRows(rowId); // pinned rows are not part of the visible rows\n\n      if (rowIndex != null) {\n        apiRef.current.unstable_setLastMeasuredRowIndex(rowIndex);\n      }\n    }\n    const rootElement = ref.current;\n    const hasFixedHeight = rowHeight !== 'auto';\n    if (!rootElement || hasFixedHeight || typeof ResizeObserver === 'undefined') {\n      return undefined;\n    }\n    const resizeObserver = new ResizeObserver(entries => {\n      const [entry] = entries;\n      const height = entry.borderBoxSize && entry.borderBoxSize.length > 0 ? entry.borderBoxSize[0].blockSize : entry.contentRect.height;\n      apiRef.current.unstable_storeRowHeightMeasurement(rowId, height, position);\n    });\n    resizeObserver.observe(rootElement);\n    return () => resizeObserver.disconnect();\n  }, [apiRef, currentPage.range, index, rowHeight, rowId, position]);\n  const publish = React.useCallback((eventName, propHandler) => event => {\n    // Ignore portal\n    // The target is not an element when triggered by a Select inside the cell\n    // See https://github.com/mui/material-ui/issues/10534\n    if (event.target.nodeType === 1 && !event.currentTarget.contains(event.target)) {\n      return;\n    } // The row might have been deleted\n\n    if (!apiRef.current.getRow(rowId)) {\n      return;\n    }\n    apiRef.current.publishEvent(eventName, apiRef.current.getRowParams(rowId), event);\n    if (propHandler) {\n      propHandler(event);\n    }\n  }, [apiRef, rowId]);\n  const publishClick = React.useCallback(event => {\n    const cell = findParentElementFromClassName(event.target, gridClasses.cell);\n    const field = cell == null ? void 0 : cell.getAttribute('data-field'); // Check if the field is available because the cell that fills the empty\n    // space of the row has no field.\n\n    if (field) {\n      // User clicked in the checkbox added by checkboxSelection\n      if (field === GRID_CHECKBOX_SELECTION_COL_DEF.field) {\n        return;\n      } // User opened a detail panel\n\n      if (field === GRID_DETAIL_PANEL_TOGGLE_FIELD) {\n        return;\n      } // User reorders a row\n\n      if (field === '__reorder__') {\n        return;\n      } // User is editing a cell\n\n      if (apiRef.current.getCellMode(rowId, field) === GridCellModes.Edit) {\n        return;\n      } // User clicked a button from the \"actions\" column type\n\n      const column = apiRef.current.getColumn(field);\n      if (column.type === GRID_ACTIONS_COLUMN_TYPE) {\n        return;\n      }\n    }\n    publish('rowClick', onClick)(event);\n  }, [apiRef, onClick, publish, rowId]);\n  const getCell = React.useCallback((column, cellProps) => {\n    var _rootProps$components;\n    const cellParams = apiRef.current.getCellParams(rowId, column.field);\n    const classNames = [];\n    const disableDragEvents = rootProps.disableColumnReorder && column.disableReorder || !rootProps.rowReordering && !!sortModel.length && treeDepth > 1 && Object.keys(editRowsState).length > 0;\n    if (column.cellClassName) {\n      classNames.push(clsx(typeof column.cellClassName === 'function' ? column.cellClassName(cellParams) : column.cellClassName));\n    }\n    const editCellState = editRowsState[rowId] ? editRowsState[rowId][column.field] : null;\n    let content = null;\n    if (editCellState == null && column.renderCell) {\n      var _rootProps$classes;\n      content = column.renderCell(_extends({}, cellParams, {\n        api: apiRef.current\n      })); // TODO move to GridCell\n\n      classNames.push(clsx(gridClasses['cell--withRenderer'], (_rootProps$classes = rootProps.classes) == null ? void 0 : _rootProps$classes['cell--withRenderer']));\n    }\n    if (editCellState != null && column.renderEditCell) {\n      var _rootProps$classes2;\n      let updatedRow = row;\n      if (apiRef.current.unstable_getRowWithUpdatedValues) {\n        // Only the new editing API has this method\n        updatedRow = apiRef.current.unstable_getRowWithUpdatedValues(rowId, column.field);\n      }\n      const editCellStateRest = _objectWithoutPropertiesLoose(editCellState, _excluded2);\n      const params = _extends({}, cellParams, {\n        row: updatedRow\n      }, editCellStateRest, {\n        api: apiRef.current\n      });\n      content = column.renderEditCell(params); // TODO move to GridCell\n\n      classNames.push(clsx(gridClasses['cell--editing'], (_rootProps$classes2 = rootProps.classes) == null ? void 0 : _rootProps$classes2['cell--editing']));\n    }\n    if (rootProps.getCellClassName) {\n      // TODO move to GridCell\n      classNames.push(rootProps.getCellClassName(cellParams));\n    }\n    const hasFocus = cellFocus !== null && cellFocus.id === rowId && cellFocus.field === column.field;\n    const tabIndex = cellTabIndex !== null && cellTabIndex.id === rowId && cellTabIndex.field === column.field && cellParams.cellMode === 'view' ? 0 : -1;\n    return /*#__PURE__*/_jsx(rootProps.components.Cell, _extends({\n      value: cellParams.value,\n      field: column.field,\n      width: cellProps.width,\n      rowId: rowId,\n      height: rowHeight,\n      showRightBorder: cellProps.showRightBorder,\n      formattedValue: cellParams.formattedValue,\n      align: column.align || 'left',\n      cellMode: cellParams.cellMode,\n      colIndex: cellProps.indexRelativeToAllColumns,\n      isEditable: cellParams.isEditable,\n      hasFocus: hasFocus,\n      tabIndex: tabIndex,\n      className: clsx(classNames),\n      colSpan: cellProps.colSpan,\n      disableDragEvents: disableDragEvents\n    }, (_rootProps$components = rootProps.componentsProps) == null ? void 0 : _rootProps$components.cell, {\n      children: content\n    }), column.field);\n  }, [apiRef, cellTabIndex, editRowsState, cellFocus, rootProps, row, rowHeight, rowId, treeDepth, sortModel.length]);\n  const sizes = apiRef.current.unstable_getRowInternalSizes(rowId);\n  let minHeight = rowHeight;\n  if (minHeight === 'auto' && sizes) {\n    let numberOfBaseSizes = 0;\n    const maximumSize = Object.entries(sizes).reduce((acc, _ref2) => {\n      let [key, size] = _ref2;\n      const isBaseHeight = /^base[A-Z]/.test(key);\n      if (!isBaseHeight) {\n        return acc;\n      }\n      numberOfBaseSizes += 1;\n      if (size > acc) {\n        return size;\n      }\n      return acc;\n    }, 0);\n    if (maximumSize > 0 && numberOfBaseSizes > 1) {\n      minHeight = maximumSize;\n    }\n  }\n  const style = _extends({}, styleProp, {\n    maxHeight: rowHeight === 'auto' ? 'none' : rowHeight,\n    // max-height doesn't support \"auto\"\n    minHeight\n  });\n  if (sizes != null && sizes.spacingTop) {\n    const property = rootProps.rowSpacingType === 'border' ? 'borderTopWidth' : 'marginTop';\n    style[property] = sizes.spacingTop;\n  }\n  if (sizes != null && sizes.spacingBottom) {\n    const property = rootProps.rowSpacingType === 'border' ? 'borderBottomWidth' : 'marginBottom';\n    let propertyValue = style[property]; // avoid overriding existing value\n\n    if (typeof propertyValue !== 'number') {\n      propertyValue = parseInt(propertyValue || '0', 10);\n    }\n    propertyValue += sizes.spacingBottom;\n    style[property] = propertyValue;\n  }\n  const rowClassNames = apiRef.current.unstable_applyPipeProcessors('rowClassName', [], rowId);\n  if (typeof rootProps.getRowClassName === 'function') {\n    var _currentPage$range;\n    const indexRelativeToCurrentPage = index - (((_currentPage$range = currentPage.range) == null ? void 0 : _currentPage$range.firstRowIndex) || 0);\n    const rowParams = _extends({}, apiRef.current.getRowParams(rowId), {\n      isFirstVisible: indexRelativeToCurrentPage === 0,\n      isLastVisible: indexRelativeToCurrentPage === currentPage.rows.length - 1,\n      indexRelativeToCurrentPage\n    });\n    rowClassNames.push(rootProps.getRowClassName(rowParams));\n  }\n  const randomNumber = randomNumberBetween(10000, 20, 80);\n  const cells = [];\n  for (let i = 0; i < renderedColumns.length; i += 1) {\n    const column = renderedColumns[i];\n    const indexRelativeToAllColumns = firstColumnToRender + i;\n    const isLastColumn = indexRelativeToAllColumns === visibleColumns.length - 1;\n    const removeLastBorderRight = isLastColumn && hasScrollX && !hasScrollY;\n    const showRightBorder = !isLastColumn ? rootProps.showCellRightBorder : !removeLastBorderRight && rootProps.disableExtendRowFullWidth;\n    const cellColSpanInfo = apiRef.current.unstable_getCellColSpanInfo(rowId, indexRelativeToAllColumns);\n    if (cellColSpanInfo && !cellColSpanInfo.spannedByColSpan) {\n      if (row) {\n        const {\n          colSpan,\n          width\n        } = cellColSpanInfo.cellProps;\n        const cellProps = {\n          width,\n          colSpan,\n          showRightBorder,\n          indexRelativeToAllColumns\n        };\n        cells.push(getCell(column, cellProps));\n      } else {\n        const {\n          width\n        } = cellColSpanInfo.cellProps;\n        const contentWidth = Math.round(randomNumber());\n        cells.push(/*#__PURE__*/_jsx(rootProps.components.SkeletonCell, {\n          width: width,\n          contentWidth: contentWidth,\n          field: column.field,\n          align: column.align\n        }, column.field));\n      }\n    }\n  }\n  const emptyCellWidth = containerWidth - columnsTotalWidth;\n  const eventHandlers = row ? {\n    onClick: publishClick,\n    onDoubleClick: publish('rowDoubleClick', onDoubleClick),\n    onMouseEnter: publish('rowMouseEnter', onMouseEnter),\n    onMouseLeave: publish('rowMouseLeave', onMouseLeave)\n  } : null;\n  return /*#__PURE__*/_jsxs(\"div\", _extends({\n    ref: handleRef,\n    \"data-id\": rowId,\n    \"data-rowindex\": index,\n    role: \"row\",\n    className: clsx(...rowClassNames, classes.root, className),\n    \"aria-rowindex\": ariaRowIndex,\n    \"aria-selected\": selected,\n    style: style\n  }, eventHandlers, other, {\n    children: [cells, emptyCellWidth > 0 && /*#__PURE__*/_jsx(EmptyCell, {\n      width: emptyCellWidth\n    })]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridRow.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  cellFocus: PropTypes.object,\n  cellTabIndex: PropTypes.object,\n  containerWidth: PropTypes.number.isRequired,\n  editRowsState: PropTypes.object.isRequired,\n  firstColumnToRender: PropTypes.number.isRequired,\n  /**\n   * Index of the row in the whole sorted and filtered dataset.\n   * If some rows above have expanded children, this index also take those children into account.\n   */\n  index: PropTypes.number.isRequired,\n  isLastVisible: PropTypes.bool,\n  lastColumnToRender: PropTypes.number.isRequired,\n  position: PropTypes.oneOf(['center', 'left', 'right']).isRequired,\n  renderedColumns: PropTypes.arrayOf(PropTypes.object).isRequired,\n  row: PropTypes.object,\n  rowHeight: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number]).isRequired,\n  rowId: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n  selected: PropTypes.bool.isRequired,\n  visibleColumns: PropTypes.arrayOf(PropTypes.object).isRequired\n} : void 0;\nexport { GridRow };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"sortingOrder\"];\nimport * as React from 'react';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const GridColumnUnsortedIcon = /*#__PURE__*/React.memo(function GridColumnHeaderSortIcon(props) {\n  const {\n      sortingOrder\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const rootProps = useGridRootProps();\n  const [nextSortDirection] = sortingOrder;\n  const Icon = nextSortDirection === 'asc' ? rootProps.components.ColumnSortedAscendingIcon : rootProps.components.ColumnSortedDescendingIcon;\n  return Icon ? /*#__PURE__*/_jsx(Icon, _extends({}, other)) : null;\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"error\", \"hasError\", \"errorInfo\"];\nimport * as React from 'react';\nimport { useGridApiContext } from '../hooks/utils/useGridApiContext';\nimport { GridOverlay } from './containers/GridOverlay';\nimport { useGridSelector } from '../hooks/utils/useGridSelector';\nimport { gridDensityRowHeightSelector } from '../hooks/features/density/densitySelector';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n// TODO v6: rename to GridErrorOverlay\nexport const ErrorOverlay = /*#__PURE__*/React.forwardRef(function ErrorOverlay(props, ref) {\n  const {\n      error\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridApiContext();\n  const defaultLabel = apiRef.current.getLocaleText('errorOverlayDefaultLabel');\n  const rowHeight = useGridSelector(apiRef, gridDensityRowHeightSelector);\n  return /*#__PURE__*/_jsx(GridOverlay, _extends({\n    ref: ref,\n    sx: {\n      width: '100%',\n      minHeight: 2 * rowHeight\n    }\n  }, other, {\n    children: (error == null ? void 0 : error.message) || defaultLabel\n  }));\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridApiContext } from '../hooks/utils/useGridApiContext';\nimport { GridOverlay } from './containers/GridOverlay';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const GridNoResultsOverlay = /*#__PURE__*/React.forwardRef(function GridNoResultsOverlay(props, ref) {\n  const apiRef = useGridApiContext();\n  const noResultsOverlayLabel = apiRef.current.getLocaleText('noResultsOverlayLabel');\n  return /*#__PURE__*/_jsx(GridOverlay, _extends({\n    ref: ref\n  }, props, {\n    children: noResultsOverlayLabel\n  }));\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport MUICheckbox from '@mui/material/Checkbox';\nimport MUITextField from '@mui/material/TextField';\nimport MUIFormControl from '@mui/material/FormControl';\nimport MUISelect from '@mui/material/Select';\nimport MUISwitch from '@mui/material/Switch';\nimport MUIButton from '@mui/material/Button';\nimport MUITooltip from '@mui/material/Tooltip';\nimport MUIPopper from '@mui/material/Popper';\nimport { GridArrowDownwardIcon, GridArrowUpwardIcon, GridCell, GridSkeletonCell, GridCheckIcon, GridCloseIcon, GridColumnIcon, GridColumnMenu, GridColumnsPanel, GridFilterAltIcon, GridFilterListIcon, GridFilterPanel, GridFooter, GridHeader, GridLoadingOverlay, GridNoRowsOverlay, GridPagination, GridPanel, GridPreferencesPanel, GridRow, GridSaveAltIcon, GridSeparatorIcon, GridTableRowsIcon, GridTripleDotsVerticalIcon, GridViewHeadlineIcon, GridViewStreamIcon, GridMoreVertIcon, GridExpandMoreIcon, GridKeyboardArrowRight, GridAddIcon, GridRemoveIcon, GridDragIcon, GridColumnHeaderFilterIconButton, GridSearchIcon } from '../components';\nimport { GridColumnUnsortedIcon } from '../components/columnHeaders/GridColumnUnsortedIcon';\nimport { ErrorOverlay } from '../components/ErrorOverlay';\nimport { GridNoResultsOverlay } from '../components/GridNoResultsOverlay';\nconst DEFAULT_GRID_ICON_SLOTS_COMPONENTS = {\n  BooleanCellTrueIcon: GridCheckIcon,\n  BooleanCellFalseIcon: GridCloseIcon,\n  ColumnMenuIcon: GridTripleDotsVerticalIcon,\n  OpenFilterButtonIcon: GridFilterListIcon,\n  FilterPanelDeleteIcon: GridCloseIcon,\n  ColumnFilteredIcon: GridFilterAltIcon,\n  ColumnSelectorIcon: GridColumnIcon,\n  ColumnUnsortedIcon: GridColumnUnsortedIcon,\n  ColumnSortedAscendingIcon: GridArrowUpwardIcon,\n  ColumnSortedDescendingIcon: GridArrowDownwardIcon,\n  ColumnResizeIcon: GridSeparatorIcon,\n  DensityCompactIcon: GridViewHeadlineIcon,\n  DensityStandardIcon: GridTableRowsIcon,\n  DensityComfortableIcon: GridViewStreamIcon,\n  ExportIcon: GridSaveAltIcon,\n  MoreActionsIcon: GridMoreVertIcon,\n  TreeDataCollapseIcon: GridExpandMoreIcon,\n  TreeDataExpandIcon: GridKeyboardArrowRight,\n  GroupingCriteriaCollapseIcon: GridExpandMoreIcon,\n  GroupingCriteriaExpandIcon: GridKeyboardArrowRight,\n  DetailPanelExpandIcon: GridAddIcon,\n  DetailPanelCollapseIcon: GridRemoveIcon,\n  RowReorderIcon: GridDragIcon,\n  QuickFilterIcon: GridSearchIcon,\n  QuickFilterClearIcon: GridCloseIcon\n};\n/**\n * TODO: Differentiate community and pro value and interface\n */\n\nexport const DATA_GRID_DEFAULT_SLOTS_COMPONENTS = _extends({}, DEFAULT_GRID_ICON_SLOTS_COMPONENTS, {\n  BaseCheckbox: MUICheckbox,\n  BaseTextField: MUITextField,\n  BaseFormControl: MUIFormControl,\n  BaseSelect: MUISelect,\n  BaseSwitch: MUISwitch,\n  BaseButton: MUIButton,\n  BaseTooltip: MUITooltip,\n  BasePopper: MUIPopper,\n  Cell: GridCell,\n  SkeletonCell: GridSkeletonCell,\n  ColumnHeaderFilterIconButton: GridColumnHeaderFilterIconButton,\n  ColumnMenu: GridColumnMenu,\n  ErrorOverlay,\n  Footer: GridFooter,\n  Header: GridHeader,\n  Toolbar: null,\n  PreferencesPanel: GridPreferencesPanel,\n  LoadingOverlay: GridLoadingOverlay,\n  NoResultsOverlay: GridNoResultsOverlay,\n  NoRowsOverlay: GridNoRowsOverlay,\n  Pagination: GridPagination,\n  FilterPanel: GridFilterPanel,\n  ColumnsPanel: GridColumnsPanel,\n  Panel: GridPanel,\n  Row: GridRow\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_composeClasses as composeClasses } from '@mui/material';\nimport IconButton from '@mui/material/IconButton';\nimport Badge from '@mui/material/Badge';\nimport { gridPreferencePanelStateSelector } from '../../hooks/features/preferencesPanel/gridPreferencePanelSelector';\nimport { GridPreferencePanelsValue } from '../../hooks/features/preferencesPanel/gridPreferencePanelsValue';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { GridIconButtonContainer } from './GridIconButtonContainer';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    icon: ['filterIcon']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nfunction GridColumnHeaderFilterIconButton(props) {\n  var _rootProps$components;\n  const {\n    counter,\n    field,\n    onClick\n  } = props;\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const ownerState = _extends({}, props, {\n    classes: rootProps.classes\n  });\n  const classes = useUtilityClasses(ownerState);\n  const toggleFilter = React.useCallback(event => {\n    event.preventDefault();\n    event.stopPropagation();\n    const {\n      open,\n      openedPanelValue\n    } = gridPreferencePanelStateSelector(apiRef.current.state);\n    if (open && openedPanelValue === GridPreferencePanelsValue.filters) {\n      apiRef.current.hideFilterPanel();\n    } else {\n      apiRef.current.showFilterPanel();\n    }\n    if (onClick) {\n      onClick(apiRef.current.getColumnHeaderParams(field), event);\n    }\n  }, [apiRef, field, onClick]);\n  if (!counter) {\n    return null;\n  }\n  const iconButton = /*#__PURE__*/_jsx(IconButton, {\n    onClick: toggleFilter,\n    color: \"default\",\n    \"aria-label\": apiRef.current.getLocaleText('columnHeaderFiltersLabel'),\n    size: \"small\",\n    tabIndex: -1,\n    children: /*#__PURE__*/_jsx(rootProps.components.ColumnFilteredIcon, {\n      className: classes.icon,\n      fontSize: \"small\"\n    })\n  });\n  return /*#__PURE__*/_jsx(rootProps.components.BaseTooltip, _extends({\n    title: apiRef.current.getLocaleText('columnHeaderFiltersTooltipActive')(counter),\n    enterDelay: 1000\n  }, (_rootProps$components = rootProps.componentsProps) == null ? void 0 : _rootProps$components.baseTooltip, {\n    children: /*#__PURE__*/_jsxs(GridIconButtonContainer, {\n      children: [counter > 1 && /*#__PURE__*/_jsx(Badge, {\n        badgeContent: counter,\n        color: \"default\",\n        children: iconButton\n      }), counter === 1 && iconButton]\n    })\n  }));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridColumnHeaderFilterIconButton.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  counter: PropTypes.number,\n  field: PropTypes.string.isRequired,\n  onClick: PropTypes.func\n} : void 0;\nexport { GridColumnHeaderFilterIconButton };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useThemeProps } from '@mui/material/styles';\nimport { DATA_GRID_DEFAULT_SLOTS_COMPONENTS, GRID_DEFAULT_LOCALE_TEXT } from '../constants';\nimport { GridDensityTypes, GridEditModes, GridFeatureModeConstant } from '../models';\nconst DATA_GRID_FORCED_PROPS = {\n  apiRef: undefined,\n  disableMultipleColumnsFiltering: true,\n  disableMultipleColumnsSorting: true,\n  disableMultipleSelection: true,\n  throttleRowsMs: undefined,\n  hideFooterRowCount: false,\n  pagination: true,\n  checkboxSelectionVisibleOnly: false,\n  disableColumnReorder: true,\n  disableColumnResize: true,\n  keepColumnPositionIfDraggedOutside: false,\n  signature: 'DataGrid'\n};\nexport const MAX_PAGE_SIZE = 100;\n/**\n * The default values of `DataGridPropsWithDefaultValues` to inject in the props of DataGrid.\n */\n\nexport const DATA_GRID_PROPS_DEFAULT_VALUES = {\n  autoHeight: false,\n  autoPageSize: false,\n  checkboxSelection: false,\n  checkboxSelectionVisibleOnly: false,\n  columnBuffer: 3,\n  rowBuffer: 3,\n  columnThreshold: 3,\n  rowThreshold: 3,\n  density: GridDensityTypes.Standard,\n  disableExtendRowFullWidth: false,\n  disableColumnFilter: false,\n  disableColumnMenu: false,\n  disableColumnSelector: false,\n  disableDensitySelector: false,\n  disableMultipleColumnsFiltering: false,\n  disableMultipleSelection: false,\n  disableMultipleColumnsSorting: false,\n  disableSelectionOnClick: false,\n  disableVirtualization: false,\n  disableIgnoreModificationsIfProcessingProps: false,\n  editMode: GridEditModes.Cell,\n  filterMode: GridFeatureModeConstant.client,\n  headerHeight: 56,\n  hideFooter: false,\n  hideFooterPagination: false,\n  hideFooterRowCount: false,\n  hideFooterSelectedRowCount: false,\n  logger: console,\n  logLevel: process.env.NODE_ENV === 'production' ? 'error' : 'warn',\n  pagination: false,\n  paginationMode: GridFeatureModeConstant.client,\n  rowHeight: 52,\n  rowsPerPageOptions: [25, 50, 100],\n  rowSpacingType: 'margin',\n  showCellRightBorder: false,\n  showColumnRightBorder: false,\n  sortingOrder: ['asc', 'desc', null],\n  sortingMode: GridFeatureModeConstant.client,\n  throttleRowsMs: 0,\n  disableColumnReorder: false,\n  disableColumnResize: false,\n  keepNonExistentRowsSelected: false,\n  keepColumnPositionIfDraggedOutside: false\n};\nexport const useDataGridProps = inProps => {\n  if (inProps.pageSize > MAX_PAGE_SIZE) {\n    throw new Error(`'props.pageSize' cannot exceed 100 in DataGrid.`);\n  }\n  const themedProps = useThemeProps({\n    props: inProps,\n    name: 'MuiDataGrid'\n  });\n  const localeText = React.useMemo(() => _extends({}, GRID_DEFAULT_LOCALE_TEXT, themedProps.localeText), [themedProps.localeText]);\n  const components = React.useMemo(() => {\n    const overrides = themedProps.components;\n    if (!overrides) {\n      return _extends({}, DATA_GRID_DEFAULT_SLOTS_COMPONENTS);\n    }\n    const mergedComponents = {};\n    Object.entries(DATA_GRID_DEFAULT_SLOTS_COMPONENTS).forEach(_ref => {\n      let [key, defaultComponent] = _ref;\n      mergedComponents[key] = overrides[key] === undefined ? defaultComponent : overrides[key];\n    });\n    return mergedComponents;\n  }, [themedProps.components]);\n  return React.useMemo(() => _extends({}, DATA_GRID_PROPS_DEFAULT_VALUES, themedProps, {\n    localeText,\n    components\n  }, DATA_GRID_FORCED_PROPS), [themedProps, localeText, components]);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\"];\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport { styled } from '@mui/material/styles';\nimport { unstable_composeClasses as composeClasses } from '@mui/material';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['virtualScroller']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst VirtualScrollerRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'VirtualScroller',\n  overridesResolver: (props, styles) => styles.virtualScroller\n})({\n  overflow: 'auto',\n  // See https://github.com/mui/mui-x/issues/4360\n  position: 'relative',\n  '@media print': {\n    overflow: 'hidden'\n  }\n});\nconst GridVirtualScroller = /*#__PURE__*/React.forwardRef(function GridVirtualScroller(props, ref) {\n  const {\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const rootProps = useGridRootProps();\n  const classes = useUtilityClasses(rootProps);\n  return /*#__PURE__*/_jsx(VirtualScrollerRoot, _extends({\n    ref: ref,\n    className: clsx(classes.root, className),\n    ownerState: rootProps\n  }, other));\n});\nexport { GridVirtualScroller };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"style\"];\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport { styled } from '@mui/material/styles';\nimport { unstable_composeClasses as composeClasses } from '@mui/material';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    overflowedContent\n  } = ownerState;\n  const slots = {\n    root: ['virtualScrollerContent', overflowedContent && 'virtualScrollerContent--overflowed']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst VirtualScrollerContentRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'VirtualScrollerContent',\n  overridesResolver: (props, styles) => styles.virtualScrollerContent\n})({});\nconst GridVirtualScrollerContent = /*#__PURE__*/React.forwardRef(function GridVirtualScrollerContent(props, ref) {\n  const {\n      className,\n      style\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const rootProps = useGridRootProps();\n  const ownerState = _extends({}, rootProps, {\n    overflowedContent: !rootProps.autoHeight && (style == null ? void 0 : style.minHeight) === 'auto'\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(VirtualScrollerContentRoot, _extends({\n    ref: ref,\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    style: style\n  }, other));\n});\nexport { GridVirtualScrollerContent };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\"];\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport { styled } from '@mui/material/styles';\nimport { unstable_composeClasses as composeClasses } from '@mui/material';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['virtualScrollerRenderZone']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst VirtualScrollerRenderZoneRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'VirtualScrollerRenderZone',\n  overridesResolver: (props, styles) => styles.virtualScrollerRenderZone\n})({\n  position: 'absolute',\n  display: 'flex',\n  // Prevents margin collapsing when using `getRowSpacing`\n  flexDirection: 'column'\n});\nconst GridVirtualScrollerRenderZone = /*#__PURE__*/React.forwardRef(function GridVirtualScrollerRenderZone(props, ref) {\n  const {\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const rootProps = useGridRootProps();\n  const classes = useUtilityClasses(rootProps);\n  return /*#__PURE__*/_jsx(VirtualScrollerRenderZoneRoot, _extends({\n    ref: ref,\n    className: clsx(classes.root, className),\n    ownerState: rootProps\n  }, other));\n});\nexport { GridVirtualScrollerRenderZone };","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"style\"];\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport { useForkRef, unstable_useEnhancedEffect as useEnhancedEffect } from '@mui/material/utils';\nimport { useGridApiContext } from '../../utils/useGridApiContext';\nimport { useGridRootProps } from '../../utils/useGridRootProps';\nimport { useGridSelector } from '../../utils/useGridSelector';\nimport { gridVisibleColumnDefinitionsSelector, gridColumnsTotalWidthSelector, gridColumnPositionsSelector } from '../columns/gridColumnsSelector';\nimport { gridDensityRowHeightSelector } from '../density/densitySelector';\nimport { gridFocusCellSelector, gridTabIndexCellSelector } from '../focus/gridFocusStateSelector';\nimport { gridEditRowsStateSelector } from '../editRows/gridEditRowsSelector';\nimport { useGridVisibleRows } from '../../utils/useGridVisibleRows';\nimport { useGridApiEventHandler } from '../../utils/useGridApiEventHandler';\nimport { clamp } from '../../../utils/utils';\nimport { selectedIdsLookupSelector } from '../selection/gridSelectionSelector';\nimport { gridRowsMetaSelector } from '../rows/gridRowsMetaSelector';\nimport { getFirstNonSpannedColumnToRender } from '../columns/gridColumnsUtils'; // Uses binary search to avoid looping through all possible positions\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function binarySearch(offset, positions) {\n  let sliceStart = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n  let sliceEnd = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : positions.length;\n  if (positions.length <= 0) {\n    return -1;\n  }\n  if (sliceStart >= sliceEnd) {\n    return sliceStart;\n  }\n  const pivot = sliceStart + Math.floor((sliceEnd - sliceStart) / 2);\n  const itemOffset = positions[pivot];\n  return offset <= itemOffset ? binarySearch(offset, positions, sliceStart, pivot) : binarySearch(offset, positions, pivot + 1, sliceEnd);\n}\nfunction exponentialSearch(offset, positions, index) {\n  let interval = 1;\n  while (index < positions.length && positions[index] < offset) {\n    index += interval;\n    interval *= 2;\n  }\n  return binarySearch(offset, positions, Math.floor(index / 2), Math.min(index, positions.length));\n}\nexport const getRenderableIndexes = _ref2 => {\n  let {\n    firstIndex,\n    lastIndex,\n    buffer,\n    minFirstIndex,\n    maxLastIndex\n  } = _ref2;\n  return [clamp(firstIndex - buffer, minFirstIndex, maxLastIndex), clamp(lastIndex + buffer, minFirstIndex, maxLastIndex)];\n};\nconst areRenderContextsEqual = (context1, context2) => {\n  if (context1 === context2) {\n    return true;\n  }\n  return context1.firstRowIndex === context2.firstRowIndex && context1.lastRowIndex === context2.lastRowIndex && context1.firstColumnIndex === context2.firstColumnIndex && context1.lastColumnIndex === context2.lastColumnIndex;\n};\nexport const useGridVirtualScroller = props => {\n  var _currentPage$range3, _currentPage$range4;\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const visibleColumns = useGridSelector(apiRef, gridVisibleColumnDefinitionsSelector);\n  const {\n    ref,\n    disableVirtualization,\n    onRenderZonePositioning,\n    renderZoneMinColumnIndex = 0,\n    renderZoneMaxColumnIndex = visibleColumns.length,\n    getRowProps\n  } = props;\n  const columnPositions = useGridSelector(apiRef, gridColumnPositionsSelector);\n  const columnsTotalWidth = useGridSelector(apiRef, gridColumnsTotalWidthSelector);\n  const rowHeight = useGridSelector(apiRef, gridDensityRowHeightSelector);\n  const cellFocus = useGridSelector(apiRef, gridFocusCellSelector);\n  const cellTabIndex = useGridSelector(apiRef, gridTabIndexCellSelector);\n  const rowsMeta = useGridSelector(apiRef, gridRowsMetaSelector);\n  const editRowsState = useGridSelector(apiRef, gridEditRowsStateSelector);\n  const selectedRowsLookup = useGridSelector(apiRef, selectedIdsLookupSelector);\n  const currentPage = useGridVisibleRows(apiRef, rootProps);\n  const renderZoneRef = React.useRef(null);\n  const rootRef = React.useRef(null);\n  const handleRef = useForkRef(ref, rootRef);\n  const [renderContext, setRenderContext] = React.useState(null);\n  const prevRenderContext = React.useRef(renderContext);\n  const scrollPosition = React.useRef({\n    top: 0,\n    left: 0\n  });\n  const [containerDimensions, setContainerDimensions] = React.useState({\n    width: null,\n    height: null\n  });\n  const prevTotalWidth = React.useRef(columnsTotalWidth);\n  const getNearestIndexToRender = React.useCallback(offset => {\n    var _currentPage$range, _currentPage$range2;\n    const lastMeasuredIndexRelativeToAllRows = apiRef.current.unstable_getLastMeasuredRowIndex();\n    let allRowsMeasured = lastMeasuredIndexRelativeToAllRows === Infinity;\n    if ((_currentPage$range = currentPage.range) != null && _currentPage$range.lastRowIndex && !allRowsMeasured) {\n      // Check if all rows in this page are already measured\n      allRowsMeasured = lastMeasuredIndexRelativeToAllRows >= currentPage.range.lastRowIndex;\n    }\n    const lastMeasuredIndexRelativeToCurrentPage = clamp(lastMeasuredIndexRelativeToAllRows - (((_currentPage$range2 = currentPage.range) == null ? void 0 : _currentPage$range2.firstRowIndex) || 0), 0, rowsMeta.positions.length);\n    if (allRowsMeasured || rowsMeta.positions[lastMeasuredIndexRelativeToCurrentPage] >= offset) {\n      // If all rows were measured (when no row has \"auto\" as height) or all rows before the offset\n      // were measured, then use a binary search because it's faster.\n      return binarySearch(offset, rowsMeta.positions);\n    } // Otherwise, use an exponential search.\n    // If rows have \"auto\" as height, their positions will be based on estimated heights.\n    // In this case, we can skip several steps until we find a position higher than the offset.\n    // Inspired by https://github.com/bvaughn/react-virtualized/blob/master/source/Grid/utils/CellSizeAndPositionManager.js\n\n    return exponentialSearch(offset, rowsMeta.positions, lastMeasuredIndexRelativeToCurrentPage);\n  }, [apiRef, (_currentPage$range3 = currentPage.range) == null ? void 0 : _currentPage$range3.firstRowIndex, (_currentPage$range4 = currentPage.range) == null ? void 0 : _currentPage$range4.lastRowIndex, rowsMeta.positions]);\n  const computeRenderContext = React.useCallback(() => {\n    if (disableVirtualization) {\n      return {\n        firstRowIndex: 0,\n        lastRowIndex: currentPage.rows.length,\n        firstColumnIndex: 0,\n        lastColumnIndex: visibleColumns.length\n      };\n    }\n    const {\n      top,\n      left\n    } = scrollPosition.current; // Clamp the value because the search may return an index out of bounds.\n    // In the last index, this is not needed because Array.slice doesn't include it.\n\n    const firstRowIndex = Math.min(getNearestIndexToRender(top), rowsMeta.positions.length - 1);\n    const lastRowIndex = rootProps.autoHeight ? firstRowIndex + currentPage.rows.length : getNearestIndexToRender(top + containerDimensions.height);\n    let hasRowWithAutoHeight = false;\n    let firstColumnIndex = 0;\n    let lastColumnIndex = columnPositions.length;\n    const [firstRowToRender, lastRowToRender] = getRenderableIndexes({\n      firstIndex: firstRowIndex,\n      lastIndex: lastRowIndex,\n      minFirstIndex: 0,\n      maxLastIndex: currentPage.rows.length,\n      buffer: rootProps.rowBuffer\n    });\n    for (let i = firstRowToRender; i < lastRowToRender && !hasRowWithAutoHeight; i += 1) {\n      const row = currentPage.rows[i];\n      hasRowWithAutoHeight = apiRef.current.unstable_rowHasAutoHeight(row.id);\n    }\n    if (!hasRowWithAutoHeight) {\n      firstColumnIndex = binarySearch(left, columnPositions);\n      lastColumnIndex = binarySearch(left + containerDimensions.width, columnPositions);\n    }\n    return {\n      firstRowIndex,\n      lastRowIndex,\n      firstColumnIndex,\n      lastColumnIndex\n    };\n  }, [disableVirtualization, getNearestIndexToRender, rowsMeta.positions.length, rootProps.autoHeight, rootProps.rowBuffer, currentPage.rows, columnPositions, visibleColumns.length, apiRef, containerDimensions]);\n  useEnhancedEffect(() => {\n    if (disableVirtualization) {\n      renderZoneRef.current.style.transform = `translate3d(0px, 0px, 0px)`;\n    } else {\n      // TODO a scroll reset should not be necessary\n      rootRef.current.scrollLeft = 0;\n      rootRef.current.scrollTop = 0;\n    }\n  }, [disableVirtualization]);\n  useEnhancedEffect(() => {\n    setContainerDimensions({\n      width: rootRef.current.clientWidth,\n      height: rootRef.current.clientHeight\n    });\n  }, [rowsMeta.currentPageTotalHeight]);\n  const handleResize = React.useCallback(params => {\n    setContainerDimensions({\n      width: params.width,\n      height: params.height\n    });\n  }, []);\n  useGridApiEventHandler(apiRef, 'resize', handleResize);\n  const updateRenderZonePosition = React.useCallback(nextRenderContext => {\n    const [firstRowToRender, lastRowToRender] = getRenderableIndexes({\n      firstIndex: nextRenderContext.firstRowIndex,\n      lastIndex: nextRenderContext.lastRowIndex,\n      minFirstIndex: 0,\n      maxLastIndex: currentPage.rows.length,\n      buffer: rootProps.rowBuffer\n    });\n    const [initialFirstColumnToRender] = getRenderableIndexes({\n      firstIndex: nextRenderContext.firstColumnIndex,\n      lastIndex: nextRenderContext.lastColumnIndex,\n      minFirstIndex: renderZoneMinColumnIndex,\n      maxLastIndex: renderZoneMaxColumnIndex,\n      buffer: rootProps.columnBuffer\n    });\n    const firstColumnToRender = getFirstNonSpannedColumnToRender({\n      firstColumnToRender: initialFirstColumnToRender,\n      apiRef,\n      firstRowToRender,\n      lastRowToRender,\n      visibleRows: currentPage.rows\n    });\n    const top = gridRowsMetaSelector(apiRef.current.state).positions[firstRowToRender];\n    const left = gridColumnPositionsSelector(apiRef)[firstColumnToRender]; // Call directly the selector because it might be outdated when this method is called\n\n    renderZoneRef.current.style.transform = `translate3d(${left}px, ${top}px, 0px)`;\n    if (typeof onRenderZonePositioning === 'function') {\n      onRenderZonePositioning({\n        top,\n        left\n      });\n    }\n  }, [apiRef, currentPage.rows, onRenderZonePositioning, renderZoneMinColumnIndex, renderZoneMaxColumnIndex, rootProps.columnBuffer, rootProps.rowBuffer]);\n  const updateRenderContext = React.useCallback(nextRenderContext => {\n    if (prevRenderContext.current && areRenderContextsEqual(nextRenderContext, prevRenderContext.current)) {\n      updateRenderZonePosition(nextRenderContext);\n      return;\n    }\n    setRenderContext(nextRenderContext);\n    updateRenderZonePosition(nextRenderContext);\n    const [firstRowToRender, lastRowToRender] = getRenderableIndexes({\n      firstIndex: nextRenderContext.firstRowIndex,\n      lastIndex: nextRenderContext.lastRowIndex,\n      minFirstIndex: 0,\n      maxLastIndex: currentPage.rows.length,\n      buffer: rootProps.rowBuffer\n    });\n    apiRef.current.publishEvent('renderedRowsIntervalChange', {\n      firstRowToRender,\n      lastRowToRender\n    });\n    prevRenderContext.current = nextRenderContext;\n  }, [apiRef, setRenderContext, prevRenderContext, currentPage.rows.length, rootProps.rowBuffer, updateRenderZonePosition]);\n  useEnhancedEffect(() => {\n    if (containerDimensions.width == null) {\n      return;\n    }\n    const initialRenderContext = computeRenderContext();\n    updateRenderContext(initialRenderContext);\n    const {\n      top,\n      left\n    } = scrollPosition.current;\n    const params = {\n      top,\n      left,\n      renderContext: initialRenderContext\n    };\n    apiRef.current.publishEvent('rowsScroll', params);\n  }, [apiRef, computeRenderContext, containerDimensions.width, updateRenderContext]);\n  const handleScroll = event => {\n    const {\n      scrollTop,\n      scrollLeft\n    } = event.currentTarget;\n    scrollPosition.current.top = scrollTop;\n    scrollPosition.current.left = scrollLeft; // On iOS and macOS, negative offsets are possible when swiping past the start\n\n    if (scrollLeft < 0 || scrollTop < 0 || !prevRenderContext.current) {\n      return;\n    } // When virtualization is disabled, the context never changes during scroll\n\n    const nextRenderContext = disableVirtualization ? prevRenderContext.current : computeRenderContext();\n    const topRowsScrolledSincePreviousRender = Math.abs(nextRenderContext.firstRowIndex - prevRenderContext.current.firstRowIndex);\n    const bottomRowsScrolledSincePreviousRender = Math.abs(nextRenderContext.lastRowIndex - prevRenderContext.current.lastRowIndex);\n    const topColumnsScrolledSincePreviousRender = Math.abs(nextRenderContext.firstColumnIndex - prevRenderContext.current.firstColumnIndex);\n    const bottomColumnsScrolledSincePreviousRender = Math.abs(nextRenderContext.lastColumnIndex - prevRenderContext.current.lastColumnIndex);\n    const shouldSetState = topRowsScrolledSincePreviousRender >= rootProps.rowThreshold || bottomRowsScrolledSincePreviousRender >= rootProps.rowThreshold || topColumnsScrolledSincePreviousRender >= rootProps.columnThreshold || bottomColumnsScrolledSincePreviousRender >= rootProps.columnThreshold || prevTotalWidth.current !== columnsTotalWidth; // TODO v6: rename event to a wider name, it's not only fired for row scrolling\n\n    apiRef.current.publishEvent('rowsScroll', {\n      top: scrollTop,\n      left: scrollLeft,\n      renderContext: shouldSetState ? nextRenderContext : prevRenderContext.current\n    }, event);\n    if (shouldSetState) {\n      // Prevents batching render context changes\n      ReactDOM.flushSync(() => {\n        updateRenderContext(nextRenderContext);\n      });\n      prevTotalWidth.current = columnsTotalWidth;\n    }\n  };\n  const handleWheel = event => {\n    apiRef.current.publishEvent('virtualScrollerWheel', {}, event);\n  };\n  const handleTouchMove = event => {\n    apiRef.current.publishEvent('virtualScrollerTouchMove', {}, event);\n  };\n  const getRows = function () {\n    let params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n      renderContext\n    };\n    const {\n      renderContext: nextRenderContext,\n      minFirstColumn = renderZoneMinColumnIndex,\n      maxLastColumn = renderZoneMaxColumnIndex,\n      availableSpace = containerDimensions.width,\n      rowIndexOffset = 0,\n      position = 'center'\n    } = params;\n    if (!nextRenderContext || availableSpace == null) {\n      return null;\n    }\n    const rowBuffer = !disableVirtualization ? rootProps.rowBuffer : 0;\n    const columnBuffer = !disableVirtualization ? rootProps.columnBuffer : 0;\n    const [firstRowToRender, lastRowToRender] = getRenderableIndexes({\n      firstIndex: nextRenderContext.firstRowIndex,\n      lastIndex: nextRenderContext.lastRowIndex,\n      minFirstIndex: 0,\n      maxLastIndex: currentPage.rows.length,\n      buffer: rowBuffer\n    });\n    const renderedRows = [];\n    if (params.rows) {\n      params.rows.forEach(row => {\n        renderedRows.push(row);\n        apiRef.current.unstable_calculateColSpan({\n          rowId: row.id,\n          minFirstColumn,\n          maxLastColumn,\n          columns: visibleColumns\n        });\n      });\n    } else {\n      if (!currentPage.range) {\n        return null;\n      }\n      for (let i = firstRowToRender; i < lastRowToRender; i += 1) {\n        const row = currentPage.rows[i];\n        renderedRows.push(row);\n        apiRef.current.unstable_calculateColSpan({\n          rowId: row.id,\n          minFirstColumn,\n          maxLastColumn,\n          columns: visibleColumns\n        });\n      }\n    }\n    const [initialFirstColumnToRender, lastColumnToRender] = getRenderableIndexes({\n      firstIndex: nextRenderContext.firstColumnIndex,\n      lastIndex: nextRenderContext.lastColumnIndex,\n      minFirstIndex: minFirstColumn,\n      maxLastIndex: maxLastColumn,\n      buffer: columnBuffer\n    });\n    const firstColumnToRender = getFirstNonSpannedColumnToRender({\n      firstColumnToRender: initialFirstColumnToRender,\n      apiRef,\n      firstRowToRender,\n      lastRowToRender,\n      visibleRows: currentPage.rows\n    });\n    const renderedColumns = visibleColumns.slice(firstColumnToRender, lastColumnToRender);\n    const rows = [];\n    for (let i = 0; i < renderedRows.length; i += 1) {\n      var _currentPage$range5, _rootProps$components;\n      const {\n        id,\n        model\n      } = renderedRows[i];\n      const lastVisibleRowIndex = firstRowToRender + i === currentPage.rows.length - 1;\n      const baseRowHeight = !apiRef.current.unstable_rowHasAutoHeight(id) ? apiRef.current.unstable_getRowHeight(id) : 'auto';\n      let isSelected;\n      if (selectedRowsLookup[id] == null) {\n        isSelected = false;\n      } else {\n        isSelected = apiRef.current.isRowSelectable(id);\n      }\n      rows.push(/*#__PURE__*/_jsx(rootProps.components.Row, _extends({\n        row: model,\n        rowId: id,\n        rowHeight: baseRowHeight,\n        cellFocus: cellFocus // TODO move to inside the row\n        ,\n\n        cellTabIndex: cellTabIndex // TODO move to inside the row\n        ,\n\n        editRowsState: editRowsState // TODO move to inside the row\n        ,\n\n        renderedColumns: renderedColumns,\n        visibleColumns: visibleColumns,\n        firstColumnToRender: firstColumnToRender,\n        lastColumnToRender: lastColumnToRender,\n        selected: isSelected,\n        index: rowIndexOffset + ((currentPage == null ? void 0 : (_currentPage$range5 = currentPage.range) == null ? void 0 : _currentPage$range5.firstRowIndex) || 0) + firstRowToRender + i,\n        containerWidth: availableSpace,\n        isLastVisible: lastVisibleRowIndex,\n        position: position\n      }, typeof getRowProps === 'function' ? getRowProps(id, model) : {}, (_rootProps$components = rootProps.componentsProps) == null ? void 0 : _rootProps$components.row), id));\n    }\n    return rows;\n  };\n  const needsHorizontalScrollbar = containerDimensions.width && columnsTotalWidth > containerDimensions.width;\n  const contentSize = React.useMemo(() => {\n    // In cases where the columns exceed the available width,\n    // the horizontal scrollbar should be shown even when there're no rows.\n    // Keeping 1px as minimum height ensures that the scrollbar will visible if necessary.\n    const height = Math.max(rowsMeta.currentPageTotalHeight, 1);\n    let shouldExtendContent = false;\n    if (rootRef != null && rootRef.current && height <= (rootRef == null ? void 0 : rootRef.current.clientHeight)) {\n      shouldExtendContent = true;\n    }\n    const size = {\n      width: needsHorizontalScrollbar ? columnsTotalWidth : 'auto',\n      height,\n      minHeight: shouldExtendContent ? '100%' : 'auto'\n    };\n    if (rootProps.autoHeight && currentPage.rows.length === 0) {\n      size.height = 2 * rowHeight; // Give room to show the overlay when there's no row.\n    }\n    return size;\n  }, [rootRef, columnsTotalWidth, rowsMeta.currentPageTotalHeight, currentPage.rows.length, needsHorizontalScrollbar, rootProps.autoHeight, rowHeight]);\n  React.useEffect(() => {\n    apiRef.current.publishEvent('virtualScrollerContentSizeChange');\n  }, [apiRef, contentSize]);\n  if (rootProps.autoHeight && currentPage.rows.length === 0) {\n    contentSize.height = 2 * rowHeight; // Give room to show the overlay when there no rows.\n  }\n  const rootStyle = {};\n  if (!needsHorizontalScrollbar) {\n    rootStyle.overflowX = 'hidden';\n  }\n  if (rootProps.autoHeight) {\n    rootStyle.overflowY = 'hidden';\n  }\n  const getRenderContext = React.useCallback(() => {\n    return prevRenderContext.current;\n  }, []);\n  apiRef.current.unstable_getRenderContext = getRenderContext;\n  return {\n    renderContext,\n    updateRenderZonePosition,\n    getRows,\n    getRootProps: function () {\n      let _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      let {\n          style = {}\n        } = _ref,\n        other = _objectWithoutPropertiesLoose(_ref, _excluded);\n      return _extends({\n        ref: handleRef,\n        onScroll: handleScroll,\n        onWheel: handleWheel,\n        onTouchMove: handleTouchMove,\n        style: _extends({}, style, rootStyle)\n      }, other);\n    },\n    getContentProps: function () {\n      let {\n        style = {}\n      } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      return {\n        style: _extends({}, style, contentSize)\n      };\n    },\n    getRenderZoneProps: () => ({\n      ref: renderZoneRef\n    })\n  };\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"disableVirtualization\"];\nimport * as React from 'react';\nimport { GridVirtualScroller } from './virtualization/GridVirtualScroller';\nimport { GridVirtualScrollerContent } from './virtualization/GridVirtualScrollerContent';\nimport { GridVirtualScrollerRenderZone } from './virtualization/GridVirtualScrollerRenderZone';\nimport { useGridVirtualScroller } from '../hooks/features/virtualization/useGridVirtualScroller';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst DataGridVirtualScroller = /*#__PURE__*/React.forwardRef(function DataGridVirtualScroller(props, ref) {\n  const {\n      className,\n      disableVirtualization\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const {\n    getRootProps,\n    getContentProps,\n    getRenderZoneProps,\n    getRows\n  } = useGridVirtualScroller({\n    ref,\n    disableVirtualization\n  });\n  return /*#__PURE__*/_jsx(GridVirtualScroller, _extends({\n    className: className\n  }, getRootProps(other), {\n    children: /*#__PURE__*/_jsx(GridVirtualScrollerContent, _extends({}, getContentProps(), {\n      children: /*#__PURE__*/_jsx(GridVirtualScrollerRenderZone, _extends({}, getRenderZoneProps(), {\n        children: getRows()\n      }))\n    }))\n  }));\n});\nexport { DataGridVirtualScroller };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_composeClasses as composeClasses } from '@mui/material';\nimport Badge from '@mui/material/Badge';\nimport IconButton from '@mui/material/IconButton';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { GridIconButtonContainer } from './GridIconButtonContainer';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    icon: ['sortIcon']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nfunction getIcon(icons, direction, className, sortingOrder) {\n  let Icon;\n  const iconProps = {};\n  if (direction === 'asc') {\n    Icon = icons.ColumnSortedAscendingIcon;\n  } else if (direction === 'desc') {\n    Icon = icons.ColumnSortedDescendingIcon;\n  } else {\n    Icon = icons.ColumnUnsortedIcon;\n    iconProps.sortingOrder = sortingOrder;\n  }\n  return Icon ? /*#__PURE__*/_jsx(Icon, _extends({\n    fontSize: \"small\",\n    className: className\n  }, iconProps)) : null;\n}\nfunction GridColumnHeaderSortIconRaw(props) {\n  const {\n    direction,\n    index,\n    sortingOrder\n  } = props;\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const ownerState = _extends({}, props, {\n    classes: rootProps.classes\n  });\n  const classes = useUtilityClasses(ownerState);\n  const iconElement = getIcon(rootProps.components, direction, classes.icon, sortingOrder);\n  if (!iconElement) {\n    return null;\n  }\n  const iconButton = /*#__PURE__*/_jsx(IconButton, {\n    tabIndex: -1,\n    \"aria-label\": apiRef.current.getLocaleText('columnHeaderSortIconLabel'),\n    title: apiRef.current.getLocaleText('columnHeaderSortIconLabel'),\n    size: \"small\",\n    children: iconElement\n  });\n  return /*#__PURE__*/_jsxs(GridIconButtonContainer, {\n    children: [index != null && /*#__PURE__*/_jsx(Badge, {\n      badgeContent: index,\n      color: \"default\",\n      children: iconButton\n    }), index == null && iconButton]\n  });\n}\nconst GridColumnHeaderSortIcon = /*#__PURE__*/React.memo(GridColumnHeaderSortIconRaw);\nprocess.env.NODE_ENV !== \"production\" ? GridColumnHeaderSortIconRaw.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  direction: PropTypes.oneOf(['asc', 'desc']),\n  index: PropTypes.number,\n  sortingOrder: PropTypes.arrayOf(PropTypes.oneOf(['asc', 'desc'])).isRequired\n} : void 0;\nexport { GridColumnHeaderSortIcon };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { unstable_composeClasses as composeClasses } from '@mui/material';\nimport IconButton from '@mui/material/IconButton';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    open\n  } = ownerState;\n  const slots = {\n    root: ['menuIcon', open && 'menuOpen'],\n    button: ['menuIconButton']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nexport const ColumnHeaderMenuIcon = /*#__PURE__*/React.memo(props => {\n  const {\n    column,\n    open,\n    columnMenuId,\n    columnMenuButtonId,\n    iconButtonRef\n  } = props;\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const ownerState = _extends({}, props, {\n    classes: rootProps.classes\n  });\n  const classes = useUtilityClasses(ownerState);\n  const handleMenuIconClick = React.useCallback(event => {\n    event.preventDefault();\n    event.stopPropagation();\n    apiRef.current.toggleColumnMenu(column.field);\n  }, [apiRef, column.field]);\n  return /*#__PURE__*/_jsx(\"div\", {\n    className: classes.root,\n    children: /*#__PURE__*/_jsx(IconButton, {\n      ref: iconButtonRef,\n      tabIndex: -1,\n      className: classes.button,\n      \"aria-label\": apiRef.current.getLocaleText('columnMenuLabel'),\n      title: apiRef.current.getLocaleText('columnMenuLabel'),\n      size: \"small\",\n      onClick: handleMenuIconClick,\n      \"aria-expanded\": open ? 'true' : undefined,\n      \"aria-haspopup\": \"true\",\n      \"aria-controls\": columnMenuId,\n      id: columnMenuButtonId,\n      children: /*#__PURE__*/_jsx(rootProps.components.ColumnMenuIcon, {\n        fontSize: \"small\"\n      })\n    })\n  });\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { HTMLElementType } from '@mui/utils';\nimport { useGridApiContext } from '../../../hooks/utils/useGridApiContext';\nimport { GridMenu } from '../GridMenu';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction GridColumnHeaderMenu(_ref) {\n  let {\n    columnMenuId,\n    columnMenuButtonId,\n    ContentComponent,\n    contentComponentProps,\n    field,\n    open,\n    target,\n    onExited\n  } = _ref;\n  const apiRef = useGridApiContext();\n  const currentColumn = apiRef.current.getColumn(field);\n  const hideMenu = React.useCallback(event => {\n    // Prevent triggering the sorting\n    event.stopPropagation();\n    apiRef.current.hideColumnMenu();\n  }, [apiRef]);\n  if (!target) {\n    return null;\n  }\n  return /*#__PURE__*/_jsx(GridMenu, {\n    placement: `bottom-${currentColumn.align === 'right' ? 'start' : 'end'}`,\n    open: open,\n    target: target,\n    onClickAway: hideMenu,\n    onExited: onExited,\n    children: /*#__PURE__*/_jsx(ContentComponent, _extends({\n      currentColumn: currentColumn,\n      hideMenu: hideMenu,\n      open: open,\n      id: columnMenuId,\n      labelledby: columnMenuButtonId\n    }, contentComponentProps))\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? GridColumnHeaderMenu.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  columnMenuButtonId: PropTypes.string,\n  columnMenuId: PropTypes.string,\n  ContentComponent: PropTypes.elementType.isRequired,\n  contentComponentProps: PropTypes.any,\n  field: PropTypes.string.isRequired,\n  onExited: PropTypes.func,\n  open: PropTypes.bool.isRequired,\n  target: HTMLElementType\n} : void 0;\nexport { GridColumnHeaderMenu };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/material';\nimport { styled } from '@mui/material/styles';\nimport { isOverflown } from '../../utils/domUtils';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['columnHeaderTitle']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridColumnHeaderTitleRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'ColumnHeaderTitle',\n  overridesResolver: (props, styles) => styles.columnHeaderTitle\n})(_ref => {\n  let {\n    theme\n  } = _ref;\n  return {\n    textOverflow: 'ellipsis',\n    overflow: 'hidden',\n    whiteSpace: 'nowrap',\n    fontWeight: theme.typography.fontWeightMedium\n  };\n});\nconst ColumnHeaderInnerTitle = /*#__PURE__*/React.forwardRef(function ColumnHeaderInnerTitle(props, ref) {\n  const {\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const rootProps = useGridRootProps();\n  const classes = useUtilityClasses(rootProps);\n  return /*#__PURE__*/_jsx(GridColumnHeaderTitleRoot, _extends({\n    ref: ref,\n    className: clsx(classes.root, className),\n    ownerState: rootProps\n  }, other));\n});\n\n// No React.memo here as if we display the sort icon, we need to recalculate the isOver\nfunction GridColumnHeaderTitle(props) {\n  var _rootProps$components;\n  const {\n    label,\n    description,\n    columnWidth\n  } = props;\n  const rootProps = useGridRootProps();\n  const titleRef = React.useRef(null);\n  const [tooltip, setTooltip] = React.useState('');\n  React.useEffect(() => {\n    if (!description && titleRef && titleRef.current) {\n      const isOver = isOverflown(titleRef.current);\n      if (isOver) {\n        setTooltip(label);\n      } else {\n        setTooltip('');\n      }\n    }\n  }, [titleRef, columnWidth, description, label]);\n  return /*#__PURE__*/_jsx(rootProps.components.BaseTooltip, _extends({\n    title: description || tooltip\n  }, (_rootProps$components = rootProps.componentsProps) == null ? void 0 : _rootProps$components.baseTooltip, {\n    children: /*#__PURE__*/_jsx(ColumnHeaderInnerTitle, {\n      ref: titleRef,\n      children: label\n    })\n  }));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridColumnHeaderTitle.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  columnWidth: PropTypes.number.isRequired,\n  description: PropTypes.node,\n  label: PropTypes.string.isRequired\n} : void 0;\nexport { GridColumnHeaderTitle };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"resizable\", \"resizing\", \"height\", \"side\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_composeClasses as composeClasses } from '@mui/material';\nimport { capitalize } from '@mui/material/utils';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar GridColumnHeaderSeparatorSides;\n(function (GridColumnHeaderSeparatorSides) {\n  GridColumnHeaderSeparatorSides[\"Left\"] = \"left\";\n  GridColumnHeaderSeparatorSides[\"Right\"] = \"right\";\n})(GridColumnHeaderSeparatorSides || (GridColumnHeaderSeparatorSides = {}));\nconst useUtilityClasses = ownerState => {\n  const {\n    resizable,\n    resizing,\n    classes,\n    side\n  } = ownerState;\n  const slots = {\n    root: ['columnSeparator', resizable && 'columnSeparator--resizable', resizing && 'columnSeparator--resizing', side && `columnSeparator--side${capitalize(side)}`],\n    icon: ['iconSeparator']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nfunction GridColumnHeaderSeparatorRaw(props) {\n  const {\n      height,\n      side = GridColumnHeaderSeparatorSides.Right\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const rootProps = useGridRootProps();\n  const ownerState = _extends({}, props, {\n    side,\n    classes: rootProps.classes\n  });\n  const classes = useUtilityClasses(ownerState);\n  const stopClick = React.useCallback(event => {\n    event.preventDefault();\n    event.stopPropagation();\n  }, []);\n  return (/*#__PURE__*/\n    // eslint-disable-next-line jsx-a11y/click-events-have-key-events,jsx-a11y/no-static-element-interactions\n    _jsx(\"div\", _extends({\n      className: classes.root,\n      style: {\n        minHeight: height,\n        opacity: rootProps.showColumnRightBorder ? 0 : 1\n      }\n    }, other, {\n      onClick: stopClick,\n      children: /*#__PURE__*/_jsx(rootProps.components.ColumnResizeIcon, {\n        className: classes.icon\n      })\n    }))\n  );\n}\nconst GridColumnHeaderSeparator = /*#__PURE__*/React.memo(GridColumnHeaderSeparatorRaw);\nprocess.env.NODE_ENV !== \"production\" ? GridColumnHeaderSeparatorRaw.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  height: PropTypes.number.isRequired,\n  resizable: PropTypes.bool.isRequired,\n  resizing: PropTypes.bool.isRequired,\n  side: PropTypes.oneOf(['left', 'right'])\n} : void 0;\nexport { GridColumnHeaderSeparator, GridColumnHeaderSeparatorSides };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"classes\", \"columnMenuOpen\", \"colIndex\", \"height\", \"isResizing\", \"sortDirection\", \"hasFocus\", \"tabIndex\", \"separatorSide\", \"isDraggable\", \"headerComponent\", \"description\", \"elementId\", \"width\", \"columnMenuIconButton\", \"columnMenu\", \"columnTitleIconButtons\", \"headerClassName\", \"label\", \"resizable\", \"draggableContainerProps\", \"columnHeaderSeparatorProps\", \"disableHeaderSeparator\"];\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport { useForkRef } from '@mui/material/utils';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { GridColumnHeaderTitle } from './GridColumnHeaderTitle';\nimport { GridColumnHeaderSeparator } from './GridColumnHeaderSeparator';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst GridGenericColumnHeaderItem = /*#__PURE__*/React.forwardRef(function GridGenericColumnHeaderItem(props, ref) {\n  const {\n      classes,\n      columnMenuOpen,\n      colIndex,\n      height,\n      isResizing,\n      sortDirection,\n      hasFocus,\n      tabIndex,\n      separatorSide,\n      isDraggable,\n      headerComponent,\n      description,\n      width,\n      columnMenuIconButton = null,\n      columnMenu = null,\n      columnTitleIconButtons = null,\n      headerClassName,\n      label,\n      resizable,\n      draggableContainerProps,\n      columnHeaderSeparatorProps,\n      disableHeaderSeparator\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const headerCellRef = React.useRef(null);\n  const [showColumnMenuIcon, setShowColumnMenuIcon] = React.useState(columnMenuOpen);\n  const handleRef = useForkRef(headerCellRef, ref);\n  let ariaSort = 'none';\n  if (sortDirection != null) {\n    ariaSort = sortDirection === 'asc' ? 'ascending' : 'descending';\n  }\n  React.useEffect(() => {\n    if (!showColumnMenuIcon) {\n      setShowColumnMenuIcon(columnMenuOpen);\n    }\n  }, [showColumnMenuIcon, columnMenuOpen]);\n  React.useLayoutEffect(() => {\n    const columnMenuState = apiRef.current.state.columnMenu;\n    if (hasFocus && !columnMenuState.open) {\n      const focusableElement = headerCellRef.current.querySelector('[tabindex=\"0\"]');\n      const elementToFocus = focusableElement || headerCellRef.current;\n      elementToFocus == null ? void 0 : elementToFocus.focus();\n      apiRef.current.columnHeadersContainerElementRef.current.scrollLeft = 0;\n    }\n  }, [apiRef, hasFocus]);\n  return /*#__PURE__*/_jsxs(\"div\", _extends({\n    ref: handleRef,\n    className: clsx(classes.root, headerClassName),\n    style: {\n      height,\n      width,\n      minWidth: width,\n      maxWidth: width\n    },\n    role: \"columnheader\",\n    tabIndex: tabIndex,\n    \"aria-colindex\": colIndex + 1,\n    \"aria-sort\": ariaSort,\n    \"aria-label\": headerComponent == null ? label : undefined\n  }, other, {\n    children: [/*#__PURE__*/_jsxs(\"div\", _extends({\n      className: classes.draggableContainer,\n      draggable: isDraggable\n    }, draggableContainerProps, {\n      children: [/*#__PURE__*/_jsxs(\"div\", {\n        className: classes.titleContainer,\n        children: [/*#__PURE__*/_jsx(\"div\", {\n          className: classes.titleContainerContent,\n          children: headerComponent !== undefined ? headerComponent : /*#__PURE__*/_jsx(GridColumnHeaderTitle, {\n            label: label,\n            description: description,\n            columnWidth: width\n          })\n        }), columnTitleIconButtons]\n      }), columnMenuIconButton]\n    })), !disableHeaderSeparator && /*#__PURE__*/_jsx(GridColumnHeaderSeparator, _extends({\n      resizable: !rootProps.disableColumnResize && !!resizable,\n      resizing: isResizing,\n      height: height,\n      side: separatorSide\n    }, columnHeaderSeparatorProps)), columnMenu]\n  }));\n});\nexport { GridGenericColumnHeaderItem };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_composeClasses as composeClasses } from '@mui/material';\nimport { unstable_useId as useId } from '@mui/material/utils';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { GridColumnHeaderSortIcon } from './GridColumnHeaderSortIcon';\nimport { ColumnHeaderMenuIcon } from './ColumnHeaderMenuIcon';\nimport { GridColumnHeaderMenu } from '../menu/columnMenu/GridColumnHeaderMenu';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { GridGenericColumnHeaderItem } from './GridGenericColumnHeaderItem';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    column,\n    classes,\n    isDragging,\n    sortDirection,\n    showRightBorder,\n    filterItemsCounter\n  } = ownerState;\n  const isColumnSorted = sortDirection != null;\n  const isColumnFiltered = filterItemsCounter != null && filterItemsCounter > 0; // todo refactor to a prop on col isNumeric or ?? ie: coltype===price wont work\n\n  const isColumnNumeric = column.type === 'number';\n  const slots = {\n    root: ['columnHeader', column.headerAlign === 'left' && 'columnHeader--alignLeft', column.headerAlign === 'center' && 'columnHeader--alignCenter', column.headerAlign === 'right' && 'columnHeader--alignRight', column.sortable && 'columnHeader--sortable', isDragging && 'columnHeader--moving', isColumnSorted && 'columnHeader--sorted', isColumnFiltered && 'columnHeader--filtered', isColumnNumeric && 'columnHeader--numeric', showRightBorder && 'withBorder'],\n    draggableContainer: ['columnHeaderDraggableContainer'],\n    titleContainer: ['columnHeaderTitleContainer'],\n    titleContainerContent: ['columnHeaderTitleContainerContent']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nfunction GridColumnHeaderItem(props) {\n  var _apiRef$current$getRo, _rootProps$components, _column$sortingOrder, _rootProps$components2, _column$headerName;\n  const {\n    column,\n    columnMenuOpen,\n    colIndex,\n    headerHeight,\n    isResizing,\n    isLastColumn,\n    sortDirection,\n    sortIndex,\n    filterItemsCounter,\n    hasFocus,\n    tabIndex,\n    extendRowFullWidth,\n    disableReorder,\n    separatorSide\n  } = props;\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const headerCellRef = React.useRef(null);\n  const columnMenuId = useId();\n  const columnMenuButtonId = useId();\n  const iconButtonRef = React.useRef(null);\n  const [showColumnMenuIcon, setShowColumnMenuIcon] = React.useState(columnMenuOpen);\n  const {\n    hasScrollX,\n    hasScrollY\n  } = (_apiRef$current$getRo = apiRef.current.getRootDimensions()) != null ? _apiRef$current$getRo : {\n    hasScrollX: false,\n    hasScrollY: false\n  };\n  const isDraggable = React.useMemo(() => !rootProps.disableColumnReorder && !disableReorder && !column.disableReorder, [rootProps.disableColumnReorder, disableReorder, column.disableReorder]);\n  let headerComponent;\n  if (column.renderHeader) {\n    headerComponent = column.renderHeader(apiRef.current.getColumnHeaderParams(column.field));\n  }\n  const removeLastBorderRight = isLastColumn && hasScrollX && !hasScrollY;\n  const showRightBorder = !isLastColumn ? rootProps.showColumnRightBorder : !removeLastBorderRight && !extendRowFullWidth;\n  const ownerState = _extends({}, props, {\n    classes: rootProps.classes,\n    showRightBorder\n  });\n  const classes = useUtilityClasses(ownerState);\n  const publish = React.useCallback(eventName => event => {\n    // Ignore portal\n    // See https://github.com/mui/mui-x/issues/1721\n    if (!event.currentTarget.contains(event.target)) {\n      return;\n    }\n    apiRef.current.publishEvent(eventName, apiRef.current.getColumnHeaderParams(column.field), event);\n  }, [apiRef, column.field]);\n  const mouseEventsHandlers = React.useMemo(() => ({\n    onClick: publish('columnHeaderClick'),\n    onDoubleClick: publish('columnHeaderDoubleClick'),\n    onMouseOver: publish('columnHeaderOver'),\n    // TODO remove as it's not used\n    onMouseOut: publish('columnHeaderOut'),\n    // TODO remove as it's not used\n    onMouseEnter: publish('columnHeaderEnter'),\n    // TODO remove as it's not used\n    onMouseLeave: publish('columnHeaderLeave'),\n    // TODO remove as it's not used\n    onKeyDown: publish('columnHeaderKeyDown'),\n    onFocus: publish('columnHeaderFocus'),\n    onBlur: publish('columnHeaderBlur')\n  }), [publish]);\n  const draggableEventHandlers = React.useMemo(() => isDraggable ? {\n    onDragStart: publish('columnHeaderDragStart'),\n    onDragEnter: publish('columnHeaderDragEnter'),\n    onDragOver: publish('columnHeaderDragOver'),\n    onDragEnd: publish('columnHeaderDragEnd')\n  } : {}, [isDraggable, publish]);\n  const columnHeaderSeparatorProps = React.useMemo(() => ({\n    onMouseDown: publish('columnSeparatorMouseDown')\n  }), [publish]);\n  React.useEffect(() => {\n    if (!showColumnMenuIcon) {\n      setShowColumnMenuIcon(columnMenuOpen);\n    }\n  }, [showColumnMenuIcon, columnMenuOpen]);\n  const handleExited = React.useCallback(() => {\n    setShowColumnMenuIcon(false);\n  }, []);\n  const columnMenuIconButton = !rootProps.disableColumnMenu && !column.disableColumnMenu && /*#__PURE__*/_jsx(ColumnHeaderMenuIcon, {\n    column: column,\n    columnMenuId: columnMenuId,\n    columnMenuButtonId: columnMenuButtonId,\n    open: showColumnMenuIcon,\n    iconButtonRef: iconButtonRef\n  });\n  const columnMenu = /*#__PURE__*/_jsx(GridColumnHeaderMenu, {\n    columnMenuId: columnMenuId,\n    columnMenuButtonId: columnMenuButtonId,\n    field: column.field,\n    open: columnMenuOpen,\n    target: iconButtonRef.current,\n    ContentComponent: rootProps.components.ColumnMenu,\n    contentComponentProps: (_rootProps$components = rootProps.componentsProps) == null ? void 0 : _rootProps$components.columnMenu,\n    onExited: handleExited\n  });\n  const sortingOrder = (_column$sortingOrder = column.sortingOrder) != null ? _column$sortingOrder : rootProps.sortingOrder;\n  const columnTitleIconButtons = /*#__PURE__*/_jsxs(React.Fragment, {\n    children: [!rootProps.disableColumnFilter && /*#__PURE__*/_jsx(rootProps.components.ColumnHeaderFilterIconButton, _extends({\n      field: column.field,\n      counter: filterItemsCounter\n    }, (_rootProps$components2 = rootProps.componentsProps) == null ? void 0 : _rootProps$components2.columnHeaderFilterIconButton)), column.sortable && !column.hideSortIcons && /*#__PURE__*/_jsx(GridColumnHeaderSortIcon, {\n      direction: sortDirection,\n      index: sortIndex,\n      sortingOrder: sortingOrder\n    })]\n  });\n  React.useLayoutEffect(() => {\n    const columnMenuState = apiRef.current.state.columnMenu;\n    if (hasFocus && !columnMenuState.open) {\n      const focusableElement = headerCellRef.current.querySelector('[tabindex=\"0\"]');\n      const elementToFocus = focusableElement || headerCellRef.current;\n      elementToFocus == null ? void 0 : elementToFocus.focus();\n      apiRef.current.columnHeadersContainerElementRef.current.scrollLeft = 0;\n    }\n  }, [apiRef, hasFocus]);\n  const headerClassName = typeof column.headerClassName === 'function' ? column.headerClassName({\n    field: column.field,\n    colDef: column\n  }) : column.headerClassName;\n  const label = (_column$headerName = column.headerName) != null ? _column$headerName : column.field;\n  return /*#__PURE__*/_jsx(GridGenericColumnHeaderItem, _extends({\n    ref: headerCellRef,\n    classes: classes,\n    columnMenuOpen: columnMenuOpen,\n    colIndex: colIndex,\n    height: headerHeight,\n    isResizing: isResizing,\n    sortDirection: sortDirection,\n    hasFocus: hasFocus,\n    tabIndex: tabIndex,\n    separatorSide: separatorSide,\n    isDraggable: isDraggable,\n    headerComponent: headerComponent,\n    description: column.description,\n    elementId: column.field,\n    width: column.computedWidth,\n    columnMenuIconButton: columnMenuIconButton,\n    columnTitleIconButtons: columnTitleIconButtons,\n    headerClassName: headerClassName,\n    label: label,\n    resizable: !rootProps.disableColumnResize && !!column.resizable,\n    \"data-field\": column.field,\n    columnMenu: columnMenu,\n    draggableContainerProps: draggableEventHandlers,\n    columnHeaderSeparatorProps: columnHeaderSeparatorProps\n  }, mouseEventsHandlers));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridColumnHeaderItem.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  colIndex: PropTypes.number.isRequired,\n  column: PropTypes.object.isRequired,\n  columnMenuOpen: PropTypes.bool.isRequired,\n  disableReorder: PropTypes.bool,\n  extendRowFullWidth: PropTypes.bool.isRequired,\n  filterItemsCounter: PropTypes.number,\n  hasFocus: PropTypes.bool,\n  headerHeight: PropTypes.number.isRequired,\n  isDragging: PropTypes.bool.isRequired,\n  isLastColumn: PropTypes.bool.isRequired,\n  isResizing: PropTypes.bool.isRequired,\n  separatorSide: PropTypes.oneOf(['left', 'right']),\n  sortDirection: PropTypes.oneOf(['asc', 'desc']),\n  sortIndex: PropTypes.number,\n  tabIndex: PropTypes.oneOf([-1, 0]).isRequired\n} : void 0;\nexport { GridColumnHeaderItem };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { unstable_useId as useId } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/material';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { gridColumnGroupsLookupSelector } from '../../hooks/features/columnGrouping/gridColumnGroupsSelector';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { useGridSelector } from '../../hooks/utils/useGridSelector';\nimport { GridGenericColumnHeaderItem } from './GridGenericColumnHeaderItem';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    headerAlign,\n    isDragging,\n    showRightBorder,\n    showColumnBorder,\n    groupId\n  } = ownerState;\n  const slots = {\n    root: ['columnHeader', headerAlign === 'left' && 'columnHeader--alignLeft', headerAlign === 'center' && 'columnHeader--alignCenter', headerAlign === 'right' && 'columnHeader--alignRight', isDragging && 'columnHeader--moving', showRightBorder && 'withBorder', showColumnBorder && 'columnHeader--showColumnBorder', groupId === null ? 'columnHeader--emptyGroup' : 'columnHeader--filledGroup'],\n    draggableContainer: ['columnHeaderDraggableContainer'],\n    titleContainer: ['columnHeaderTitleContainer'],\n    titleContainerContent: ['columnHeaderTitleContainerContent']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nfunction GridColumnGroupHeader(props) {\n  var _apiRef$current$getRo, _columnGroupsLookup$g;\n  const {\n    groupId,\n    width,\n    depth,\n    maxDepth,\n    fields,\n    height,\n    colIndex,\n    isLastColumn,\n    extendRowFullWidth\n  } = props;\n  const rootProps = useGridRootProps();\n  const apiRef = useGridApiContext();\n  const columnGroupsLookup = useGridSelector(apiRef, gridColumnGroupsLookupSelector);\n  const {\n    hasScrollX,\n    hasScrollY\n  } = (_apiRef$current$getRo = apiRef.current.getRootDimensions()) != null ? _apiRef$current$getRo : {\n    hasScrollX: false,\n    hasScrollY: false\n  };\n  const group = groupId ? columnGroupsLookup[groupId] : {};\n  const {\n    headerName = groupId != null ? groupId : '',\n    description = '',\n    headerAlign = undefined\n  } = group;\n  let headerComponent;\n  const render = groupId && ((_columnGroupsLookup$g = columnGroupsLookup[groupId]) == null ? void 0 : _columnGroupsLookup$g.renderHeaderGroup);\n  const renderParams = {\n    groupId,\n    headerName,\n    description,\n    depth,\n    maxDepth,\n    fields,\n    colIndex,\n    isLastColumn\n  };\n  if (groupId && render) {\n    headerComponent = render(renderParams);\n  }\n  const removeLastBorderRight = isLastColumn && hasScrollX && !hasScrollY;\n  const showRightBorder = !isLastColumn ? rootProps.showColumnRightBorder : !removeLastBorderRight && !extendRowFullWidth;\n  const showColumnBorder = rootProps.showColumnRightBorder;\n  const ownerState = _extends({}, props, {\n    classes: rootProps.classes,\n    showRightBorder,\n    showColumnBorder,\n    headerAlign,\n    depth,\n    isDragging: false\n  });\n  const label = headerName != null ? headerName : groupId;\n  const id = useId();\n  const elementId = groupId === null ? `empty-group-cell-${id}` : groupId;\n  const classes = useUtilityClasses(ownerState);\n  const headerClassName = typeof group.headerClassName === 'function' ? group.headerClassName(renderParams) : group.headerClassName;\n  return /*#__PURE__*/_jsx(GridGenericColumnHeaderItem, {\n    classes: classes,\n    columnMenuOpen: false,\n    colIndex: colIndex,\n    height: height,\n    isResizing: false,\n    sortDirection: null,\n    hasFocus: false,\n    tabIndex: -1,\n    isDraggable: false,\n    headerComponent: headerComponent,\n    headerClassName: headerClassName,\n    description: description,\n    elementId: elementId,\n    width: width,\n    columnMenuIconButton: null,\n    columnTitleIconButtons: null,\n    resizable: false,\n    label: label,\n    \"aria-colspan\": fields.length // The fields are wrapped between |-...-| to avoid confusion between fields \"id\" and \"id2\" when using selector data-fields~=\n    ,\n\n    \"data-fields\": `|-${fields.join('-|-')}-|`,\n    disableHeaderSeparator: true\n  });\n}\nexport { GridColumnGroupHeader };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport { useForkRef } from '@mui/material/utils';\nimport { styled } from '@mui/material/styles';\nimport { defaultMemoize } from 'reselect';\nimport { useGridApiContext } from '../../utils/useGridApiContext';\nimport { useGridSelector } from '../../utils/useGridSelector';\nimport { gridVisibleColumnDefinitionsSelector, gridColumnPositionsSelector } from '../columns/gridColumnsSelector';\nimport { gridTabIndexColumnHeaderSelector, gridTabIndexCellSelector, gridFocusColumnHeaderSelector } from '../focus/gridFocusStateSelector';\nimport { gridDensityHeaderHeightSelector, gridDensityHeaderGroupingMaxDepthSelector, gridDensityTotalHeaderHeightSelector } from '../density/densitySelector';\nimport { gridFilterActiveItemsLookupSelector } from '../filter/gridFilterSelector';\nimport { gridSortColumnLookupSelector } from '../sorting/gridSortingSelector';\nimport { gridColumnMenuSelector } from '../columnMenu/columnMenuSelector';\nimport { useGridRootProps } from '../../utils/useGridRootProps';\nimport { useGridApiEventHandler } from '../../utils/useGridApiEventHandler';\nimport { GridColumnHeaderItem } from '../../../components/columnHeaders/GridColumnHeaderItem';\nimport { getFirstColumnIndexToRender } from '../columns/gridColumnsUtils';\nimport { useGridVisibleRows } from '../../utils/useGridVisibleRows';\nimport { getRenderableIndexes } from '../virtualization/useGridVirtualScroller';\nimport { GridColumnGroupHeader } from '../../../components/columnHeaders/GridColumnGroupHeader';\nimport { isDeepEqual } from '../../../utils/utils';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n// TODO: add the possibility to switch this value if needed for customization\nconst MERGE_EMPTY_CELLS = true;\nconst GridColumnHeaderRow = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'ColumnHeaderRow',\n  overridesResolver: (props, styles) => styles.columnHeaderRow\n})(() => ({\n  display: 'flex'\n}));\nfunction isUIEvent(event) {\n  return !!event.target;\n}\nexport const useGridColumnHeaders = props => {\n  const {\n    innerRef: innerRefProp,\n    minColumnIndex = 0\n  } = props;\n  const [dragCol, setDragCol] = React.useState('');\n  const [resizeCol, setResizeCol] = React.useState('');\n  const apiRef = useGridApiContext();\n  const visibleColumns = useGridSelector(apiRef, gridVisibleColumnDefinitionsSelector);\n  const columnPositions = useGridSelector(apiRef, gridColumnPositionsSelector);\n  const tabIndexState = useGridSelector(apiRef, gridTabIndexColumnHeaderSelector);\n  const cellTabIndexState = useGridSelector(apiRef, gridTabIndexCellSelector);\n  const columnHeaderFocus = useGridSelector(apiRef, gridFocusColumnHeaderSelector);\n  const headerHeight = useGridSelector(apiRef, gridDensityHeaderHeightSelector);\n  const headerGroupingMaxDepth = useGridSelector(apiRef, gridDensityHeaderGroupingMaxDepthSelector);\n  const totalHeaderHeight = useGridSelector(apiRef, gridDensityTotalHeaderHeightSelector);\n  const filterColumnLookup = useGridSelector(apiRef, gridFilterActiveItemsLookupSelector);\n  const sortColumnLookup = useGridSelector(apiRef, gridSortColumnLookupSelector);\n  const columnMenuState = useGridSelector(apiRef, gridColumnMenuSelector);\n  const rootProps = useGridRootProps();\n  const innerRef = React.useRef(null);\n  const handleInnerRef = useForkRef(innerRefProp, innerRef);\n  const [renderContext, setRenderContext] = React.useState(null);\n  const prevRenderContext = React.useRef(renderContext);\n  const prevScrollLeft = React.useRef(0);\n  const currentPage = useGridVisibleRows(apiRef, rootProps);\n  React.useEffect(() => {\n    apiRef.current.columnHeadersContainerElementRef.current.scrollLeft = 0;\n  }, [apiRef]); // memoize `getFirstColumnIndexToRender`, since it's called on scroll\n\n  const getFirstColumnIndexToRenderRef = React.useRef(defaultMemoize(getFirstColumnIndexToRender, {\n    equalityCheck: (a, b) => ['firstColumnIndex', 'minColumnIndex', 'columnBuffer'].every(key => a[key] === b[key])\n  }));\n  const updateInnerPosition = React.useCallback(nextRenderContext => {\n    const [firstRowToRender, lastRowToRender] = getRenderableIndexes({\n      firstIndex: nextRenderContext.firstRowIndex,\n      lastIndex: nextRenderContext.lastRowIndex,\n      minFirstIndex: 0,\n      maxLastIndex: currentPage.rows.length,\n      buffer: rootProps.rowBuffer\n    });\n    const firstColumnToRender = getFirstColumnIndexToRenderRef.current({\n      firstColumnIndex: nextRenderContext.firstColumnIndex,\n      minColumnIndex,\n      columnBuffer: rootProps.columnBuffer,\n      firstRowToRender,\n      lastRowToRender,\n      apiRef,\n      visibleRows: currentPage.rows\n    });\n    const offset = firstColumnToRender > 0 ? prevScrollLeft.current - columnPositions[firstColumnToRender] : prevScrollLeft.current;\n    innerRef.current.style.transform = `translate3d(${-offset}px, 0px, 0px)`;\n  }, [columnPositions, minColumnIndex, rootProps.columnBuffer, apiRef, currentPage.rows, rootProps.rowBuffer]);\n  React.useLayoutEffect(() => {\n    if (renderContext) {\n      updateInnerPosition(renderContext);\n    }\n  }, [renderContext, updateInnerPosition]);\n  const handleScroll = React.useCallback((_ref, event) => {\n    let {\n      left,\n      renderContext: nextRenderContext = null\n    } = _ref;\n    var _prevRenderContext$cu, _prevRenderContext$cu2;\n    if (!innerRef.current) {\n      return;\n    } // Ignore vertical scroll.\n    // Excepts the first event which sets the previous render context.\n\n    if (prevScrollLeft.current === left && ((_prevRenderContext$cu = prevRenderContext.current) == null ? void 0 : _prevRenderContext$cu.firstColumnIndex) === (nextRenderContext == null ? void 0 : nextRenderContext.firstColumnIndex) && ((_prevRenderContext$cu2 = prevRenderContext.current) == null ? void 0 : _prevRenderContext$cu2.lastColumnIndex) === (nextRenderContext == null ? void 0 : nextRenderContext.lastColumnIndex)) {\n      return;\n    }\n    prevScrollLeft.current = left; // We can only update the position when we guarantee that the render context has been\n    // rendered. This is achieved using ReactDOM.flushSync or when the context doesn't change.\n\n    let canUpdateInnerPosition = false;\n    if (nextRenderContext !== prevRenderContext.current || !prevRenderContext.current) {\n      // ReactDOM.flushSync cannot be called on `scroll` events fired inside effects\n      if (isUIEvent(event)) {\n        // To prevent flickering, the inner position can only be updated after the new context has\n        // been rendered. ReactDOM.flushSync ensures that the state changes will happen before\n        // updating the position.\n        ReactDOM.flushSync(() => {\n          setRenderContext(nextRenderContext);\n        });\n        canUpdateInnerPosition = true;\n      } else {\n        setRenderContext(nextRenderContext);\n      }\n      prevRenderContext.current = nextRenderContext;\n    } else {\n      canUpdateInnerPosition = true;\n    } // Pass directly the render context to avoid waiting for the next render\n\n    if (nextRenderContext && canUpdateInnerPosition) {\n      updateInnerPosition(nextRenderContext);\n    }\n  }, [updateInnerPosition]);\n  const handleColumnResizeStart = React.useCallback(params => setResizeCol(params.field), []);\n  const handleColumnResizeStop = React.useCallback(() => setResizeCol(''), []);\n  const handleColumnReorderStart = React.useCallback(params => setDragCol(params.field), []);\n  const handleColumnReorderStop = React.useCallback(() => setDragCol(''), []);\n  useGridApiEventHandler(apiRef, 'columnResizeStart', handleColumnResizeStart);\n  useGridApiEventHandler(apiRef, 'columnResizeStop', handleColumnResizeStop);\n  useGridApiEventHandler(apiRef, 'columnHeaderDragStart', handleColumnReorderStart);\n  useGridApiEventHandler(apiRef, 'columnHeaderDragEnd', handleColumnReorderStop);\n  useGridApiEventHandler(apiRef, 'rowsScroll', handleScroll); // Helper for computation common between getColumnHeaders and getColumnGroupHeaders\n\n  const getColumnsToRender = params => {\n    const {\n      renderContext: nextRenderContext = renderContext,\n      minFirstColumn = minColumnIndex,\n      maxLastColumn = visibleColumns.length\n    } = params || {};\n    if (!nextRenderContext) {\n      return null;\n    }\n    const [firstRowToRender, lastRowToRender] = getRenderableIndexes({\n      firstIndex: nextRenderContext.firstRowIndex,\n      lastIndex: nextRenderContext.lastRowIndex,\n      minFirstIndex: 0,\n      maxLastIndex: currentPage.rows.length,\n      buffer: rootProps.rowBuffer\n    });\n    const firstColumnToRender = getFirstColumnIndexToRenderRef.current({\n      firstColumnIndex: nextRenderContext.firstColumnIndex,\n      minColumnIndex: minFirstColumn,\n      columnBuffer: rootProps.columnBuffer,\n      apiRef,\n      firstRowToRender,\n      lastRowToRender,\n      visibleRows: currentPage.rows\n    });\n    const lastColumnToRender = Math.min(nextRenderContext.lastColumnIndex + rootProps.columnBuffer, maxLastColumn);\n    const renderedColumns = visibleColumns.slice(firstColumnToRender, lastColumnToRender);\n    return {\n      renderedColumns,\n      firstColumnToRender,\n      lastColumnToRender,\n      minFirstColumn,\n      maxLastColumn\n    };\n  };\n  const getColumnHeaders = function (params) {\n    let other = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    const columnsToRender = getColumnsToRender(params);\n    if (columnsToRender == null) {\n      return null;\n    }\n    const {\n      renderedColumns,\n      firstColumnToRender\n    } = columnsToRender;\n    const columns = [];\n    for (let i = 0; i < renderedColumns.length; i += 1) {\n      const column = renderedColumns[i];\n      const columnIndex = firstColumnToRender + i;\n      const isFirstColumn = columnIndex === 0;\n      const hasTabbableElement = !(tabIndexState === null && cellTabIndexState === null);\n      const tabIndex = tabIndexState !== null && tabIndexState.field === column.field || isFirstColumn && !hasTabbableElement ? 0 : -1;\n      const hasFocus = columnHeaderFocus !== null && columnHeaderFocus.field === column.field;\n      const open = columnMenuState.open && columnMenuState.field === column.field;\n      columns.push(/*#__PURE__*/_jsx(GridColumnHeaderItem, _extends({}, sortColumnLookup[column.field], {\n        columnMenuOpen: open,\n        filterItemsCounter: filterColumnLookup[column.field] && filterColumnLookup[column.field].length,\n        headerHeight: headerHeight,\n        isDragging: column.field === dragCol,\n        column: column,\n        colIndex: columnIndex,\n        isResizing: resizeCol === column.field,\n        isLastColumn: columnIndex === visibleColumns.length - 1,\n        extendRowFullWidth: !rootProps.disableExtendRowFullWidth,\n        hasFocus: hasFocus,\n        tabIndex: tabIndex\n      }, other), column.field));\n    }\n    return /*#__PURE__*/_jsx(GridColumnHeaderRow, {\n      role: \"row\",\n      \"aria-rowindex\": headerGroupingMaxDepth + 1,\n      ownerState: rootProps,\n      children: columns\n    });\n  };\n  const getParents = function () {\n    let path = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n    let depth = arguments.length > 1 ? arguments[1] : undefined;\n    return path.slice(0, depth + 1);\n  };\n  const getColumnGroupHeaders = params => {\n    if (headerGroupingMaxDepth === 0) {\n      return null;\n    }\n    const columnsToRender = getColumnsToRender(params);\n    if (columnsToRender == null || columnsToRender.renderedColumns.length === 0) {\n      return null;\n    }\n    const {\n      renderedColumns,\n      firstColumnToRender,\n      lastColumnToRender,\n      maxLastColumn\n    } = columnsToRender;\n    const columns = [];\n    const headerToRender = [];\n    for (let depth = 0; depth < headerGroupingMaxDepth; depth += 1) {\n      var _visibleColumns$first, _visibleColumns$first2, _visibleColumns$first3;\n\n      // Initialize the header line with a grouping item containing all the columns on the left of the virtualization which are in the same group as the first group to render\n      const initialHeader = [];\n      let leftOverflow = 0;\n      let columnIndex = firstColumnToRender - 1;\n      const firstColumnToRenderGroup = (_visibleColumns$first = visibleColumns[firstColumnToRender]) == null ? void 0 : (_visibleColumns$first2 = _visibleColumns$first.groupPath) == null ? void 0 : _visibleColumns$first2[depth]; // The array of parent is used to manage empty grouping cell\n      // When two empty grouping cell are next to each other, we merge them if the belong to the same group.\n\n      const firstColumnToRenderGroupParents = getParents((_visibleColumns$first3 = visibleColumns[firstColumnToRender]) == null ? void 0 : _visibleColumns$first3.groupPath, depth);\n      while (firstColumnToRenderGroup !== null && columnIndex >= minColumnIndex && (_visibleColumns$colum = visibleColumns[columnIndex]) != null && _visibleColumns$colum.groupPath && isDeepEqual(getParents((_visibleColumns$colum2 = visibleColumns[columnIndex]) == null ? void 0 : _visibleColumns$colum2.groupPath, depth), firstColumnToRenderGroupParents)) {\n        var _visibleColumns$colum, _visibleColumns$colum2, _column$computedWidth;\n        const column = visibleColumns[columnIndex];\n        leftOverflow += (_column$computedWidth = column.computedWidth) != null ? _column$computedWidth : 0;\n        if (initialHeader.length === 0) {\n          var _column$computedWidth2;\n          initialHeader.push({\n            width: (_column$computedWidth2 = column.computedWidth) != null ? _column$computedWidth2 : 0,\n            fields: [column.field],\n            groupId: firstColumnToRenderGroup,\n            groupParents: firstColumnToRenderGroupParents,\n            colIndex: columnIndex\n          });\n        } else {\n          var _column$computedWidth3;\n          initialHeader[0].width += (_column$computedWidth3 = column.computedWidth) != null ? _column$computedWidth3 : 0;\n          initialHeader[0].fields.push(column.field);\n          initialHeader[0].colIndex = columnIndex;\n        }\n        columnIndex -= 1;\n      }\n      const depthInfo = renderedColumns.reduce((aggregated, column, i) => {\n        var _column$computedWidth7;\n        const lastItem = aggregated[aggregated.length - 1];\n        if (column.groupPath && column.groupPath.length > depth) {\n          var _column$computedWidth5;\n          if (lastItem && lastItem.groupId === column.groupPath[depth]) {\n            var _column$computedWidth4;\n\n            // Merge with the previous columns\n            return [...aggregated.slice(0, aggregated.length - 1), _extends({}, lastItem, {\n              width: lastItem.width + ((_column$computedWidth4 = column.computedWidth) != null ? _column$computedWidth4 : 0),\n              fields: [...lastItem.fields, column.field]\n            })];\n          } // Create a new grouping\n\n          return [...aggregated, {\n            groupId: column.groupPath[depth],\n            groupParents: getParents(column.groupPath, depth),\n            width: (_column$computedWidth5 = column.computedWidth) != null ? _column$computedWidth5 : 0,\n            fields: [column.field],\n            colIndex: firstColumnToRender + i\n          }];\n        }\n        if (MERGE_EMPTY_CELLS && lastItem && lastItem.groupId === null && isDeepEqual(getParents(column.groupPath, depth), lastItem.groupParents)) {\n          var _column$computedWidth6;\n\n          // We merge with previous column\n          return [...aggregated.slice(0, aggregated.length - 1), _extends({}, lastItem, {\n            width: lastItem.width + ((_column$computedWidth6 = column.computedWidth) != null ? _column$computedWidth6 : 0),\n            fields: [...lastItem.fields, column.field]\n          })];\n        } // We create new empty cell\n\n        return [...aggregated, {\n          groupId: null,\n          groupParents: getParents(column.groupPath, depth),\n          width: (_column$computedWidth7 = column.computedWidth) != null ? _column$computedWidth7 : 0,\n          fields: [column.field],\n          colIndex: firstColumnToRender + i\n        }];\n      }, initialHeader);\n      columnIndex = lastColumnToRender;\n      const lastColumnToRenderGroup = depthInfo[depthInfo.length - 1].groupId;\n      while (lastColumnToRenderGroup !== null && columnIndex < maxLastColumn && (_visibleColumns$colum3 = visibleColumns[columnIndex]) != null && _visibleColumns$colum3.groupPath && ((_visibleColumns$colum4 = visibleColumns[columnIndex]) == null ? void 0 : (_visibleColumns$colum5 = _visibleColumns$colum4.groupPath) == null ? void 0 : _visibleColumns$colum5[depth]) === lastColumnToRenderGroup) {\n        var _visibleColumns$colum3, _visibleColumns$colum4, _visibleColumns$colum5, _column$computedWidth8;\n        const column = visibleColumns[columnIndex];\n        depthInfo[depthInfo.length - 1].width += (_column$computedWidth8 = column.computedWidth) != null ? _column$computedWidth8 : 0;\n        depthInfo[depthInfo.length - 1].fields.push(column.field);\n        columnIndex += 1;\n      }\n      headerToRender.push({\n        leftOverflow,\n        elements: [...depthInfo]\n      });\n    }\n    headerToRender.forEach((depthInfo, depthIndex) => {\n      columns.push(/*#__PURE__*/_jsx(GridColumnHeaderRow, {\n        style: {\n          height: `${headerHeight}px`,\n          transform: `translateX(-${depthInfo.leftOverflow}px)`\n        },\n        role: \"row\",\n        \"aria-rowindex\": depthIndex + 1,\n        ownerState: rootProps,\n        children: depthInfo.elements.map((_ref2, groupIndex) => {\n          let {\n            groupId,\n            width,\n            fields,\n            colIndex\n          } = _ref2;\n          return /*#__PURE__*/_jsx(GridColumnGroupHeader, {\n            groupId: groupId,\n            width: width,\n            fields: fields,\n            colIndex: colIndex,\n            depth: depthIndex,\n            isLastColumn: colIndex === visibleColumns.length - fields.length,\n            extendRowFullWidth: !rootProps.disableExtendRowFullWidth,\n            maxDepth: headerToRender.length,\n            height: headerHeight\n          }, groupIndex);\n        })\n      }, depthIndex));\n    });\n    return columns;\n  };\n  const rootStyle = {\n    minHeight: totalHeaderHeight,\n    maxHeight: totalHeaderHeight,\n    lineHeight: `${headerHeight}px`\n  };\n  return {\n    renderContext,\n    getColumnHeaders,\n    getColumnGroupHeaders,\n    isDragging: !!dragCol,\n    getRootProps: function () {\n      let other = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      return _extends({\n        style: rootStyle\n      }, other);\n    },\n    getInnerProps: () => ({\n      ref: handleInnerRef,\n      role: 'rowgroup'\n    })\n  };\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/material';\nimport { styled } from '@mui/material/styles';\nimport { useGridApiEventHandler } from '../hooks/utils/useGridApiEventHandler';\nimport { useGridApiContext } from '../hooks/utils/useGridApiContext';\nimport { getDataGridUtilityClass, gridClasses } from '../constants/gridClasses';\nimport { useGridRootProps } from '../hooks/utils/useGridRootProps';\nimport { gridDensityHeaderHeightSelector } from '../hooks/features/density/densitySelector';\nimport { useGridSelector } from '../hooks/utils/useGridSelector';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CLIFF = 1;\nconst SLOP = 1.5;\nconst useUtilityClasses = ownerState => {\n  const {\n    scrollDirection,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['scrollArea', `scrollArea--${scrollDirection}`]\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridScrollAreaRawRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'ScrollArea',\n  overridesResolver: (props, styles) => [{\n    [`&.${gridClasses['scrollArea--left']}`]: styles['scrollArea--left']\n  }, {\n    [`&.${gridClasses['scrollArea--right']}`]: styles['scrollArea--right']\n  }, styles.scrollArea]\n})(() => ({\n  position: 'absolute',\n  top: 0,\n  zIndex: 101,\n  width: 20,\n  bottom: 0,\n  [`&.${gridClasses['scrollArea--left']}`]: {\n    left: 0\n  },\n  [`&.${gridClasses['scrollArea--right']}`]: {\n    right: 0\n  }\n}));\nfunction GridScrollAreaRaw(props) {\n  const {\n    scrollDirection\n  } = props;\n  const rootRef = React.useRef(null);\n  const apiRef = useGridApiContext();\n  const timeout = React.useRef();\n  const [dragging, setDragging] = React.useState(false);\n  const height = useGridSelector(apiRef, gridDensityHeaderHeightSelector);\n  const scrollPosition = React.useRef({\n    left: 0,\n    top: 0\n  });\n  const rootProps = useGridRootProps();\n  const ownerState = _extends({}, rootProps, {\n    scrollDirection\n  });\n  const classes = useUtilityClasses(ownerState);\n  const handleScrolling = React.useCallback(newScrollPosition => {\n    scrollPosition.current = newScrollPosition;\n  }, []);\n  const handleDragOver = React.useCallback(event => {\n    let offset;\n    if (scrollDirection === 'left') {\n      offset = event.clientX - rootRef.current.getBoundingClientRect().right;\n    } else if (scrollDirection === 'right') {\n      offset = Math.max(1, event.clientX - rootRef.current.getBoundingClientRect().left);\n    } else {\n      throw new Error('MUI: Wrong drag direction');\n    }\n    offset = (offset - CLIFF) * SLOP + CLIFF;\n    clearTimeout(timeout.current); // Avoid freeze and inertia.\n\n    timeout.current = setTimeout(() => {\n      apiRef.current.scroll({\n        left: scrollPosition.current.left + offset,\n        top: scrollPosition.current.top\n      });\n    });\n  }, [scrollDirection, apiRef]);\n  React.useEffect(() => {\n    return () => {\n      clearTimeout(timeout.current);\n    };\n  }, []);\n  const toggleDragging = React.useCallback(() => {\n    setDragging(prevDragging => !prevDragging);\n  }, []);\n  useGridApiEventHandler(apiRef, 'rowsScroll', handleScrolling);\n  useGridApiEventHandler(apiRef, 'columnHeaderDragStart', toggleDragging);\n  useGridApiEventHandler(apiRef, 'columnHeaderDragEnd', toggleDragging);\n  return dragging ? /*#__PURE__*/_jsx(GridScrollAreaRawRoot, {\n    ref: rootRef,\n    className: clsx(classes.root),\n    ownerState: ownerState,\n    onDragOver: handleDragOver,\n    style: {\n      height\n    }\n  }) : null;\n}\nprocess.env.NODE_ENV !== \"production\" ? GridScrollAreaRaw.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  scrollDirection: PropTypes.oneOf(['left', 'right']).isRequired\n} : void 0;\nconst GridScrollArea = /*#__PURE__*/React.memo(GridScrollAreaRaw);\nexport { GridScrollArea };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\"];\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/material';\nimport { styled, alpha, lighten, darken } from '@mui/material/styles';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['columnHeaders']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridColumnHeadersRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'ColumnHeaders',\n  overridesResolver: (props, styles) => styles.columnHeaders\n})(_ref => {\n  let {\n    theme\n  } = _ref;\n  const borderColor = theme.palette.mode === 'light' ? lighten(alpha(theme.palette.divider, 1), 0.88) : darken(alpha(theme.palette.divider, 1), 0.68);\n  return {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0,\n    overflow: 'hidden',\n    display: 'flex',\n    alignItems: 'center',\n    boxSizing: 'border-box',\n    borderBottom: `1px solid ${borderColor}`,\n    borderTopLeftRadius: theme.shape.borderRadius,\n    borderTopRightRadius: theme.shape.borderRadius\n  };\n});\nexport const GridColumnHeaders = /*#__PURE__*/React.forwardRef(function GridColumnHeaders(props, ref) {\n  const {\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const rootProps = useGridRootProps();\n  const classes = useUtilityClasses(rootProps);\n  return /*#__PURE__*/_jsx(GridColumnHeadersRoot, _extends({\n    ref: ref,\n    className: clsx(className, classes.root),\n    ownerState: rootProps\n  }, other));\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"isDragging\", \"className\"];\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/material';\nimport { styled } from '@mui/material/styles';\nimport { gridClasses, getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    isDragging,\n    hasScrollX,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['columnHeadersInner', isDragging && 'columnHeaderDropZone', hasScrollX && 'columnHeadersInner--scrollable']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridColumnHeadersInnerRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'columnHeadersInner',\n  overridesResolver: (props, styles) => [{\n    [`&.${gridClasses.columnHeaderDropZone}`]: styles.columnHeaderDropZone\n  }, styles.columnHeadersInner]\n})(() => ({\n  display: 'flex',\n  alignItems: 'flex-start',\n  flexDirection: 'column',\n  [`&.${gridClasses.columnHeaderDropZone} .${gridClasses.columnHeaderDraggableContainer}`]: {\n    cursor: 'move'\n  },\n  [`&.${gridClasses['columnHeadersInner--scrollable']} .${gridClasses.columnHeader}:last-child`]: {\n    borderRight: 'none'\n  }\n}));\nexport const GridColumnHeadersInner = /*#__PURE__*/React.forwardRef(function GridColumnHeadersInner(props, ref) {\n  var _apiRef$current$getRo, _apiRef$current$getRo2;\n  const {\n      isDragging,\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const ownerState = _extends({}, rootProps, {\n    isDragging,\n    hasScrollX: (_apiRef$current$getRo = (_apiRef$current$getRo2 = apiRef.current.getRootDimensions()) == null ? void 0 : _apiRef$current$getRo2.hasScrollX) != null ? _apiRef$current$getRo : false\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(GridColumnHeadersInnerRoot, _extends({\n    ref: ref,\n    className: clsx(className, classes.root),\n    ownerState: ownerState\n  }, other));\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"innerRef\", \"className\"];\nimport * as React from 'react';\nimport { useGridColumnHeaders } from '../hooks/features/columnHeaders/useGridColumnHeaders';\nimport { GridScrollArea } from './GridScrollArea';\nimport { GridColumnHeaders } from './columnHeaders/GridColumnHeaders';\nimport { GridColumnHeadersInner } from './columnHeaders/GridColumnHeadersInner';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport const DataGridColumnHeaders = /*#__PURE__*/React.forwardRef(function GridColumnsHeader(props, ref) {\n  const {\n      innerRef\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const {\n    isDragging,\n    getRootProps,\n    getInnerProps,\n    getColumnHeaders,\n    getColumnGroupHeaders\n  } = useGridColumnHeaders({\n    innerRef\n  });\n  return /*#__PURE__*/_jsxs(GridColumnHeaders, _extends({\n    ref: ref\n  }, getRootProps(other), {\n    children: [/*#__PURE__*/_jsx(GridScrollArea, {\n      scrollDirection: \"left\"\n    }), /*#__PURE__*/_jsxs(GridColumnHeadersInner, _extends({\n      isDragging: isDragging\n    }, getInnerProps(), {\n      children: [getColumnGroupHeaders(), getColumnHeaders()]\n    })), /*#__PURE__*/_jsx(GridScrollArea, {\n      scrollDirection: \"right\"\n    })]\n  }));\n});","import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { chainPropTypes } from '@mui/utils';\nimport { GridBody, GridErrorHandler, GridFooterPlaceholder, GridHeaderPlaceholder, GridRoot } from '../components';\nimport { GridContextProvider } from '../context/GridContextProvider';\nimport { useDataGridComponent } from './useDataGridComponent';\nimport { useDataGridProps, MAX_PAGE_SIZE } from './useDataGridProps';\nimport { DataGridVirtualScroller } from '../components/DataGridVirtualScroller';\nimport { DataGridColumnHeaders } from '../components/DataGridColumnHeaders';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst DataGridRaw = /*#__PURE__*/React.forwardRef(function DataGrid(inProps, ref) {\n  const props = useDataGridProps(inProps);\n  const apiRef = useDataGridComponent(props);\n  return /*#__PURE__*/_jsx(GridContextProvider, {\n    apiRef: apiRef,\n    props: props,\n    children: /*#__PURE__*/_jsx(GridRoot, {\n      className: props.className,\n      style: props.style,\n      sx: props.sx,\n      ref: ref,\n      children: /*#__PURE__*/_jsxs(GridErrorHandler, {\n        children: [/*#__PURE__*/_jsx(GridHeaderPlaceholder, {}), /*#__PURE__*/_jsx(GridBody, {\n          ColumnHeadersComponent: DataGridColumnHeaders,\n          VirtualScrollerComponent: DataGridVirtualScroller\n        }), /*#__PURE__*/_jsx(GridFooterPlaceholder, {})]\n      })\n    })\n  });\n});\nexport const DataGrid = /*#__PURE__*/React.memo(DataGridRaw);\nDataGridRaw.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The label of the grid.\n   */\n  'aria-label': PropTypes.string,\n  /**\n   * The id of the element containing a label for the grid.\n   */\n  'aria-labelledby': PropTypes.string,\n  /**\n   * If `true`, the grid height is dynamic and follow the number of rows in the grid.\n   * @default false\n   */\n  autoHeight: PropTypes.bool,\n  /**\n   * If `true`, the pageSize is calculated according to the container size and the max number of rows to avoid rendering a vertical scroll bar.\n   * @default false\n   */\n  autoPageSize: PropTypes.bool,\n  /**\n   * Controls the modes of the cells.\n   */\n  cellModesModel: PropTypes.object,\n  /**\n   * If `true`, the grid get a first column with a checkbox that allows to select rows.\n   * @default false\n   */\n  checkboxSelection: PropTypes.bool,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * Number of extra columns to be rendered before/after the visible slice.\n   * @default 3\n   */\n  columnBuffer: PropTypes.number,\n  columnGroupingModel: PropTypes.arrayOf(PropTypes.object),\n  /**\n   * Set of columns of type [[GridColumns]].\n   */\n  columns: chainPropTypes(PropTypes.array.isRequired, props => {\n    // @ts-ignore because otherwise `build:api` doesn't work\n    if (props.columns && props.columns.some(column => column.resizable)) {\n      return new Error([`MUI: \\`column.resizable = true\\` is not a valid prop.`, 'Column resizing is not available in the MIT version.', '', 'You need to upgrade to DataGridPro or DataGridPremium component to unlock this feature.'].join('\\n'));\n    }\n    return null;\n  }),\n  /**\n   * Number of rows from the `columnBuffer` that can be visible before a new slice is rendered.\n   * @default 3\n   */\n  columnThreshold: PropTypes.number,\n  /**\n   * Extend native column types with your new column types.\n   */\n  columnTypes: PropTypes.object,\n  /**\n   * Set the column visibility model of the grid.\n   * If defined, the grid will ignore the `hide` property in [[GridColDef]].\n   */\n  columnVisibilityModel: PropTypes.object,\n  /**\n   * Overrideable components.\n   */\n  components: PropTypes.object,\n  /**\n   * Overrideable components props dynamically passed to the component at rendering.\n   */\n  componentsProps: PropTypes.object,\n  /**\n   * Set the density of the grid.\n   * @default \"standard\"\n   */\n  density: PropTypes.oneOf(['comfortable', 'compact', 'standard']),\n  /**\n   * If `true`, column filters are disabled.\n   * @default false\n   */\n  disableColumnFilter: PropTypes.bool,\n  /**\n   * If `true`, the column menu is disabled.\n   * @default false\n   */\n  disableColumnMenu: PropTypes.bool,\n  /**\n   * If `true`, hiding/showing columns is disabled.\n   * @default false\n   */\n  disableColumnSelector: PropTypes.bool,\n  /**\n   * If `true`, the density selector is disabled.\n   * @default false\n   */\n  disableDensitySelector: PropTypes.bool,\n  /**\n   * If `true`, rows will not be extended to fill the full width of the grid container.\n   * @default false\n   */\n  disableExtendRowFullWidth: PropTypes.bool,\n  /**\n   * If `true`, modification to a cell will not be discarded if the mode is changed from \"edit\" to \"view\" while processing props.\n   * @default false\n   */\n  disableIgnoreModificationsIfProcessingProps: PropTypes.bool,\n  /**\n   * If `true`, the selection on click on a row or cell is disabled.\n   * @default false\n   */\n  disableSelectionOnClick: PropTypes.bool,\n  /**\n   * If `true`, the virtualization is disabled.\n   * @default false\n   */\n  disableVirtualization: PropTypes.bool,\n  /**\n   * Controls whether to use the cell or row editing.\n   * @default \"cell\"\n   */\n  editMode: PropTypes.oneOf(['cell', 'row']),\n  /**\n   * Set the edit rows model of the grid.\n   */\n  editRowsModel: PropTypes.object,\n  /**\n   * An error that will turn the grid into its error state and display the error component.\n   */\n  error: PropTypes.any,\n  /**\n   * Features under development.\n   * For each feature, if the flag is not explicitly set to `true`, the feature will be fully disabled and any property / method call will not have any effect.\n   */\n  experimentalFeatures: PropTypes.shape({\n    columnGrouping: PropTypes.bool,\n    newEditingApi: PropTypes.bool,\n    preventCommitWhileValidating: PropTypes.bool,\n    warnIfFocusStateIsNotSynced: PropTypes.bool\n  }),\n  /**\n   * Filtering can be processed on the server or client-side.\n   * Set it to 'server' if you would like to handle filtering on the server-side.\n   * @default \"client\"\n   */\n  filterMode: PropTypes.oneOf(['client', 'server']),\n  /**\n   * Set the filter model of the grid.\n   */\n  filterModel: PropTypes.shape({\n    items: PropTypes.arrayOf(PropTypes.shape({\n      columnField: PropTypes.string.isRequired,\n      id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n      operatorValue: PropTypes.string,\n      value: PropTypes.any\n    })).isRequired,\n    linkOperator: PropTypes.oneOf(['and', 'or']),\n    quickFilterLogicOperator: PropTypes.oneOf(['and', 'or']),\n    quickFilterValues: PropTypes.array\n  }),\n  /**\n   * Function that applies CSS classes dynamically on cells.\n   * @param {GridCellParams} params With all properties from [[GridCellParams]].\n   * @returns {string} The CSS class to apply to the cell.\n   */\n  getCellClassName: PropTypes.func,\n  /**\n   * Function that returns the element to render in row detail.\n   * @param {GridRowParams} params With all properties from [[GridRowParams]].\n   * @returns {JSX.Element} The row detail element.\n   */\n  getDetailPanelContent: PropTypes.func,\n  /**\n   * Function that returns the estimated height for a row.\n   * Only works if dynamic row height is used.\n   * Once the row height is measured this value is discarded.\n   * @param {GridRowHeightParams} params With all properties from [[GridRowHeightParams]].\n   * @returns {number | null} The estimated row height value. If `null` or `undefined` then the default row height, based on the density, is applied.\n   */\n  getEstimatedRowHeight: PropTypes.func,\n  /**\n   * Function that applies CSS classes dynamically on rows.\n   * @param {GridRowClassNameParams} params With all properties from [[GridRowClassNameParams]].\n   * @returns {string} The CSS class to apply to the row.\n   */\n  getRowClassName: PropTypes.func,\n  /**\n   * Function that sets the row height per row.\n   * @param {GridRowHeightParams} params With all properties from [[GridRowHeightParams]].\n   * @returns {GridRowHeightReturnValue} The row height value. If `null` or `undefined` then the default row height is applied. If \"auto\" then the row height is calculated based on the content.\n   */\n  getRowHeight: PropTypes.func,\n  /**\n   * Return the id of a given [[GridRowModel]].\n   */\n  getRowId: PropTypes.func,\n  /**\n   * Function that allows to specify the spacing between rows.\n   * @param {GridRowSpacingParams} params With all properties from [[GridRowSpacingParams]].\n   * @returns {GridRowSpacing} The row spacing values.\n   */\n  getRowSpacing: PropTypes.func,\n  /**\n   * Set the height in pixel of the column headers in the grid.\n   * @default 56\n   */\n  headerHeight: PropTypes.number,\n  /**\n   * If `true`, the footer component is hidden.\n   * @default false\n   */\n  hideFooter: PropTypes.bool,\n  /**\n   * If `true`, the pagination component in the footer is hidden.\n   * @default false\n   */\n  hideFooterPagination: PropTypes.bool,\n  /**\n   * If `true`, the selected row count in the footer is hidden.\n   * @default false\n   */\n  hideFooterSelectedRowCount: PropTypes.bool,\n  /**\n   * The initial state of the DataGrid.\n   * The data in it will be set in the state on initialization but will not be controlled.\n   * If one of the data in `initialState` is also being controlled, then the control state wins.\n   */\n  initialState: PropTypes.object,\n  /**\n   * Callback fired when a cell is rendered, returns true if the cell is editable.\n   * @param {GridCellParams} params With all properties from [[GridCellParams]].\n   * @returns {boolean} A boolean indicating if the cell is editable.\n   */\n  isCellEditable: PropTypes.func,\n  /**\n   * Determines if a row can be selected.\n   * @param {GridRowParams} params With all properties from [[GridRowParams]].\n   * @returns {boolean} A boolean indicating if the cell is selectable.\n   */\n  isRowSelectable: PropTypes.func,\n  /**\n   * If `true`, the selection model will retain selected rows that do not exist.\n   * Useful when using server side pagination and row selections need to be retained\n   * when changing pages.\n   * @default false\n   */\n  keepNonExistentRowsSelected: PropTypes.bool,\n  /**\n   * If `true`, a  loading overlay is displayed.\n   */\n  loading: PropTypes.bool,\n  /**\n   * Set the locale text of the grid.\n   * You can find all the translation keys supported in [the source](https://github.com/mui/mui-x/blob/HEAD/packages/grid/x-data-grid/src/constants/localeTextConstants.ts) in the GitHub repository.\n   */\n  localeText: PropTypes.object,\n  /**\n   * Pass a custom logger in the components that implements the [[Logger]] interface.\n   * @default console\n   */\n  logger: PropTypes.shape({\n    debug: PropTypes.func.isRequired,\n    error: PropTypes.func.isRequired,\n    info: PropTypes.func.isRequired,\n    warn: PropTypes.func.isRequired\n  }),\n  /**\n   * Allows to pass the logging level or false to turn off logging.\n   * @default \"error\" (\"warn\" in dev mode)\n   */\n  logLevel: PropTypes.oneOf(['debug', 'error', 'info', 'warn', false]),\n  /**\n   * Nonce of the inline styles for [Content Security Policy](https://www.w3.org/TR/2016/REC-CSP2-20161215/#script-src-the-nonce-attribute).\n   */\n  nonce: PropTypes.string,\n  /**\n   * Callback fired when any cell is clicked.\n   * @param {GridCellParams} params With all properties from [[GridCellParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onCellClick: PropTypes.func,\n  /**\n   * Callback fired when a double click event comes from a cell element.\n   * @param {GridCellParams} params With all properties from [[GridCellParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onCellDoubleClick: PropTypes.func,\n  /**\n   * Callback fired when the cell changes are committed.\n   * @param {GridCellEditCommitParams} params With all properties from [[GridCellEditCommitParams]].\n   * @param {MuiEvent<MuiBaseEvent>} event The event that caused this prop to be called.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onCellEditCommit: PropTypes.func,\n  /**\n   * Callback fired when the cell turns to edit mode.\n   * @param {GridCellParams} params With all properties from [[GridCellParams]].\n   * @param {MuiEvent<React.KeyboardEvent | React.MouseEvent>} event The event that caused this prop to be called.\n   */\n  onCellEditStart: PropTypes.func,\n  /**\n   * Callback fired when the cell turns to view mode.\n   * @param {GridCellParams} params With all properties from [[GridCellParams]].\n   * @param {MuiEvent<MuiBaseEvent>} event The event that caused this prop to be called.\n   */\n  onCellEditStop: PropTypes.func,\n  /**\n   * Callback fired when a cell loses focus.\n   * @param {GridCellParams} params With all properties from [[GridCellParams]].\n   * @param {MuiEvent<MuiBaseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onCellFocusOut: PropTypes.func,\n  /**\n   * Callback fired when a keydown event comes from a cell element.\n   * @param {GridCellParams} params With all properties from [[GridCellParams]].\n   * @param {MuiEvent<React.KeyboardEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onCellKeyDown: PropTypes.func,\n  /**\n   * Callback fired when the `cellModesModel` prop changes.\n   * @param {GridCellModesModel} cellModesModel Object containig which cells are in \"edit\" mode.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onCellModesModelChange: PropTypes.func,\n  /**\n   * Callback fired when a click event comes from a column header element.\n   * @param {GridColumnHeaderParams} params With all properties from [[GridColumnHeaderParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onColumnHeaderClick: PropTypes.func,\n  /**\n   * Callback fired when a double click event comes from a column header element.\n   * @param {GridColumnHeaderParams} params With all properties from [[GridColumnHeaderParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onColumnHeaderDoubleClick: PropTypes.func,\n  /**\n   * Callback fired when a mouse enter event comes from a column header element.\n   * @param {GridColumnHeaderParams} params With all properties from [[GridColumnHeaderParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onColumnHeaderEnter: PropTypes.func,\n  /**\n   * Callback fired when a mouse leave event comes from a column header element.\n   * @param {GridColumnHeaderParams} params With all properties from [[GridColumnHeaderParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onColumnHeaderLeave: PropTypes.func,\n  /**\n   * Callback fired when a mouseout event comes from a column header element.\n   * @param {GridColumnHeaderParams} params With all properties from [[GridColumnHeaderParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onColumnHeaderOut: PropTypes.func,\n  /**\n   * Callback fired when a mouseover event comes from a column header element.\n   * @param {GridColumnHeaderParams} params With all properties from [[GridColumnHeaderParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onColumnHeaderOver: PropTypes.func,\n  /**\n   * Callback fired when a column is reordered.\n   * @param {GridColumnOrderChangeParams} params With all properties from [[GridColumnOrderChangeParams]].\n   * @param {MuiEvent<{}>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onColumnOrderChange: PropTypes.func,\n  /**\n   * Callback fired when a column visibility changes.\n   * Only works when no `columnVisibilityModel` is provided and if we change the visibility of a single column at a time.\n   * @param {GridColumnVisibilityChangeParams} params With all properties from [[GridColumnVisibilityChangeParams]].\n   * @param {MuiEvent<{}>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   * @deprecated Use `onColumnVisibilityModelChange` instead.\n   */\n  onColumnVisibilityChange: PropTypes.func,\n  /**\n   * Callback fired when the column visibility model changes.\n   * @param {GridColumnVisibilityModel} model The new model.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onColumnVisibilityModelChange: PropTypes.func,\n  /**\n   * Callback fired when the edit cell value changes.\n   * @param {GridEditCellPropsParams} params With all properties from [[GridEditCellPropsParams]].\n   * @param {MuiEvent<React.SyntheticEvent>} event The event that caused this prop to be called.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   * @deprecated use `preProcessEditCellProps` from the [`GridColDef`](/x/api/data-grid/grid-col-def/)\n   */\n  onEditCellPropsChange: PropTypes.func,\n  /**\n   * Callback fired when the `editRowsModel` changes.\n   * @param {GridEditRowsModel} editRowsModel With all properties from [[GridEditRowsModel]].\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onEditRowsModelChange: PropTypes.func,\n  /**\n   * Callback fired when an exception is thrown in the grid.\n   * @param {any} args The arguments passed to the `showError` call.\n   * @param {MuiEvent<{}>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onError: PropTypes.func,\n  /**\n   * Callback fired when the Filter model changes before the filters are applied.\n   * @param {GridFilterModel} model With all properties from [[GridFilterModel]].\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onFilterModelChange: PropTypes.func,\n  /**\n   * Callback fired when the menu is closed.\n   * @param {GridMenuParams} params With all properties from [[GridMenuParams]].\n   * @param {MuiEvent<{}>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onMenuClose: PropTypes.func,\n  /**\n   * Callback fired when the menu is opened.\n   * @param {GridMenuParams} params With all properties from [[GridMenuParams]].\n   * @param {MuiEvent<{}>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onMenuOpen: PropTypes.func,\n  /**\n   * Callback fired when the current page has changed.\n   * @param {number} page Index of the page displayed on the Grid.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onPageChange: PropTypes.func,\n  /**\n   * Callback fired when the page size has changed.\n   * @param {number} pageSize Size of the page displayed on the Grid.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onPageSizeChange: PropTypes.func,\n  /**\n   * Callback fired when the preferences panel is closed.\n   * @param {GridPreferencePanelParams} params With all properties from [[GridPreferencePanelParams]].\n   * @param {MuiEvent<{}>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onPreferencePanelClose: PropTypes.func,\n  /**\n   * Callback fired when the preferences panel is opened.\n   * @param {GridPreferencePanelParams} params With all properties from [[GridPreferencePanelParams]].\n   * @param {MuiEvent<{}>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onPreferencePanelOpen: PropTypes.func,\n  /**\n   * Callback called when `processRowUpdate` throws an error or rejects.\n   * @param {any} error The error thrown.\n   */\n  onProcessRowUpdateError: PropTypes.func,\n  /**\n   * Callback fired when the grid is resized.\n   * @param {ElementSize} containerSize With all properties from [[ElementSize]].\n   * @param {MuiEvent<{}>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onResize: PropTypes.func,\n  /**\n   * Callback fired when a row is clicked.\n   * Not called if the target clicked is an interactive element added by the built-in columns.\n   * @param {GridRowParams} params With all properties from [[GridRowParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onRowClick: PropTypes.func,\n  /**\n   * Callback fired when a double click event comes from a row container element.\n   * @param {GridRowParams} params With all properties from [[RowParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onRowDoubleClick: PropTypes.func,\n  /**\n   * Callback fired when the row changes are committed.\n   * @param {GridRowId} id The row id.\n   * @param {MuiEvent<MuiBaseEvent>} event The event that caused this prop to be called.\n   */\n  onRowEditCommit: PropTypes.func,\n  /**\n   * Callback fired when the row turns to edit mode.\n   * @param {GridRowParams} params With all properties from [[GridRowParams]].\n   * @param {MuiEvent<React.KeyboardEvent | React.MouseEvent>} event The event that caused this prop to be called.\n   */\n  onRowEditStart: PropTypes.func,\n  /**\n   * Callback fired when the row turns to view mode.\n   * @param {GridRowParams} params With all properties from [[GridRowParams]].\n   * @param {MuiEvent<MuiBaseEvent>} event The event that caused this prop to be called.\n   */\n  onRowEditStop: PropTypes.func,\n  /**\n   * Callback fired when the `rowModesModel` prop changes.\n   * @param {GridRowModesModel} rowModesModel Object containig which rows are in \"edit\" mode.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onRowModesModelChange: PropTypes.func,\n  /**\n   * Callback fired when the selection state of one or multiple rows changes.\n   * @param {GridSelectionModel} selectionModel With all the row ids [[GridSelectionModel]].\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onSelectionModelChange: PropTypes.func,\n  /**\n   * Callback fired when the sort model changes before a column is sorted.\n   * @param {GridSortModel} model With all properties from [[GridSortModel]].\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onSortModelChange: PropTypes.func,\n  /**\n   * Callback fired when the state of the grid is updated.\n   * @param {GridState} state The new state.\n   * @param {MuiEvent<{}>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   * @ignore - do not document.\n   */\n  onStateChange: PropTypes.func,\n  /**\n   * The zero-based index of the current page.\n   * @default 0\n   */\n  page: PropTypes.number,\n  /**\n   * Set the number of rows in one page.\n   * If some of the rows have children (for instance in the tree data), this number represents the amount of top level rows wanted on each page.\n   * @default 100\n   */\n  pageSize: chainPropTypes(PropTypes.number, props => {\n    if (props.pageSize && props.pageSize > MAX_PAGE_SIZE) {\n      return new Error([`MUI: \\`<DataGrid pageSize={${props.pageSize}} />\\` is not a valid prop.`, `Only page size below ${MAX_PAGE_SIZE} is available in the MIT version.`, '', 'You need to upgrade to DataGridPro or DataGridPremium component to unlock this feature.'].join('\\n'));\n    }\n    return null;\n  }),\n  pagination: props => {\n    if (props.pagination === false) {\n      return new Error(['MUI: `<DataGrid pagination={false} />` is not a valid prop.', 'Infinite scrolling is not available in the MIT version.', '', 'You need to upgrade to DataGridPro or DataGridPremium component to disable the pagination.'].join('\\n'));\n    }\n    return null;\n  },\n  /**\n   * Pagination can be processed on the server or client-side.\n   * Set it to 'client' if you would like to handle the pagination on the client-side.\n   * Set it to 'server' if you would like to handle the pagination on the server-side.\n   * @default \"client\"\n   */\n  paginationMode: PropTypes.oneOf(['client', 'server']),\n  /**\n   * Callback called before updating a row with new values in the row and cell editing.\n   * Only applied if `props.experimentalFeatures.newEditingApi: true`.\n   * @template R\n   * @param {R} newRow Row object with the new values.\n   * @param {R} oldRow Row object with the old values.\n   * @returns {Promise<R> | R} The final values to update the row.\n   */\n  processRowUpdate: PropTypes.func,\n  /**\n   * Number of extra rows to be rendered before/after the visible slice.\n   * @default 3\n   */\n  rowBuffer: PropTypes.number,\n  /**\n   * Set the total number of rows, if it is different from the length of the value `rows` prop.\n   * If some rows have children (for instance in the tree data), this number represents the amount of top level rows.\n   */\n  rowCount: PropTypes.number,\n  /**\n   * Set the height in pixel of a row in the grid.\n   * @default 52\n   */\n  rowHeight: PropTypes.number,\n  /**\n   * Controls the modes of the rows.\n   */\n  rowModesModel: PropTypes.object,\n  /**\n   * Set of rows of type [[GridRowsProp]].\n   */\n  rows: PropTypes.arrayOf(PropTypes.object).isRequired,\n  /**\n   * Sets the type of space between rows added by `getRowSpacing`.\n   * @default \"margin\"\n   */\n  rowSpacingType: PropTypes.oneOf(['border', 'margin']),\n  /**\n   * Select the pageSize dynamically using the component UI.\n   * @default [25, 50, 100]\n   */\n  rowsPerPageOptions: PropTypes.arrayOf(PropTypes.number),\n  /**\n   * Number of rows from the `rowBuffer` that can be visible before a new slice is rendered.\n   * @default 3\n   */\n  rowThreshold: PropTypes.number,\n  /**\n   * Override the height/width of the grid inner scrollbar.\n   */\n  scrollbarSize: PropTypes.number,\n  /**\n   * Set the selection model of the grid.\n   */\n  selectionModel: chainPropTypes(PropTypes.oneOfType([PropTypes.number, PropTypes.string, PropTypes.array]), props => {\n    if (!props.checkboxSelection && Array.isArray(props.selectionModel) && props.selectionModel.length > 1) {\n      return new Error([`MUI: \\`<DataGrid selectionModel={${JSON.stringify(props.selectionModel)}} />\\` is not a valid prop.`, 'selectionModel can only be of 1 item in DataGrid.', '', 'You need to upgrade to DataGridPro or DataGridPremium component to unlock multiple selection.'].join('\\n'));\n    }\n    return null;\n  }),\n  /**\n   * If `true`, the right border of the cells are displayed.\n   * @default false\n   */\n  showCellRightBorder: PropTypes.bool,\n  /**\n   * If `true`, the right border of the column headers are displayed.\n   * @default false\n   */\n  showColumnRightBorder: PropTypes.bool,\n  /**\n   * Sorting can be processed on the server or client-side.\n   * Set it to 'client' if you would like to handle sorting on the client-side.\n   * Set it to 'server' if you would like to handle sorting on the server-side.\n   * @default \"client\"\n   */\n  sortingMode: PropTypes.oneOf(['client', 'server']),\n  /**\n   * The order of the sorting sequence.\n   * @default ['asc', 'desc', null]\n   */\n  sortingOrder: PropTypes.arrayOf(PropTypes.oneOf(['asc', 'desc'])),\n  /**\n   * Set the sort model of the grid.\n   */\n  sortModel: PropTypes.arrayOf(PropTypes.shape({\n    field: PropTypes.string.isRequired,\n    sort: PropTypes.oneOf(['asc', 'desc'])\n  })),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n};","export default function chainPropTypes(propType1, propType2) {\n  if (process.env.NODE_ENV === 'production') {\n    return () => null;\n  }\n  return function validate() {\n    return propType1(...arguments) || propType2(...arguments);\n  };\n}","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = exports.default = (0, _createSvgIcon.default)(/*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M19.3 16.9c.4-.7.7-1.5.7-2.4 0-2.5-2-4.5-4.5-4.5S11 12 11 14.5s2 4.5 4.5 4.5c.9 0 1.7-.3 2.4-.7l3.2 3.2 1.4-1.4zm-3.8.1c-1.4 0-2.5-1.1-2.5-2.5s1.1-2.5 2.5-2.5 2.5 1.1 2.5 2.5-1.1 2.5-2.5 2.5M12 20v2C6.48 22 2 17.52 2 12S6.48 2 12 2c4.84 0 8.87 3.44 9.8 8h-2.07c-.64-2.46-2.4-4.47-4.73-5.41V5c0 1.1-.9 2-2 2h-2v2c0 .55-.45 1-1 1H8v2h2v3H9l-4.79-4.79C4.08 10.79 4 11.38 4 12c0 4.41 3.59 8 8 8\"\n}), 'TravelExplore');","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/material';\nimport { alpha, styled } from '@mui/material/styles';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['overlay']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridOverlayRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'Overlay',\n  overridesResolver: (props, styles) => styles.overlay\n})(_ref => {\n  let {\n    theme\n  } = _ref;\n  return {\n    position: 'absolute',\n    top: 0,\n    zIndex: 4,\n    // should be above pinned columns, pinned rows and detail panel\n    width: '100%',\n    height: '100%',\n    pointerEvents: 'none',\n    display: 'flex',\n    alignSelf: 'center',\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: alpha(theme.palette.background.default, theme.palette.action.disabledOpacity)\n  };\n});\nconst GridOverlay = /*#__PURE__*/React.forwardRef(function GridOverlay(props, ref) {\n  const {\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const rootProps = useGridRootProps();\n  const classes = useUtilityClasses(rootProps);\n  return /*#__PURE__*/_jsx(GridOverlayRoot, _extends({\n    ref: ref,\n    className: clsx(classes.root, className),\n    ownerState: rootProps\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridOverlay.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport { GridOverlay };","import React from 'react'\r\nimport { GridOverlay } from '@mui/x-data-grid'\r\nimport Box from '@mui/material/Box'\r\nimport { styled } from '@mui/material/styles'\r\n\r\nconst StyledGridOverlay = styled(GridOverlay)(({ theme }) => ({\r\n  flexDirection: 'column',\r\n  '& .ant-empty-img-1': {\r\n    fill: theme.palette.mode === 'light' ? '#aeb8c2' : '#262626',\r\n  },\r\n  '& .ant-empty-img-2': {\r\n    fill: theme.palette.mode === 'light' ? '#f5f5f7' : '#595959',\r\n  },\r\n  '& .ant-empty-img-3': {\r\n    fill: theme.palette.mode === 'light' ? '#dce0e6' : '#434343',\r\n  },\r\n  '& .ant-empty-img-4': {\r\n    fill: theme.palette.mode === 'light' ? '#fff' : '#1c1c1c',\r\n  },\r\n  '& .ant-empty-img-5': {\r\n    fillOpacity: theme.palette.mode === 'light' ? '0.8' : '0.08',\r\n    fill: theme.palette.mode === 'light' ? '#f5f5f5' : '#fff',\r\n  },\r\n}))\r\n\r\nfunction DefaultDataGridTable() {\r\n\r\n  return (\r\n    <StyledGridOverlay>\r\n      <svg\r\n        width=\"120\"\r\n        height=\"100\"\r\n        viewBox=\"0 0 184 152\"\r\n        aria-hidden\r\n        focusable=\"false\"\r\n      >\r\n        <g fill=\"none\" fillRule=\"evenodd\">\r\n          <g transform=\"translate(24 31.67)\">\r\n            <ellipse\r\n              className=\"ant-empty-img-5\"\r\n              cx=\"67.797\"\r\n              cy=\"106.89\"\r\n              rx=\"67.797\"\r\n              ry=\"12.668\"\r\n            />\r\n            <path\r\n              className=\"ant-empty-img-1\"\r\n              d=\"M122.034 69.674L98.109 40.229c-1.148-1.386-2.826-2.225-4.593-2.225h-51.44c-1.766 0-3.444.839-4.592 2.225L13.56 69.674v15.383h108.475V69.674z\"\r\n            />\r\n            <path\r\n              className=\"ant-empty-img-2\"\r\n              d=\"M33.83 0h67.933a4 4 0 0 1 4 4v93.344a4 4 0 0 1-4 4H33.83a4 4 0 0 1-4-4V4a4 4 0 0 1 4-4z\"\r\n            />\r\n            <path\r\n              className=\"ant-empty-img-3\"\r\n              d=\"M42.678 9.953h50.237a2 2 0 0 1 2 2V36.91a2 2 0 0 1-2 2H42.678a2 2 0 0 1-2-2V11.953a2 2 0 0 1 2-2zM42.94 49.767h49.713a2.262 2.262 0 1 1 0 4.524H42.94a2.262 2.262 0 0 1 0-4.524zM42.94 61.53h49.713a2.262 2.262 0 1 1 0 4.525H42.94a2.262 2.262 0 0 1 0-4.525zM121.813 105.032c-.775 3.071-3.497 5.36-6.735 5.36H20.515c-3.238 0-5.96-2.29-6.734-5.36a7.309 7.309 0 0 1-.222-1.79V69.675h26.318c2.907 0 5.25 2.448 5.25 5.42v.04c0 2.971 2.37 5.37 5.277 5.37h34.785c2.907 0 5.277-2.421 5.277-5.393V75.1c0-2.972 2.343-5.426 5.25-5.426h26.318v33.569c0 .617-.077 1.216-.221 1.789z\"\r\n            />\r\n          </g>\r\n          <path\r\n            className=\"ant-empty-img-3\"\r\n            d=\"M149.121 33.292l-6.83 2.65a1 1 0 0 1-1.317-1.23l1.937-6.207c-2.589-2.944-4.109-6.534-4.109-10.408C138.802 8.102 148.92 0 161.402 0 173.881 0 184 8.102 184 18.097c0 9.995-10.118 18.097-22.599 18.097-4.528 0-8.744-1.066-12.28-2.902z\"\r\n          />\r\n          <g className=\"ant-empty-img-4\" transform=\"translate(149.65 15.383)\">\r\n            <ellipse cx=\"20.654\" cy=\"3.167\" rx=\"2.849\" ry=\"2.815\" />\r\n            <path d=\"M5.698 5.63H0L2.898.704zM9.259.704h4.985V5.63H9.259z\" />\r\n          </g>\r\n        </g>\r\n      </svg>\r\n      <Box sx={{ mt: 1 }}>No Data</Box>\r\n    </StyledGridOverlay >\r\n  )\r\n}\r\n\r\nexport default DefaultDataGridTable","'use client';\n\nimport systemUseThemeProps from '@mui/system/useThemeProps';\nimport defaultTheme from './defaultTheme';\nimport THEME_ID from './identifier';\nexport default function useThemeProps(_ref) {\n  let {\n    props,\n    name\n  } = _ref;\n  return systemUseThemeProps({\n    props,\n    name,\n    defaultTheme,\n    themeId: THEME_ID\n  });\n}"],"sourceRoot":""}