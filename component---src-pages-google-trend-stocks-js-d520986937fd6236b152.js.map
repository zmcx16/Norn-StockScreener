{"version":3,"sources":["webpack:///./node_modules/recharts/es6/chart/LineChart.js","webpack:///./src/components/google-trend-stocks/googleTrendStocksTable.module.scss","webpack:///./src/components/google-trend-stocks/stockAndTrendDataChart.js","webpack:///./src/components/google-trend-stocks/googleTrendStocksTable.js","webpack:///./src/pages/google-trend-stocks.js"],"names":["LineChart","chartName","GraphicalChild","axisComponents","axisType","AxisComp","formatAxisMap","module","exports","StockAndTrendDataChart","_ref","title","data","React","createElement","style","width","window","innerWidth","height","innerHeight","maxWidth","maxHeight","ResponsiveContainer","ComposedChart","syncId","margin","top","right","left","bottom","CartesianGrid","strokeDasharray","XAxis","dataKey","tickFormatter","tickItem","moment","format","YAxis","yAxisId","domain","orientation","Tooltip","Legend","wrapperStyle","Line","connectNulls","type","name","stroke","dot","Bar","fill","GoogleTrendStocksTable","loadingAnimeRef","hideColState","setHideColState","useState","modalWindowRef","useRef","popModalWindow","popPureModal","tableColList","hide","text","trendDataField","field","headerName","valueKey","date","indexOf","renderCell","params","Link","href","encodeURI","row","target","rel","toFixed","getData","async","url","fetchObj","resp_data","get","response","ok","fetchStockData","useFetch","cachePolicy","fetchGoogleTrendData","renderGoogleTrendTable","config","Promise","all","then","allResponses","length","output","reduce","result","value","index","symbol","stockInfo","getRatio","val","avg","o","id","keyword","week3","week3R","month3","month3R","month7","month7R","month14","month14R","quarter7","quarter7R","quarter14","quarter14R","quarter21","quarter21R","year14","year14R","year21","year21R","avgR","close","Number","MAX_VALUE","shortFloat","PE","PB","dividend","high52","low52","perfWeek","perfMonth","perfQuarter","perfHalfY","perfYear","perfYTD","a","b","filter_symbols","includes","push","setRowData","current","setLoading","catch","rowData","searchVal","setSearchVal","useEffect","Fragment","className","googleTrendStocksTableStyle","container","table","DataGrid","rows","columns","SymbolNameField","PureFieldWithValueCheck","ShortFloatLinkWithShowChartField","PercentField","ColorPercentField","IconButton","size","aria-haspopup","onClick","allDateByKey","convertGoogleTrendData2DictByDate","key","forEach","Date","parse","allDataArray","targetKeys","Object","keys","sort","parseInt","BarChartSharpIcon","color","fontSize","components","NoRowsOverlay","DefaultDataGridTable","Toolbar","SearchGridToolbar","clickCallback","info","placeholder","tooltip","GoogleTrendsTooltip","link","GoogleTrendsUrl","disableSelectionOnClick","onColumnVisibilityChange","param","tempHideColState","ModalWindow","GoogleTrendStocksPage","getLoading","StylesProvider","injectFirst","SEO","Layout","LoadingAnime"],"mappings":"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","file":"component---src-pages-google-trend-stocks-js-d520986937fd6236b152.js","sourcesContent":["/**\n * @fileOverview Line Chart\n */\nimport { generateCategoricalChart } from './generateCategoricalChart';\nimport { Line } from '../cartesian/Line';\nimport { XAxis } from '../cartesian/XAxis';\nimport { YAxis } from '../cartesian/YAxis';\nimport { formatAxisMap } from '../util/CartesianUtils';\nexport var LineChart = generateCategoricalChart({\n  chartName: 'LineChart',\n  GraphicalChild: Line,\n  axisComponents: [{\n    axisType: 'xAxis',\n    AxisComp: XAxis\n  }, {\n    axisType: 'yAxis',\n    AxisComp: YAxis\n  }],\n  formatAxisMap: formatAxisMap\n});","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"googleTrendStocksTable-module--container--1dvXD\",\"showColumn\":\"googleTrendStocksTable-module--showColumn--3TZgQ\",\"table\":\"googleTrendStocksTable-module--table--2iVvI\"};","import React from 'react'\r\nimport {\r\n  LineChart,\r\n  ComposedChart,\r\n  Line,\r\n  Bar,\r\n  XAxis,\r\n  YAxis,\r\n  CartesianGrid,\r\n  Tooltip,\r\n  Legend,\r\n  ResponsiveContainer\r\n} from 'recharts'\r\n\r\nimport moment from 'moment'\r\n\r\nconst StockAndTrendDataChart = ({ title, data }) => {\r\n  return (\r\n    <div style={{ width: (window.innerWidth - 80) + 'px', height: (window.innerHeight - 80) + 'px', maxWidth: '1200px', maxHeight: '800px' }}>\r\n      <h3>{title}</h3>\r\n      <ResponsiveContainer width=\"100%\" height=\"47%\">\r\n        <ComposedChart\r\n          data={data}\r\n          syncId=\"StockAndTrendDataChart\"\r\n          margin={{\r\n            top: 5,\r\n            right: 30,\r\n            left: 20,\r\n            bottom: 5,\r\n          }}\r\n        >\r\n          <CartesianGrid strokeDasharray=\"3 3\" />\r\n          <XAxis dataKey=\"Date\" tickFormatter={(tickItem) => {\r\n            return moment(tickItem).format('MM/DD/YYYY HH:mm:ss')\r\n          }} />\r\n          <YAxis yAxisId=\"left\" domain={['auto', 'auto']}/>\r\n          <YAxis yAxisId=\"right\" orientation=\"right\" domain={['auto', 'auto']}/>\r\n          <Tooltip />\r\n          <Legend wrapperStyle={{ bottom: -5 }}/>\r\n          <Line connectNulls yAxisId=\"left\" type=\"monotone\" name={\"Close Price\"} dataKey=\"close\" stroke=\"#8884d8\" dot={false} />\r\n          <Bar yAxisId=\"right\" name={\"Volume\"} dataKey=\"volume\" fill=\"#82ca9d\" />\r\n        </ComposedChart>\r\n      </ResponsiveContainer>     \r\n      <ResponsiveContainer width=\"100%\" height=\"47%\">\r\n        <LineChart\r\n          data={data}\r\n          syncId=\"StockAndTrendDataChart\"\r\n          margin={{\r\n            top: 5,\r\n            right: 30,\r\n            left: 20,\r\n            bottom: 5,\r\n          }}\r\n        >\r\n          <CartesianGrid strokeDasharray=\"3 3\" />\r\n          <XAxis dataKey=\"Date\" tickFormatter={(tickItem) => {\r\n            return moment(tickItem).format('MM/DD/YYYY HH:mm:ss')\r\n          }} />\r\n          <YAxis yAxisId=\"left\" domain={['auto', 'auto']}/>\r\n          <YAxis yAxisId=\"right\" orientation=\"right\" domain={['auto', 'auto']}/>\r\n          <Tooltip />\r\n          <Legend />\r\n          <Line yAxisId=\"right\" connectNulls type=\"monotone\" name={\"Week\"} dataKey=\"week\" stroke=\"#0088FE\" dot={false} />\r\n          <Line yAxisId=\"right\" connectNulls type=\"monotone\" name={\"Month\"} dataKey=\"month\" stroke=\"#00C49F\" dot={false} />\r\n          <Line yAxisId=\"left\" connectNulls type=\"monotone\" name={\"Quarter\"} dataKey=\"quarter\" stroke=\"#AA336A\" dot={false} />\r\n          <Line yAxisId=\"left\" connectNulls type=\"monotone\" name={\"Year\"} dataKey=\"year\" stroke=\"#FF8042\" dot={false} />\r\n        </LineChart>\r\n      </ResponsiveContainer>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nexport default StockAndTrendDataChart\r\n","import React, { useState, useRef, useEffect } from 'react'\r\nimport { DataGrid } from '@mui/x-data-grid'\r\nimport IconButton from '@mui/material/IconButton'\r\nimport BarChartSharpIcon from '@mui/icons-material/BarChartSharp'\r\nimport Link from '@mui/material/Link'\r\nimport useFetch from 'use-http'\r\nimport moment from 'moment'\r\n\r\nimport ModalWindow from '../modalWindow'\r\nimport DefaultDataGridTable from '../defaultDataGridTable'\r\nimport StockAndTrendDataChart from './stockAndTrendDataChart'\r\nimport { SymbolNameField, PureFieldWithValueCheck, PercentField, ColorPercentField, ShortFloatLinkWithShowChartField } from '../../common/dataGridUtil'\r\nimport SearchGridToolbar from '../searchGridToolbar'\r\nimport { GoogleTrendsUrl, GoogleTrendsTooltip } from '../../common/common'\r\n\r\nimport googleTrendStocksTableStyle from './googleTrendStocksTable.module.scss'\r\nimport '../muiTablePagination.css'\r\n\r\nconst GoogleTrendStocksTable = ({ loadingAnimeRef }) => {\r\n\r\n  const [hideColState, setHideColState] = useState({})\r\n\r\n  const modalWindowRef = useRef({\r\n    popModalWindow: null,\r\n    popPureModal: null,\r\n  })\r\n\r\n  const tableColList = {\r\n    Week3: { hide: true, text: 'W3-Max' },\r\n    Week3R: { hide: false, text: 'W3-Ratio' },\r\n    Month3: { hide: true, text: 'M3-Max' },\r\n    Month3R: { hide: false, text: 'M3-Ratio' },\r\n    Month7: { hide: true, text: 'M7-Max' },\r\n    Month7R: { hide: false, text: 'M7-Ratio' },\r\n    Month14: { hide: true, text: 'M14-Max' },\r\n    Month14R: { hide: false, text: 'M14-Ratio' },\r\n    Quart7: { hide: true, text: 'Q7-Max' },\r\n    Quart7R: { hide: false, text: 'Q7-Ratio' },\r\n    Quart14: { hide: true, text: 'Q14-Max' },\r\n    Quart14R: { hide: false, text: 'Q14-Ratio' },\r\n    Quart21: { hide: true, text: 'Q21-Max' },\r\n    Quart21R: { hide: false, text: 'Q21-Ratio' },\r\n    Year14: { hide: true, text: 'Y14-Max' },\r\n    Year14R: { hide: false, text: 'Y14-Ratio' },\r\n    Year21: { hide: true, text: 'Y21-Max' },\r\n    Year21R: { hide: false, text: 'Y21-Ratio' },\r\n    Avg: { hide: false, text: 'Avg-Max' },\r\n    AvgR: { hide: false, text: 'Avg-Ratio' },\r\n    Close: { hide: false, text: 'Price' },\r\n    ShortFloat: { hide: false, text: 'Short Float' },\r\n    PE: { hide: false, text: 'P/E' },\r\n    PB: { hide: false, text: 'P/B' },\r\n    Dividend: { hide: false, text: 'Dividend %' },\r\n    High52: { hide: true, text: '52W High' },\r\n    Low52: { hide: true, text: '52W Low' },\r\n    PerfWeek: { hide: true, text: 'Perf Week' },\r\n    PerfMonth: { hide: true, text: 'Perf Month' },\r\n    PerfQuarter: { hide: true, text: 'Perf Quarter' },\r\n    PerfHalfY: { hide: true, text: 'Perf Half Y' },\r\n    PerfYear: { hide: true, text: 'Perf Year' },\r\n    PerfYTD: { hide: true, text: 'Perf YTD' },\r\n    Chart: { hide: false, text: 'Chart' },\r\n  }\r\n\r\n  const trendDataField = (field, headerName, width, valueKey, hide) => {\r\n    let date = \"\"\r\n    if (valueKey.indexOf(\"week\")!==-1) {\r\n      date = \"now 7-d\"\r\n    } else if (valueKey.indexOf(\"month\") !== -1) {\r\n      date = \"today 1-m\"\r\n    } else if (valueKey.indexOf(\"quarter\") !== -1) {\r\n      date = \"today 3-m\"\r\n    } else if (valueKey.indexOf(\"year\") !== -1) {\r\n      date = \"today 12-m\"\r\n    }\r\n\r\n    return {\r\n      field: field,\r\n      headerName: headerName,\r\n      width: width,\r\n      type: 'number',\r\n      renderCell: (params) => (\r\n        <Link href={encodeURI(\"https://trends.google.com.tw/trends/explore?date=\" + date + \"&q=\" + params.row['keyword'])} target=\"_blank\" rel=\"noreferrer noopener\">\r\n          <span>{params.row[valueKey].toFixed(2)}</span>\r\n        </Link>\r\n      ),\r\n      hide: hide\r\n    }\r\n  }\r\n\r\n  const getData = async (url, fetchObj) => {\r\n    const resp_data = await fetchObj.get(url)\r\n    if (fetchObj.response.ok && resp_data) {\r\n      return resp_data\r\n    }\r\n    else {\r\n      return null\r\n    }\r\n  }\r\n\r\n  const genTableColTemplate = () => {\r\n    return [\r\n      SymbolNameField('Symbol', 130, 'symbol' in hideColState ? hideColState['symbol'] : false),\r\n      trendDataField(\"week3\", tableColList.Week3.text, 140, \"week3\", \"week3\" in hideColState ? hideColState[\"week3\"] : tableColList['Week3'].hide),\r\n      trendDataField(\"week3R\", tableColList.Week3R.text, 140, \"week3R\", \"week3R\" in hideColState ? hideColState[\"week3R\"] : tableColList['Week3R'].hide),\r\n      trendDataField(\"month3\", tableColList.Month3.text, 140, \"month3\", \"month3\" in hideColState ? hideColState[\"month3\"] : tableColList['Month3'].hide),\r\n      trendDataField(\"month3R\", tableColList.Month3R.text, 140, \"month3R\", \"month3R\" in hideColState ? hideColState[\"month3R\"] : tableColList['Month3R'].hide),\r\n      trendDataField(\"month7\", tableColList.Month7.text, 140, \"month7\", \"month7\" in hideColState ? hideColState[\"month7\"] : tableColList['Month7'].hide),\r\n      trendDataField(\"month7R\", tableColList.Month7R.text, 140, \"month7R\", \"month7R\" in hideColState ? hideColState[\"month7R\"] : tableColList['Month7R'].hide),\r\n      trendDataField(\"month14\", tableColList.Month14.text, 140, \"month14\", \"month14\" in hideColState ? hideColState[\"month14\"] : tableColList['Month14'].hide),\r\n      trendDataField(\"month14R\", tableColList.Month14R.text, 150, \"month14R\", \"month14R\" in hideColState ? hideColState[\"month14R\"] : tableColList['Month14R'].hide),\r\n      trendDataField(\"quarter7\", tableColList.Quart7.text, 140, \"quarter7\", \"quarter7\" in hideColState ? hideColState[\"quarter7\"] : tableColList['Quart7'].hide),\r\n      trendDataField(\"quarter7R\", tableColList.Quart7R.text, 140, \"quarter7R\", \"quarter7R\" in hideColState ? hideColState[\"quarter7R\"] : tableColList['Quart7R'].hide),\r\n      trendDataField(\"quarter14\", tableColList.Quart14.text, 140, \"quarter14\", \"quarter14\" in hideColState ? hideColState[\"quarter14\"] : tableColList['Quart14'].hide),\r\n      trendDataField(\"quarter14R\", tableColList.Quart14R.text, 150, \"quarter14R\", \"quarter14R\" in hideColState ? hideColState[\"quarter14R\"] : tableColList['Quart14R'].hide),\r\n      trendDataField(\"quarter21\", tableColList.Quart21.text, 140, \"quarter21\", \"quarter21\" in hideColState ? hideColState[\"quarter21\"] : tableColList['Quart21'].hide),\r\n      trendDataField(\"quarter21R\", tableColList.Quart21R.text, 150, \"quarter21R\", \"quarter21R\" in hideColState ? hideColState[\"quarter21R\"] : tableColList['Quart21R'].hide),\r\n      trendDataField(\"year14\", tableColList.Year14.text, 140, \"year14\", \"year14\" in hideColState ? hideColState[\"year14\"] : tableColList['Year14'].hide),\r\n      trendDataField(\"year14R\", tableColList.Year14R.text, 140, \"year14R\", \"year14R\" in hideColState ? hideColState[\"year14R\"] : tableColList['Year14R'].hide),\r\n      trendDataField(\"year21\", tableColList.Year21.text, 140, \"year21\", \"year21\" in hideColState ? hideColState[\"year21\"] : tableColList['Year21'].hide),\r\n      trendDataField(\"year21R\", tableColList.Year21R.text, 140, \"year21R\", \"year21R\" in hideColState ? hideColState[\"year21R\"] : tableColList['Year21R'].hide),\r\n      { \r\n        field: 'avg', \r\n        headerName: tableColList.Avg.text, \r\n        width: 140, \r\n        type: 'number',\r\n        renderCell: (params) => (\r\n          <span>{params.row['avg'].toFixed(2)}</span>\r\n        ),\r\n        hide: 'avg' in hideColState ? hideColState['avg'] : tableColList['Avg'].hide\r\n      },\r\n      {\r\n        field: 'avgR',\r\n        headerName: tableColList.AvgR.text,\r\n        width: 140,\r\n        type: 'number',\r\n        renderCell: (params) => (\r\n          <span>{params.row['avgR'].toFixed(2)}</span>\r\n        ),\r\n        hide: 'avgR' in hideColState ? hideColState['avgR'] : tableColList['AvgR'].hide\r\n      },\r\n      PureFieldWithValueCheck(\"close\", tableColList.Close.text, 110, 2, \"close\" in hideColState ? hideColState[\"close\"] : tableColList['Close'].hide),\r\n      ShortFloatLinkWithShowChartField(\"shortFloat\", tableColList.ShortFloat.text, 150, \"shortFloat\" in hideColState ? hideColState[\"shortFloat\"] : tableColList['ShortFloat'].hide),\r\n      PureFieldWithValueCheck(\"PE\", tableColList.PE.text, 110, 2, \"PE\" in hideColState ? hideColState[\"PE\"] : tableColList['PE'].hide),\r\n      PureFieldWithValueCheck(\"PB\", tableColList.PB.text, 110, 2, \"PB\" in hideColState ? hideColState[\"PB\"] : tableColList['PB'].hide),\r\n      PercentField(\"dividend\", tableColList.Dividend.text, 150, \"dividend\" in hideColState ? hideColState[\"dividend\"] : tableColList['Dividend'].hide),\r\n      PercentField(\"high52\", tableColList.High52.text, 150, \"high52\" in hideColState ? hideColState[\"high52\"] : tableColList['High52'].hide),\r\n      PercentField(\"low52\", tableColList.Low52.text, 150, \"low52\" in hideColState ? hideColState[\"low52\"] : tableColList['Low52'].hide),\r\n      ColorPercentField(\"perfWeek\", tableColList.PerfWeek.text, 150, 2, \"perfWeek\" in hideColState ? hideColState[\"perfWeek\"] : tableColList['PerfWeek'].hide, 500),\r\n      ColorPercentField(\"perfMonth\", tableColList.PerfMonth.text, 150, 2, \"perfMonth\" in hideColState ? hideColState[\"perfMonth\"] : tableColList['PerfMonth'].hide, 500),\r\n      ColorPercentField(\"perfQuarter\", tableColList.PerfQuarter.text, 150, 2, \"perfQuarter\" in hideColState ? hideColState[\"perfQuarter\"] : tableColList['PerfQuarter'].hide, 500),\r\n      ColorPercentField(\"perfHalfY\", tableColList.PerfHalfY.text, 150, 2, \"perfHalfY\" in hideColState ? hideColState[\"perfHalfY\"] : tableColList['PerfHalfY'].hide, 500),\r\n      ColorPercentField(\"perfYear\", tableColList.PerfYear.text, 150, 2, \"perfYear\" in hideColState ? hideColState[\"perfYear\"] : tableColList['PerfYear'].hide, 500),\r\n      ColorPercentField(\"perfYTD\", tableColList.PerfYTD.text, 150, 2, \"perfYTD\" in hideColState ? hideColState[\"perfYTD\"] : tableColList['PerfYTD'].hide, 500),\r\n      {\r\n        field: 'Chart',\r\n        headerName: tableColList.Chart.text,\r\n        width: 130,\r\n        renderCell: (params) => (\r\n          <IconButton\r\n            size=\"small\"\r\n            aria-haspopup=\"true\"\r\n            onClick={() => {\r\n              Promise.all([\r\n                getData(\"/norn-data/stock/historical-quotes/\" + params.row['symbol']+\".json\", fetchStockData),\r\n                getData(\"/norn-data/google-trend/data/\" + params.row['symbol'] + \".json\", fetchGoogleTrendData),\r\n              ]).then((allResponses) => {\r\n                // console.log(allResponses)\r\n                if (allResponses.length === 2 && allResponses[0] !== null && allResponses[1] !== null) {\r\n                  \r\n                  // get all google trend date\r\n                  let allDateByKey = {}\r\n                  const convertGoogleTrendData2DictByDate = (data, key, valueKey) => {\r\n                    data.forEach((val) => {\r\n                      let date = Date.parse(val[\"Date\"])\r\n                      if (!(date in allDateByKey)) {\r\n                        allDateByKey[date] = {}\r\n                      }\r\n                      allDateByKey[date][key] = val[valueKey]\r\n                    })\r\n                  }\r\n                  convertGoogleTrendData2DictByDate(allResponses[0], \"close\", \"Close\")\r\n                  convertGoogleTrendData2DictByDate(allResponses[0], \"volume\", \"Volume\")\r\n                  convertGoogleTrendData2DictByDate(allResponses[1][\"week\"], \"week\", \"Value\")\r\n                  convertGoogleTrendData2DictByDate(allResponses[1][\"month\"], \"month\", \"Value\")\r\n                  convertGoogleTrendData2DictByDate(allResponses[1][\"quarter\"], \"quarter\", \"Value\")\r\n                  convertGoogleTrendData2DictByDate(allResponses[1][\"year\"], \"year\", \"Value\")\r\n                  //console.log(allDateByKey)\r\n                  let allDataArray = []\r\n                  let targetKeys = [\"close\", \"volume\", \"week\", \"month\", \"quarter\", \"year\"]\r\n                  Object.keys(allDateByKey).sort().forEach((key) => {\r\n                    let o = { Date: moment(parseInt(key)).format('MM/DD/YYYY HH:mm:ss') }\r\n                    targetKeys.forEach((val) => {\r\n                      if (val in allDateByKey[key]) {\r\n                        o[val] = allDateByKey[key][val]\r\n                      }\r\n                    })\r\n                    allDataArray.push(o)\r\n                  })\r\n                  //console.log(allDataArray)\r\n                  const title = `${params.row['symbol']} (${params.row['keyword']}) Chart`\r\n                  modalWindowRef.current.popModalWindow(<StockAndTrendDataChart title={title} data={allDataArray} />)\r\n                } else {\r\n                  modalWindowRef.current.popModalWindow(<div>Load some data failed</div>)\r\n                }\r\n              }).catch(() => {\r\n                modalWindowRef.current.popModalWindow(<div>Can't draw google trend with stock price chart</div>)\r\n              })\r\n            }}\r\n          >\r\n            <BarChartSharpIcon color=\"primary\" style={{ fontSize: 40 }} />\r\n          </IconButton>\r\n        ),\r\n        hide: 'Chart' in hideColState ? hideColState['Chart'] : tableColList['Chart'].hide\r\n      },\r\n    ]\r\n  }\r\n\r\n  const fetchStockData = useFetch({ cachePolicy: 'no-cache' })\r\n  const fetchGoogleTrendData = useFetch({ cachePolicy: 'no-cache' })\r\n\r\n  const renderGoogleTrendTable = (config)=>{\r\n    Promise.all([\r\n      getData(\"/norn-data/stock/stat.json\", fetchStockData),\r\n      getData('/norn-data/google-trend/stat.json', fetchGoogleTrendData),\r\n    ]).then((allResponses) => {\r\n      // console.log(allResponses)\r\n      if (allResponses.length === 2 && allResponses[0] !== null && allResponses[1] !== null) {      \r\n        let output = allResponses[1].reduce((result, value, index) => {\r\n          let symbol = value['symbol']\r\n          let stockInfo = allResponses[0][symbol]\r\n          const getRatio = (val, avg) => {\r\n            return avg === 0 ? 0 : val / avg\r\n          }\r\n          let o = {\r\n            id: index,\r\n            symbol: symbol,\r\n            keyword: value['keyword'],\r\n            week3: value['week-3'],\r\n            week3R: getRatio(value['week-3'], value['week-avg']) ,\r\n            month3: value['month-3'],\r\n            month3R: getRatio(value['month-3'], value['month-avg']),\r\n            month7: value['month-7'],\r\n            month7R: getRatio(value['month-7'], value['month-avg']),\r\n            month14: value['month-14'],\r\n            month14R: getRatio(value['month-14'], value['month-avg']),\r\n            quarter7: value['quarter-7'],\r\n            quarter7R: getRatio(value['quarter-7'], value['quarter-avg']),\r\n            quarter14: value['quarter-14'],\r\n            quarter14R: getRatio(value['quarter-14'], value['quarter-avg']),\r\n            quarter21: value['quarter-21'],\r\n            quarter21R: getRatio(value['quarter-21'], value['quarter-avg']),\r\n            year14: value['year-14'],\r\n            year14R: getRatio(value['year-14'], value['year-avg']),\r\n            year21: value['year-21'],\r\n            year21R: getRatio(value['year-21'], value['year-avg']),\r\n            avg: 0,\r\n            avgR: 0,\r\n            close: stockInfo !== undefined && stockInfo !== null && stockInfo['Close'] !== '-' ? stockInfo['Close'] : -Number.MAX_VALUE,\r\n            shortFloat: stockInfo !== undefined && stockInfo !== null && stockInfo['Short Float'] !== '-' ? stockInfo['Short Float'] : -Number.MAX_VALUE,\r\n            PE: stockInfo !== undefined && stockInfo !== null && stockInfo['P/E'] !== '-' ? stockInfo['P/E'] : Number.MAX_VALUE,\r\n            PB: stockInfo !== undefined && stockInfo !== null && stockInfo['P/B'] !== '-' ? stockInfo['P/B'] : Number.MAX_VALUE,\r\n            dividend: stockInfo !== undefined && stockInfo !== null && stockInfo['Dividend %'] !== '-' ? stockInfo['Dividend %'] : -Number.MAX_VALUE,\r\n            high52: stockInfo !== undefined && stockInfo !== null && stockInfo['52W High'] !== '-' ? stockInfo['52W High'] : -Number.MAX_VALUE,\r\n            low52: stockInfo !== undefined && stockInfo !== null && stockInfo['52W Low'] !== '-' ? stockInfo['52W Low'] : -Number.MAX_VALUE,\r\n            perfWeek: stockInfo !== undefined && stockInfo !== null && stockInfo['Perf Week'] !== '-' ? stockInfo['Perf Week'] : -Number.MAX_VALUE,\r\n            perfMonth: stockInfo !== undefined && stockInfo !== null && stockInfo['Perf Month'] !== '-' ? stockInfo['Perf Month'] : -Number.MAX_VALUE,\r\n            perfQuarter: stockInfo !== undefined && stockInfo !== null && stockInfo['Perf Quarter'] !== '-' ? stockInfo['Perf Quarter'] : -Number.MAX_VALUE,\r\n            perfHalfY: stockInfo !== undefined && stockInfo !== null && stockInfo['Perf Half Y'] !== '-' ? stockInfo['Perf Half Y'] : -Number.MAX_VALUE,\r\n            perfYear: stockInfo !== undefined && stockInfo !== null && stockInfo['Perf Year'] !== '-' ? stockInfo['Perf Year'] : -Number.MAX_VALUE,\r\n            perfYTD: stockInfo !== undefined && stockInfo !== null && stockInfo['Perf YTD'] !== '-' ? stockInfo['Perf YTD'] : -Number.MAX_VALUE,\r\n          }\r\n          o.avg = [o.week3, o.month3, o.month7, o.month14, o.quarter7, o.quarter14, o.quarter21, o.year14, o.year21].reduce((a, b) => a + b, 0) / 9.0\r\n          o.avgR = [o.week3R, o.month3R, o.month7R, o.month14R, o.quarter7R, o.quarter14R, o.quarter21R, o.year14R, o.year21R].reduce((a, b) => a + b, 0) / 9.0\r\n          \r\n          if(config.filter_symbols.length === 0 || config.filter_symbols.includes(symbol)) {\r\n            result.push(o)\r\n          }\r\n          return result\r\n        }, [])\r\n\r\n        setRowData(output)\r\n      } else {\r\n        modalWindowRef.current.popModalWindow(<div>Load some data failed</div>)\r\n      }\r\n      loadingAnimeRef.current.setLoading(false)\r\n    }).catch(() => {\r\n      modalWindowRef.current.popModalWindow(<div>Can't get data</div>)\r\n      loadingAnimeRef.current.setLoading(false)\r\n    })\r\n  }\r\n\r\n  const [rowData, setRowData] = useState([])\r\n  const [searchVal, setSearchVal] = useState(\"\")\r\n\r\n  useEffect(() => {\r\n    // componentDidMount is here!\r\n    // componentDidUpdate is here!\r\n    renderGoogleTrendTable({filter_symbols: []})\r\n    return () => {\r\n      // componentWillUnmount is here!\r\n    }\r\n  }, [])\r\n\r\n  return (\r\n    <>\r\n      <div className={googleTrendStocksTableStyle.container}>\r\n        <div className={googleTrendStocksTableStyle.table}>\r\n          <DataGrid rows={rowData} columns={genTableColTemplate()}  components={{ NoRowsOverlay: DefaultDataGridTable, Toolbar: ()=>{\r\n            return <SearchGridToolbar searchVal={searchVal} setSearchVal={setSearchVal} clickCallback={renderGoogleTrendTable} \r\n              info={{\r\n                placeholder: 'Filter symbols: AAPL, BAC, KSS, ...',\r\n                tooltip: {\r\n                  text: GoogleTrendsTooltip,\r\n                  link: GoogleTrendsUrl\r\n                }\r\n              }}\r\n            />\r\n          }}} disableSelectionOnClick onColumnVisibilityChange={(param) => {\r\n            let tempHideColState = hideColState\r\n            tempHideColState[param['field']] = !param['isVisible']\r\n            setHideColState(tempHideColState)\r\n          }}/>\r\n        </div>\r\n      </div>\r\n      <ModalWindow modalWindowRef={modalWindowRef} />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default GoogleTrendStocksTable\r\n","import React, { useRef } from 'react'\r\nimport { StylesProvider } from '@mui/styles'\r\n\r\nimport Layout from '../components/layout'\r\nimport GoogleTrendStocksTable from '../components/google-trend-stocks/googleTrendStocksTable'\r\nimport LoadingAnime from '../components/loadingAnime'\r\nimport SEO from '../components/seo'\r\n\r\nconst GoogleTrendStocksPage = () => {\r\n\r\n  const loadingAnimeRef = useRef({\r\n    getLoading: null,\r\n    setLoading: null\r\n  })\r\n\r\n  return (\r\n    <StylesProvider injectFirst>\r\n      <SEO />\r\n      <Layout >\r\n        <GoogleTrendStocksTable loadingAnimeRef={loadingAnimeRef} />\r\n      </Layout>\r\n      <LoadingAnime loadingAnimeRef={loadingAnimeRef} />\r\n    </StylesProvider>\r\n  )\r\n}\r\n\r\nexport default GoogleTrendStocksPage\r\n"],"sourceRoot":""}